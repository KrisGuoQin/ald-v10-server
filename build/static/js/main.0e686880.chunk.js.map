{"version":3,"sources":["views/manage-listing/image/default.jpg","assets/images/default.jpg","redux/actionTypes.ts","redux/reducers/index.ts","redux/reducers/message.ts","views/review-detail/redux/reducers/index.ts","redux/store.ts","views/review-detail/redux/actionTypes.ts","config/index.ts","components/layout/index.tsx","api/base.ts","api/index.ts","views/login/styles.ts","components/button/index.tsx","views/login/index.tsx","views/register/index.tsx","components/search/index.tsx","views/select-ranch/index.tsx","views/home/header/_styles.ts","views/home/header/index.tsx","views/home/entrance/_styles.ts","views/home/entrance/index.tsx","views/home/report/_chartbox.tsx","views/home/report/_styles.ts","views/home/report/_mock.ts","views/home/report/index.tsx","redux/actions.ts","views/home/index.tsx","components/app-bar/styles.ts","components/app-bar/index.tsx","components/divider/index.tsx","views/tasks/styles.ts","views/tasks/index.tsx","views/tasks-detail/styles.ts","views/tasks-detail/index.tsx","views/reports/_mock.ts","views/reports/index.tsx","views/manage-listing/index.tsx","components/required/index.tsx","views/review-detail/config.ts","components/textarea-upload-img/index.tsx","views/review-detail/styles.ts","views/review-detail/redux/actions.ts","views/review-detail/index.tsx","views/view-cowshed/styles.ts","views/view-cowshed/index.tsx","views/scene-report/index.tsx","views/search-cow/styles.ts","views/search-cow/index.tsx","views/cow-detail/styles.ts","views/cow-detail/index.tsx","views/scene-report-detail/index.tsx","views/common-select-list/styles.ts","views/common-select-list/index.tsx","views/user/index.tsx","components/scroll-to-top/index.tsx","serviceWorker.ts","components/message/index.tsx","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","SAVE_USER_INFO","userInfo","JSON","parse","localStorage","getItem","console","log","initState","isLogin","token","farm_code","defaultState","assesser","label","value","assessDate","DateTime","local","assessDate2","plus","day","type","sub_type","note","photo","cow","cowshed","lf","lb","rf","rb","cowType","results","add_event","rootReducers","combineReducers","messageStore","state","arguments","length","undefined","variant","open","message","action","Object","objectSpread","payload","userInfoStore","setItem","stringify","reviewDetailStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ROUTE_HOME_PATH","baseUrl","useStyles","makeStyles","layout","height","bottomNav","position","width","bottom","zIndex","boxShadow","Component","props","classes","location","history","includes","pathname","react_default","a","createElement","className","BottomNavigation","onChange","e","push","showLabels","BottomNavigationAction","icon","esm_Home","Description","TrendingUp","esm_Search","dispatchMessage","store","dispatch","dispatchToLogin","href","concat","origin","handleError","error","status","throwError","base","url","params","options","formaturl","initUrl","headers","_JSON$parse","farmcode","globalState","getState","useToken","EMPTY","AUTHORIZATION","useFarmCode","useId","id","overrideUrl","entries","map","item","join","ajax","get","pipe","catchError","_JSON$parse2","useJSON","overrideHeaders","post","uploadImgs$","fetchCalfsList$","postAssessTeats$","postAssessLocomotions$","postAssessBcss$","postAssessFaecess$","loginTitle","fontSize","marginTop","loginSubTitle","color","formContainer","margin","codeBtn","minWidth","marginBottom","textField","register","Button","ButtonGroup","onClick","fullWidth","size","aria-label","Button_Button","loading","CircularProgress","style","marginRight","key","loadingTxt","btnText","connect","saveUserInfo","_useState","useState","mobileCode","userNameOrMobile","_useState2","slicedToArray","loginInfo","setLoginInfo","_useState3","_useState4","loginInfoValid","setLoginInfoValid","_useState5","_useState6","setLoading","handleUserInfoChange","name","defineProperty","target","Container","TextField","required","helperText","placeholder","InputProps","endAdornment","InputAdornment","components_button","Boolean","subscription","open_id","_ref","_ref$response","response","subscribe","data","unsubscribe","Grid","container","xs","Link","component","RouterLink","to","registerSuccess","textAlign","changeLoginStatus","loginStatus","setUserNameOrMobile","setMobileCode","hasRegister","setHasRegister","onUserNameOrMobileChange","onMobileCodeChange","root","padding","display","alignItems","backgroundColor","input","marginLeft","flex","iconButton","Search","setValue","inputRef","useRef","handleClickSearch","searchOnValueIsEmpty","searchMethod","useEffect","current","inputSub","fromEvent","Paper","InputBase","inputProps","IconButton","Search_default","title","ranchList","paddingLeft","page","page_size","search","setParams","_React$useState","React","_React$useState2","otherRanchState","setOtherRanchState","checkALD","setCheckALD","aldRanch","setAldRanch","_useState7","_useState8","aldRanchList","setAldRanchList","apiInst","fetchCanUseFarms$","_useState9","_useState10","other","setOtherRanch","justify","Switch","checked","components_search","FormControl","RadioGroup","FormControlLabel","control","Radio","farm_name","labelPlacement","isALD","sessionStorage","theme","aldFarm","palette","primary","main","paddingTop","top","& h4","textWhite","menuItem","header","anchorEl","setAnchorEl","Items","PermIdentity","cb","PowerSettingsNew","userLogin","handleClose","event","currentTarget","MoreVert","Menu","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","homeContainer","overflowY","background","homeContent","paddingBottom","borderTopLeftRadius","borderTopRightRadius","homeContentIcon","searchContainer","Entrance","useDispatch","searchLoading","setSearchLoading","eartag","count","_data$results$","_chartbox","Box","border","borderRadius","borderColor","children","chartTitle","chartContainer","SevenDayOpt","text","textStyle","trigger","axisPointer","legend","grid","left","right","containLabel","xAxis","yAxis","series","stack","report","borderTop","RouteLink","NavigateNext","flexWrap","overflow","lib_default","showMessage","query","String","react_router","entrance","assign","contrastText","fontWeight","inputBox","withRouter","getSearchValue","square","beforeRouteLeave","goBack","ArrowBackIos","useSearch","autoFocus","autofocus","searchPlaceholder","endAdorment","Divider","useTheme","Divider_Divider","selectContainer","contantContainer","img","maxWidth","detailBtn","paper","circularProgressba","circularProgress","Tasks","tasksList","setTasksList","_React$useState3","_React$useState4","setPage","_React$useState5","_React$useState6","next","setNext","_React$useState7","_React$useState8","tabValue","setTabValue","ApiInst","_ref2","_ref3","list","toNowDate","dayjs","run_date","diff","app_bar","Tabs","newValue","indicatorColor","textColor","centered","Tab","i","paddingX","alt","src","require","direction","Typography","gutterBottom","todotask_name","tasker_name","content","divider","ExpandMore","attachment","download","AttachFile","justifyContent","tablecell","table","tableHeader","createData","cowNumber","date","statusLabel","rows","TasksDetail","setData","match","mb","Rating","readOnly","index_esm","styles","buildStyles","pathColor","Table","TableHead","TableRow","TableCell","align","clsx","TableBody","row","hover","views_reports","flexGrow","reviewListContainer","media","RouteParamsType","ald","society","manage_listing","reviewList","RanchType","Card","CardActionArea","CardMedia","image","CardActions","Required","flexbox","deleteIcon","TextAreaAndUploadImg","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","photoFormat","file","preview","URL","createObjectURL","saveReviewDetail","getRootProps","getInputProps","textAreaRequired","labelText","multiline","AddAPhoto","spacing","photoClone","remove_default","forEach","revokeObjectURL","deleteImg","Delete","& p","inputAdornment","btnMargin","btnContainer","lineHeight","CowType","Teats","BCS","Results","ReviewType","0","1","2","3","CowBreastPosition","validateReviewType","formatReviewType","cow_id","assess_time","cow_type","locomotion_score","bcs","fs","pen","info","saveContent","addContent","clearState","postLoading","setPostLoading","_props$match$params","ranchType","reviewType","isCowNo","isTK","LabelText","ResultsList","handleSubmit","OperaFuncMap","retData","postAssessTeatsInst","formdata","FormData","imgFile","append","upload_imgs","handleUploadImgs","concatMap","toString","OperaFunc","Fragment","Input","onFocus","startAdornment","material_ui_pickers_esm","utils","LuxonUtils","locale","format","okLabel","cancelLabel","textarea_upload_img","select","Checkbox","CheckBoxOutlineBlank","checkedIcon","CheckBox","inputAdornment2","actions","TypeList","setTypeList","SubTypeList","setSubTypeList","TitleText","tasker","start_time","activeTypeItem","find","sub_tasktypes","fetchTodoTaskTypes$","err","task_name_lang","shouldDisableDate","toMillis","tableItemWidth","tablePadding","SceneReport","List","setList","tableHeaderCls","getOnsiteAssessments$","listItem","assessr_name","assess_date","assesstype_name","pdf","boxSizing","infoItem","spanLeft","SearchCow","fromMore","_React$useState9","_React$useState10","paramsClone","ButtonBase","pen_name","cbrd","heading","flexBasis","flexShrink","lastExpan","lastDetail","overflowX","tableCell","paddingRight","CowInfo","createEventData","eventname","days","freeze","mark","eventData","CowDetail","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","SceneReportDetail","Type","user","FetchFunc","ownProps","itemValue","setItemValue","searchValue","Label","Params","_ref4","_ref5","LabelMap","of","handleConfirm","infoContent","formControl","editInfoArr","Assignment","NearMe","Smartphone","User","editState","setEditState","userDesc","companyName","companyAddress","mobileNumber","editInfo","setEditInfo","Done","Settings","InputLabel","htmlFor","rootElement","document","getElementById","scrollTo","hostname","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","useStyles1","green","dark","amber","iconVariant","opacity","MySnackbarContentWrapper","objectWithoutProperties","Icon","SnackbarContent","aria-describedby","Close","useStyles2","close","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","createMuiTheme","secondary","ReactDOM","render","es","ThemeProvider","react_router_dom","scroll_to_top","path","Login","Register","SelectRanch","exact","withLayout","Home","ManageList","Reports","ReviewDetail","ViewCowshed","CommonSelectList","components_message","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e686880.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","export const SAVE_USER_INFO: string = 'SAVE_USER_INFO';\n\nexport const SHOW_MESSAGE: string = 'SHOW_MESSAGE';\n","\nimport { SAVE_USER_INFO } from '../actionTypes';\n\nconst userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n\nconsole.log('userInfo', userInfo)\n\nconst initState = {\n    isLogin: false,\n    token: '',\n    farm_code: ''\n};\nif (userInfo.isLogin) {\n    initState.isLogin = userInfo.isLogin;\n    initState.token = userInfo.token;\n    initState.farm_code = userInfo.farm_code;\n    console.log('initState', initState);\n}\nexport default function changeLoginStatus(state = initState, action: any) {\n    switch (action.type) {\n        case SAVE_USER_INFO: {\n            const userInfo = JSON.parse((localStorage.getItem('userInfo') || '{}'));\n            localStorage.setItem('userInfo', JSON.stringify({...userInfo, ...action.payload.userInfo}));\n            return {\n                ...state,\n                ...action.payload.userInfo\n            }\n        }\n        default:\n            return state\n    }\n}","const defaultState = () => ({\n    variant: 'error',\n    open: false,\n    message: ''\n});\n\nexport default function(state = defaultState(), action: any) {\n    switch (action.type) {\n        case 'SHOW_MESSAGE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        case 'CLOSE_MESSAGE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state\n    }\n}","\nimport { DateTime } from 'luxon';\nimport R from 'ramda';\nimport {\n    SAVE_REVIEW_DETAIL,\n    SAVE_CONTENT,\n    ADD_CONTENT,\n    CLEAR_STATE\n} from '../actionTypes';\n\n// const initState = {\n//     // 责任人、评估人\n//     assesser: {\n//         label: '',\n//         value: ''\n//     },\n//     assessDate: DateTime.local(),\n//     type: '', // 牛舍巡棚-任务类型\n//     sub_type: '', // 牛舍巡棚-任务子类型\n//     content: [\n//         {\n//             // 业务备注\n//             note: '',\n//             // 上传图片\n//             photo: [],\n//             // 牛只\n//             cow: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 牛舍\n//             cowshed: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 乳头评估\n//             lf: '',\n//             lb: '',\n//             rf: '',\n//             rb: '',\n//             // 牛类型\n//             cowType: '',\n//             // 行走，粪便评估\n//             results: '',\n//             // 体况评估\n//             locomotionScore: '',\n//         }\n//     ],\n//     add_event: true\n// };\nconst defaultState = () => ({\n        // 责任人、评估人\n    assesser: {\n        label: '',\n        value: ''\n    },\n    assessDate: DateTime.local(),\n    assessDate2: DateTime.local().plus({\n        day: 1\n    }),\n    type: '', // 牛舍巡棚-任务类型\n    sub_type: '', // 牛舍巡棚-任务子类型\n    // 业务备注\n    note: '',\n    // 上传图片\n    photo: [],\n    // 牛只\n    cow: {\n        label: '',\n        value: ''\n    },\n    // 牛舍\n    cowshed: {\n        label: '',\n        value: ''\n    },\n    // 乳头评估\n    lf: '',\n    lb: '',\n    rf: '',\n    rb: '',\n    // 牛类型\n    cowType: '',\n    results: '',\n    add_event: true\n});\n\nexport default function (state = defaultState(), action: any) {\n    switch (action.type) {\n        // case SAVE_CONTENT: {\n        //     const { index } = action.payload;\n        //     const contentClone = R.clone(state.content);\n        //     delete action.payload.index;\n        //     const retData = {\n        //         ...contentClone[index],\n        //         ...action.payload\n        //     };\n        //     contentClone.splice(index, 1, retData);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        // case ADD_CONTENT: {\n        //     const contentItem = {\n        //         // 业务备注\n        //         note: '',\n        //         // 上传图片\n        //         photo: [],\n        //         // 牛只\n        //         cow: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 牛舍\n        //         cowshed: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 乳头评估\n        //         lf: '',\n        //         lb: '',\n        //         rf: '',\n        //         rb: '',\n        //         // 牛类型\n        //         cowType: '',\n        //         // 行走，粪便评估\n        //         results: '',\n        //         // 体况评估\n        //         locomotionScore: '',\n        //     };\n        //     const contentClone = R.clone(state.content);\n        //     contentClone.push(contentItem);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        case SAVE_REVIEW_DETAIL: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        case CLEAR_STATE: {\n            // state.content.forEach(contentItem => {\n            //     contentItem.photo.forEach((item: any) => {\n            //         URL.revokeObjectURL(item.preview);\n            //     })\n            // });\n            return defaultState();\n        }\n        default:\n            return state\n    }\n};","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\nimport userInfoStore from './reducers/index';\nimport messageStore from './reducers/message';\nimport reviewDetailStore from '@/views/review-detail/redux/reducers';\nconst rootReducers = combineReducers({\n    messageStore,\n    userInfoStore,\n    reviewDetailStore\n});\n\nexport default createStore(\n    rootReducers,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);","// 评估人信息\nexport const SAVE_ASSESSER = 'SAVE_ASSESSER';\n// 评估日期\nexport const SAVE_DATE = 'SAVE_DATE';\n// 业务备注\nexport const SAVE_NOTE = 'SAVE_NOTE';\n// 图片信息\nexport const SAVE_IMGS = 'SAVE_IMGS';\n// 牛只信息\nexport const SAVE_COW = 'SAVE_COW';\n// 牛舍信息\nexport const SAVE_COWSHED = 'SAVE_COWSHED';\n// 牛类型\nexport const SAVE_COW_TYPE = 'SAVE_COW_TYPE';\n// 乳头信息\nexport const SAVE_TEATS = 'SAVE_TEATS';\n// 结果信息\nexport const SAVE_RESULTS = 'SAVE_RESULTS';\n// 体况评分结果\nexport const SAVE_LOCOMOTION_SCORE = 'SAVE_LOCOMOTION_SCORE';\n// 评估详情信息\nexport const SAVE_REVIEW_DETAIL = 'SAVE_REVIEW_DETAIL';\n// 修改数组里面某一项值\nexport const SAVE_CONTENT = 'SAVE_CONTENT';\n\n// 修改数组里面某一项值\nexport const ADD_CONTENT = 'ADD_CONTENT';\n\n// 清空数据\nexport const CLEAR_STATE = 'CLEAR_STATE';","\n\nexport const ROUTE_HOME_PATH = [\"/\", \"/home\", \"/index\"];\n\n// export enum ROUTE_PATH_MAP {\n//     HOME_PATH\n//     // kk = \"\",\n// }\nexport const baseHost = 'http://139.196.28.170:8811';\n\n// export const baseUrl = `${baseHost}/zh-hans/api/v1/`;\nexport const baseUrl = `/zh-hans/api/v1/`;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BottomNavigation,\n    BottomNavigationAction\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Home as HomeIcon,\n    Description as DescriptionIcon,\n    TrendingUp as TrendingUpIcon\n} from '@material-ui/icons';\nimport { ROUTE_HOME_PATH } from \"../../config\";\n\nconst useStyles = makeStyles({\n    layout: {\n        height: '100vh'\n    },\n    bottomNav: {\n        position:'fixed',\n        width: '100%',\n        bottom: 0,\n        zIndex: 10,\n        boxShadow: \"0 -1px 5px 0 rgba(58, 59, 59, 0.5)\"\n    },\n});\n\ninterface IProps {\n    location: {\n        pathname: string;\n    },\n    history: {\n        push: (pathname: string) => void;\n    }\n}\n\nexport default (Component: any) => (props: IProps) => {\n    const classes = useStyles();\n    const { location, history } = props;\n    const value = ROUTE_HOME_PATH.includes(location.pathname) ? ROUTE_HOME_PATH[1] : location.pathname;\n\n    return (\n        <div className={classes.layout}>\n            <Component {...props} />\n\n            <BottomNavigation\n                value={value}\n                onChange={(e, pathname) => history.push(pathname)}\n                className={classes.bottomNav}\n                showLabels\n            >\n                <BottomNavigationAction label=\"主页\" value={ROUTE_HOME_PATH[1]} icon={<HomeIcon />} />\n                <BottomNavigationAction label=\"任务\" value=\"/tasks\" icon={<DescriptionIcon />} />\n                <BottomNavigationAction label=\"报表\" value=\"/reports\" icon={<TrendingUpIcon />} />\n                <BottomNavigationAction label=\"查牛\" value=\"/search\" icon={<SearchIcon />} />\n            </BottomNavigation>\n        </div>\n    )\n};\n","import { ajax, AjaxResponse } from 'rxjs/ajax';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY, of, throwError } from 'rxjs';\nimport { baseUrl } from '@/config';\nimport store from '@/redux/store';\n\nconst dispatchMessage = (message: string) => {\n    store.dispatch({\n        type: 'SHOW_MESSAGE',\n        payload: {\n            variant: 'error',\n            message,\n            open: true\n        }\n    });\n};\nconst dispatchToLogin = () => {\n    store.dispatch({\n        type: 'SAVE_USER_INFO',\n        payload: {\n            userInfo: {\n                isLogin: false,\n                token: '',\n                farm_code: ''\n            }\n        }\n    });\n    window.location.href=`${window.location.origin}/#/login`;\n};\nconst handleError = (error: AjaxResponse) => {\n    console.log('handleError', error);\n    if (error && error.status) {\n        switch (error.status) {\n          case 400:\n            dispatchMessage('参数错误');\n            break\n          case 401:\n            dispatchMessage('未授权，请登录');\n            dispatchToLogin();\n            break\n          case 402:\n            dispatchMessage('登录过期，请重新登录');\n            dispatchToLogin();\n            break\n          case 403: dispatchMessage('拒绝访问'); break\n          case 404: dispatchMessage('请求地址出错'); break\n          case 408: dispatchMessage('请求超时'); break\n          case 500: dispatchMessage('服务器内部错误'); break\n          case 501: dispatchMessage('服务未实现'); break\n          case 502: dispatchMessage('网关错误'); break\n          case 503: dispatchMessage('服务不可用'); break\n          case 504: dispatchMessage('网关超时'); break\n          case 505: dispatchMessage('HTTP版本不受支持'); break\n          default: break\n        }\n    }\n    return throwError(error);\n};\nexport default {\n    get(url: string, params: any, options?: ApiOptions) {\n        let initUrl = `${baseUrl}${url}/`;\n        let headers: ApiHeaders = {};\n        let formaturl: string = '';\n        let { token, farm_code: farmcode } = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.userInfoStore.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmcode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmcode}/${url}/`;\n        }\n        if(options && options.useId && options.useFarmCode) {\n            const { id } = params;\n            initUrl = `${baseUrl}${farmcode}/${url}/${id}/`;\n            delete params.id;\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmcode });\n        }\n        \n        formaturl = `${initUrl}?${Object.entries(params).map(item => item.join('=')).join('&')}`;\n\n        return ajax.get(formaturl, headers).pipe(\n            catchError(handleError)\n        );\n    },\n    post(url: string, params: object | string, options?: ApiOptions) {\n        let headers: ApiHeaders = {};\n        let initUrl = `${baseUrl}${url}/`;\n        const { token, farm_code: farmcode } = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.userInfoStore.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmcode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmcode}/${url}/`\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmcode });\n        }\n        if(options && options.useJSON) {\n            headers['content-type'] = 'application/json';\n        }\n        if(options && options.overrideHeaders) {\n            headers = options.overrideHeaders(headers);\n        }\n        return ajax.post(initUrl, params, headers).pipe(\n            catchError(handleError)\n        );\n    }\n}","import base from './base';\n\nexport const loginIn$ = (params: object) => base.post('jauth', params, { useToken: false });\n\nexport const fetchCanUseFarms$ = (params: object) => base.get('farms', params, { useToken: true });\n\nexport const uploadImgs$ = (params: object) => base.post('imagesupload', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表\nexport const fetchTodoTaskRuns$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表单项明细(完工单明细)\nexport const fetchTodoTaskRunsDetail$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true, useId: true });\n\n// 用户列表\nexport const fetchUsersList$ = (params: object) => base.get('users', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛号列表\nexport const fetchCowlitesList$ = (params: object) => base.get('cowlites', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛舎列表\nexport const fetchPensList$ = (params: object) => base.get('pens', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息列表\nexport const fetchCalfsList$ = (params: object) => base.get('cows', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息详情\nexport const fetchCalfsDetail$ = (params: any) => {\n    const options = {\n        useFarmCode: true,\n        useToken: true,\n        useId: true\n    }\n\n    return base.get('cows', params, options);\n};\n\n// 牛舍巡棚页面\n// 任务类型\nexport const fetchTodoTaskTypes$ = (params: object = {}) => base.get('todotasktypes', params, { useFarmCode: false, useToken: true });\n\n// 乳头评分\nexport const postAssessTeats$ = (params: object | string) => base.post('assessteats', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 行走评分\nexport const postAssessLocomotions$ = (params: object | string) => base.post('assesslocomotions', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 体况评分\nexport const postAssessBcss$ = (params: object | string) => base.post('assessbcss', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 粪便评分\nexport const postAssessFaecess$ = (params: object | string) => base.post('assessfaecess', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 牛舍巡棚\nexport const postMTodoTasks$ = (params: object | string) => base.post('mtodotasks', params, { useToken: true, useFarmCode: true, useJSON: true });\n\n// 现场报告-清单\nexport const getOnsiteAssessments$ = (params: object | string) => base.get('onsiteassessments', params, { useToken: true, useFarmCode: true });\n","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    loginSubTitle: {\n        fontSize: '16px',\n        color: '#ccc'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px',\n        marginBottom: 2\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    }\n});\nexport default useStyles;","import React from 'react';\nimport { Button as MButton, CircularProgress, ButtonGroup } from '@material-ui/core';\n\ninterface IProps {\n    loading: boolean;\n    loadingTxt?: string;\n    btnText: string;\n    onClick?: () => void;\n    className?: string | undefined;\n}\n\nconst Button: React.FC<IProps> = props => {\n\n    return (\n        <ButtonGroup\n            onClick={() => props.onClick && props.onClick()}\n            className={props.className}\n            fullWidth\n            size=\"medium\"\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"Full width outlined button group\"\n        >\n            <MButton>\n                <Choose>\n                    <When condition={props.loading}>\n                        <CircularProgress size={18} color=\"secondary\" style={{\n                            marginRight: '10px'\n                        }} />\n                        {\n                            props.loadingTxt || '正在操作中...'\n                        }\n                    </When>\n                    <Otherwise>\n                        {props.btnText}\n                    </Otherwise>\n                </Choose>\n            </MButton>\n        </ButtonGroup>\n    )\n}\nexport default Button;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\nimport {\n    Container,\n    TextField,\n    InputAdornment,\n    Grid,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { map } from 'rxjs/operators';\nimport { loginIn$ } from '@/api';\nimport useStyles from './styles';\nimport MButton from '@/components/button';\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveUserInfo: (userInfo: object) => dispatch({\n            type: 'SAVE_USER_INFO',\n            payload: {\n                userInfo\n            }\n        })\n    }\n};\nconst mapStateToProps = (state: any) => {\n    const { userInfoStore } = state;\n    return {\n        isLogin: userInfoStore.isLogin\n    }\n};\n\ninterface State {\n    mobileCode: string;\n    userNameOrMobile: string;\n}\ninterface StateValid {\n    mobileCode: boolean;\n    userNameOrMobile: boolean;\n}\nconst Login: React.FC = (props: any) => {\n    const [loginInfo, setLoginInfo] = useState<State>({\n        mobileCode: '1234',\n        userNameOrMobile: 'test'\n    });\n    const [loginInfoValid, setLoginInfoValid] = useState<StateValid>({\n        mobileCode: true,\n        userNameOrMobile: true\n    });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n\n    const handleUserInfoChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setLoginInfo({...loginInfo, [name]: e.target.value})\n    }\n    const handleLogin = () => {\n        setLoginInfoValid({\n            mobileCode: Boolean(loginInfo.mobileCode),\n            userNameOrMobile: Boolean(loginInfo.userNameOrMobile)\n        });\n        if (!loginInfo.mobileCode || !loginInfo.userNameOrMobile) {\n            return\n        }\n        setLoading(true);\n        const Params = {\n            'open_id': '8e248087-bf06-4046-86d3-25d5c96018f2'\n        };\n        const subscription = loginIn$(Params).pipe(\n            map(({ response = {}}) => response)\n        ).subscribe(\n            data => {\n                setLoading(false);\n                subscription.unsubscribe();\n                props.saveUserInfo({\n                    ...data,\n                    isLogin: true\n                });\n                props.history.push('/selectRanch');\n            },\n            error => {\n                console.log('error', error);\n                setLoading(false);\n                subscription.unsubscribe();\n            }\n        )\n    }\n    return (\n        <Container >\n            {/* <If condition={props.isLogin}>\n                <Redirect to=\"/home\" />\n            </If> */}\n            <h1 className={`${classes.loginTitle} text-center`}>\n                登录阿拉钉牧场\n            </h1>\n            <h4 className={`${classes.loginSubTitle}  text-center`}>\n                请用您的手机号或者账号登陆\n            </h4>\n            <div className={classes.formContainer}>\n                <TextField\n                    required\n                    error={!loginInfoValid.userNameOrMobile}\n                    helperText={ !loginInfoValid.userNameOrMobile ? \"请输入手机号/账号\" : \"\"}\n                    className={classes.textField}\n                    onChange={handleUserInfoChange('userNameOrMobile')}\n                    value={loginInfo.userNameOrMobile}\n                    placeholder=\"手机号/账号\"\n                    fullWidth\n                />\n                <TextField\n                    error={!loginInfoValid.mobileCode}\n                    helperText={ !loginInfoValid.mobileCode ? \"请输入验证码\" : \"\"}\n                    className={classes.textField}\n                    onChange={handleUserInfoChange('mobileCode')}\n                    value={loginInfo.mobileCode}\n                    placeholder=\"验证码\"\n                    fullWidth\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" className={classes.codeBtn} size=\"small\" color=\"primary\">\n                                    获取验证码\n                                </Button>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <MButton\n                    className={classes.textField}\n                    loading={loading}\n                    loadingTxt=\"登录中\"\n                    onClick={handleLogin}\n                    btnText=\"登录\"\n                />\n            </div>\n            <Grid container className={classes.register}>\n                <Grid item xs={2} >\n                    \n                </Grid>\n                <Grid item xs={6} >\n                    <span>我还没有账号</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <Link component={RouterLink} to=\"/register\"> 我要注册 </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        changeLoginStatus: (loginStatus: boolean) => dispatch({\n            type: 'CHANGE_LOGIN_STATUS',\n            payload: {\n                loginStatus\n            }\n        })\n    }\n}\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    },\n    registerSuccess: {\n        width: '85%',\n        margin: '15vh auto 0',\n        color: '#999',\n        textAlign: 'center',\n        fontSize: '14px'\n    }\n});\n\nconst Register: React.FC = (props: any) => {\n    const [userNameOrMobile, setUserNameOrMobile] = useState('');\n    const [mobileCode, setMobileCode] = useState('');\n    const [hasRegister, setHasRegister] = useState(false);\n    const classes = useStyles();\n\n    const onUserNameOrMobileChange = (e: any) => {\n        setUserNameOrMobile(e.target.value);\n    }\n    const onMobileCodeChange = (e: any) => {\n        setMobileCode(e.target.value);\n    }\n    const handleLogin = () => {\n        props.changeLoginStatus(true)\n        setHasRegister(true)\n    }\n    const toHome = () => {\n        props.history.push('/')\n    }\n    return (\n        <Container >\n            <h1 className={`${classes.loginTitle} text-center`}>\n                阿拉钉牧业通用平台\n            </h1>\n            <Choose>\n                <When condition={!hasRegister}>\n                    <div className={classes.formContainer}>\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onUserNameOrMobileChange(e)}\n                            placeholder=\"录入您的手机号\"\n                            fullWidth\n                            // InputProps={{\n                            //     startAdornment: (\n                            //         <InputAdornment position=\"start\">\n                            //             <AccountCircle />\n                            //         </InputAdornment>\n                            //     )\n                            // }}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onMobileCodeChange(e)}\n                            // label=\"手机号/账号\"\n                            placeholder=\"验证码\"\n                            fullWidth\n                            InputProps={{\n                                // startAdornment: (\n                                //     <InputAdornment position=\"start\">\n                                //         <AccountCircle />\n                                //     </InputAdornment>\n                                // ),\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <Button variant=\"contained\" className={classes.codeBtn} size=\"small\" color=\"primary\">\n                                            获取验证码\n                                        </Button>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onUserNameOrMobileChange(e)}\n                            // label=\"手机号/账号\"\n                            placeholder=\"录入您的牧场/企业\"\n                            fullWidth\n                            // InputProps={{\n                            //     startAdornment: (\n                            //         <InputAdornment position=\"start\">\n                            //             <AccountCircle />\n                            //         </InputAdornment>\n                            //     )\n                            // }}\n                        />\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                        >\n                            <Button\n                                onClick={() => handleLogin()}\n                            >\n                                注册\n                            </Button>\n                        </ButtonGroup>\n                        <Grid container className={classes.register}>\n                            <Grid item xs={1} >\n                                \n                            </Grid>\n                            <Grid item xs={7} >\n                                <span>已经有账户</span>\n                            </Grid>\n                            <Grid item xs={4} className=\"text-center\">\n                                <Link component={RouterLink} to=\"/login\">登录</Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </When>\n                <Otherwise>\n                    <div className={classes.registerSuccess}>\n                        <h3>欢迎使用，有任何问题请致电：</h3>\n                        <h3>18621812625</h3>\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                        >\n                            <Button\n                                onClick={() => toHome()}\n                            >\n                                继续\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Otherwise>\n            </Choose>\n        </Container>\n    );\n}\nexport default connect(null, mapDispatchToProps)(Register)","import React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n        // marginBottom: 20\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n    },\n    iconButton: {\n      padding: 5,\n    }\n});\n\ninterface SearchProps {\n    loading?: boolean;\n    searchMethod?: any;\n    placeholder?: string;\n    searchOnValueIsEmpty: boolean;\n    onSearchChange?:() => void;\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const handleClickSearch = () => {\n        if (!props.searchOnValueIsEmpty && !value) {\n            return;\n        }\n        props.searchMethod && props.searchMethod(value);\n    };\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        const inputSub = fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                if(!props.searchOnValueIsEmpty && !value) return;\n                props.searchMethod && props.searchMethod(value);\n            }\n        );\n        return () => inputSub.unsubscribe()\n    },[inputRef, handleClickSearch]);\n\n    return (\n        <Paper className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={props.placeholder}\n                inputProps={{ 'aria-label': '搜索阿拉钉牧场' }}\n                inputRef={inputRef}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                type=\"search\"\n            />\n            <Choose>\n                <When condition={props.loading}>\n                    <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                    >\n                        <CircularProgress size={21} color=\"primary\" />\n                    </IconButton>\n                </When>\n                <Otherwise>\n                <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                        onClick={handleClickSearch}\n                    >\n                        <SearchIcon\n                            color={ value ? 'primary' : 'disabled'}\n                        />\n                    </IconButton>\n                </Otherwise>\n            </Choose>\n        </Paper>\n    )\n}\nexport default Search;","import React,{ useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { map } from 'rxjs/operators';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Grid,\n    Switch,\n    TextField,\n    Button,\n    ButtonGroup,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormControlLabel\n} from '@material-ui/core';\nimport Search from '@/components/search/index';\nimport { fetchCanUseFarms$ } from '@/api';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    container: {\n        width: '85%',\n        margin: '15vh auto 0'\n    },\n    title: {\n        fontSize: '20px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    ranchList: {\n        paddingLeft: 10,\n        marginTop: 10\n    }\n});\n\ninterface aldRanchItem {\n    farm_code: string;\n    farm_name: string;\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveUserInfo: (userInfo: object) => dispatch({\n            type: 'SAVE_USER_INFO',\n            payload: {\n                userInfo\n            }\n        })\n    }\n};\nconst SelectRanch = (props: any) => {\n    const classes = useStyles();\n    const [params, setParams] = useState({\n        page: 1,\n        page_size: 1000,\n        search: ''\n    });\n    const [otherRanchState, setOtherRanchState] = React.useState(false);\n    const [checkALD, setCheckALD] = useState(true);\n    const [aldRanch, setAldRanch] = useState('');\n    const [aldRanchList, setAldRanchList] = useState<aldRanchItem[]>([]);\n\n    useEffect(() =>  {\n        const apiInst =  fetchCanUseFarms$(params).pipe(\n            map(({ response = {} }) => (response.results || []))\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setAldRanchList(data);\n                setAldRanch((data[0] && data[0].farm_code) || '');\n            },\n            error => {\n                console.log('error', error);\n            }\n        )\n        return () => {\n            apiInst.unsubscribe();\n        }\n    }, [params]);\n\n    const handleChange = (e: any) => {\n        setCheckALD(e.target.checked)\n    };\n\n    const handleALDRanchChange = (e: any) => {\n        setAldRanch(e.target.value)\n    }\n\n    const [other, setOtherRanch] = useState(\"\");\n    const handleInputOtherRanch = (e: any) => {\n        setOtherRanch(e.target.value);\n    }\n\n    const jumpToHome = () => {\n        let isALD = \"0\";\n        if (checkALD) {\n            isALD = \"1\";\n            props.saveUserInfo({farm_code: aldRanch});\n        } else {\n            setOtherRanchState(!other);\n            if (!other) return;\n        }\n        props.history.push(`/home?isALD=${isALD}`);\n        sessionStorage.setItem(\"isALD\", isALD);\n    };\n\n    return (\n        <div className=\"select-ranch-wrapper\">\n            <div className=\"select-ranch-container\">\n                <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Grid item xs={8}>\n                        <h1 className={classes.title}>登陆阿拉钉牧场</h1>\n                    </Grid>\n                    <Grid item xs={4} className=\"text-right\">\n                        <Switch\n                            checked={checkALD}\n                            color=\"primary\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Choose>\n                    <When condition={checkALD}>\n                        <Search\n                            searchMethod={(search: string) => setParams({\n                                ...params,\n                                search\n                            })}\n                            searchOnValueIsEmpty={true}\n                        />\n                        <FormControl component=\"fieldset\" className={classes.ranchList}>\n                            <RadioGroup aria-label=\"position\" name=\"position\" value={aldRanch} onChange={handleALDRanchChange}>\n                                {\n                                    aldRanchList.map(item => (\n                                        <FormControlLabel\n                                            key={item.farm_code}\n                                            value={item.farm_code}\n                                            control={<Radio color=\"primary\" />}\n                                            label={item.farm_name}\n                                            labelPlacement=\"end\"\n                                        />\n                                    ))\n                                }\n                            </RadioGroup>\n                        </FormControl>\n                    </When>\n                    <Otherwise>\n                        <TextField\n                            error={otherRanchState}\n                            className={classes.textField}\n                            placeholder=\"录入您的牧场名称,如XXX牧场\"\n                            fullWidth\n                            value={other}\n                            onChange={handleInputOtherRanch}\n                            helperText={otherRanchState ? \"请录入您的牧场名称\" : \"\"}\n                        />\n                    </Otherwise>\n                </Choose>\n                <ButtonGroup\n                    className={classes.textField}\n                    fullWidth\n                    size=\"medium\"\n                    onClick={jumpToHome}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"Full width outlined button group\"\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, mapDispatchToProps)(SelectRanch)","\n/**\n * Home Page Header Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme: any) => ({\n    aldFarm: {\n        height: '20vh',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        paddingTop: 20,\n        width: '100%',\n        top: 0,\n        \"& h4\": {\n            marginTop: 0,\n            marginBottom: 0\n        },\n        position: 'fixed'\n    },\n    textWhite: {\n        color: 'white'\n    },\n    menuItem: {\n        width: 80\n    }\n}));\n","/**\n * Home Page Header Area \n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Container, Grid, IconButton, Link, Menu, MenuItem } from '@material-ui/core';\nimport {\n    PermIdentity,\n    MoreVert as MoreVertIcon,\n    PowerSettingsNew\n} from '@material-ui/icons';\nimport useStyles from \"./_styles\";\nimport props from \"ramda/es/props\";\n\nconst ITEM_HEIGHT = 48;\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const Items = [\n        {\n            label: '我的',\n            component: <PermIdentity color=\"primary\" />,\n            cb() {\n                props.history.push('/user')\n            }\n        },\n        {\n            label: '退出',\n            component: <PowerSettingsNew color=\"primary\" />,\n            cb() {\n                props.userLogin({\n                    userInfo: {\n                        isLogin: false,\n                        token: '',\n                        farm_code: ''\n                    }\n                });\n                props.history.push('/login')\n            }\n        }\n    ];\n    function handleMenuItemClick(cb: () => void) {\n        handleClose();\n        cb();\n    }\n    function handleClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n    return (\n        <Container className={classes.aldFarm}>\n            <Grid container>\n                <Grid item xs={8}>\n                    <h4>ALDFarm</h4>\n                    <h4>连接牧场一切信息</h4>\n                </Grid>\n                <Grid item xs={4} className=\"text-right\">\n                    <IconButton\n                        aria-label=\"user\"\n                        className={classes.textWhite}\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                </Grid>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                        },\n                    }}\n                >\n                    {Items.map(option => (\n                        <MenuItem\n                            key={option.label}\n                            onClick={() => handleMenuItemClick(option.cb)}\n                        >\n                            {option.component} {option.label}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </Grid>\n        </Container>\n    );\n};\n","\n/**\n * Home Page entrance Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    homeContainer: {\n        height: '100vh',\n        overflowY: 'auto',\n        background: '#fff'\n    },\n    homeContent: {\n        marginTop: 85,\n        paddingTop: 30,\n        paddingBottom: 20,\n        zIndex: 5,\n        position: 'relative',\n        background: '#fff',\n        textAlign: 'center',\n        borderTopLeftRadius: '45px 45px',\n        borderTopRightRadius: '45px 45px',\n    },\n    homeContentIcon: {\n    },\n    searchContainer: {\n        width: '85%',\n        margin: '0 auto'\n    }\n});\n","/**\n * Home Page other page entrance area\n */\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Container, Grid, Link } from '@material-ui/core';\nimport { Description } from '@material-ui/icons';\nimport Search from '@/components/search/index';\nimport useStyles from \"./_styles\";\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\n\ninterface IProps {\n    isALD: string;\n}\n\nconst Entrance: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [searchLoading, setSearchLoading] = useState(false);\n\n    const searchMethod = (eartag: string) => {\n        console.log('eartag', eartag)\n        if (!eartag) {\n            dispatch({\n                type: 'SHOW_MESSAGE',\n                payload: {\n                    open: true,\n                    message: '请输入牛号',\n                    variant: 'warning'\n                }\n            });\n            return;\n        }\n        const params = {\n            page: 1,\n            page_size: 10,\n            eartag\n        };\n        setSearchLoading(true);\n        const apiInst = fetchCalfsList$(params).pipe(\n            map(({ response }) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                apiInst.unsubscribe();\n                setSearchLoading(false);\n                if (data.count === 1) {\n                    const { id, eartag } = data.results[0];\n                    props.history.push(`/cowDetail/${id}?eartag=${eartag}`)\n                } else {\n                    dispatch({\n                        type: 'SHOW_MESSAGE',\n                        payload: {\n                            open: true,\n                            message: '未搜到该牛号的牛只!',\n                            variant: 'warning'\n                        }\n                    });\n                }\n            },\n            error => {\n                setSearchLoading(true);\n            }\n        );\n    };\n\n    return (\n        <Container className={classes.homeContent}>\n            <div\n                className={classes.searchContainer}\n            >\n                <Search\n                    placeholder=\"搜索牛只\"\n                    searchMethod={searchMethod}\n                    loading={searchLoading}\n                    searchOnValueIsEmpty={false}\n                />\n            </div>\n            <Grid justify=\"center\" container >\n                <Choose>\n                    <When condition={props.isALD === \"1\"}>\n                        <Grid item xs={6} >\n                                <Link component={RouterLink} to=\"/manageList/ald\">\n                                    <div className=\"home-entrance-wrapper\">\n                                        <Description className=\"fs-36-it\" />\n                                        <div >\n                                            阿拉钉评估\n                                        </div>\n                                    </div>\n                                </Link>\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs={6}>\n                            <Link component={RouterLink} to=\"/manageList/society\">\n                                <div className=\"home-entrance-wrapper\">\n                                    <Description className=\"fs-36-it\" />\n                                    <div>\n                                        社会牧场评估\n                                    </div>\n                                </div>\n                            </Link>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/tasks\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                任务清单\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                现场报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                分析报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\nexport default Entrance;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nexport default function(props: any) {\n    return (\n        <Box\n            border={1}\n            borderRadius=\"borderRadius\"\n            borderColor=\"#ccc\"\n            flex=\"0 0 85%\"\n            margin=\"0 10px\"\n        >\n            {props.children}\n        </Box>\n    )\n};\n","/**\n * Home Page Reports Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    chartTitle: {\n        fontSize: '1rem',\n        color: '#111',\n        paddingLeft: '15px'\n    },\n    chartContainer: {\n        color: '#999',\n        padding: '0 0 90px',\n    }\n});\n","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","/**\n * Home Page Reports Area\n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Grid, IconButton, Box, Link } from '@material-ui/core';\nimport ReactEcharts from 'echarts-for-react';\nimport { NavigateNext } from '@material-ui/icons';\nimport ChartBox from './_chartbox';\nimport useStyles from \"./_styles\";\nimport { SevenDayOpt } from './_mock';\n\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            className={classes.chartContainer}\n            borderTop={1}\n            borderColor=\"#ccc\"\n        >\n            <Grid container alignItems=\"center\" className={classes.chartTitle}>\n                <Grid item xs>预警报表</Grid>\n                <Grid item xs={2} className=\"text-right\">\n                    <Link component={RouteLink} to=\"/reports\">\n                        <IconButton>\n                            <NavigateNext />\n                        </IconButton>\n                    </Link>\n                </Grid>\n            </Grid>\n            <Box\n                display=\"flex\"\n                flexWrap=\"nowrap\"\n                overflow=\"scroll\"\n            > \n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n            </Box>\n        </Box>\n    );\n};\n","import {\n    SAVE_USER_INFO,\n    SHOW_MESSAGE\n} from './actionTypes';\n\nexport const userLogin = (userInfo: object) => ({\n    type: SAVE_USER_INFO,\n    payload: {\n        ...userInfo\n    }\n});\n\nexport const showMessage = (payload: object) => ({\n    type: SHOW_MESSAGE,\n    payload\n});","import React from 'react';\n// import qs from \"querystring\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport url from \"url\";\nimport { makeStyles } from '@material-ui/styles';\nimport HomeHeader from \"./header\";\nimport Entrance from \"./entrance\";\nimport Reports from \"./report\";\nimport \"./index.scss\";\nimport { userLogin } from '@/redux/actions';\n\nconst useStyles = makeStyles({\n    homeContainer: {\n        // height: '100vh',\n        // overflowY: 'auto',\n        background: '#fff'\n    }\n});\n\ninterface IProps{ \n    isLogin: boolean;\n}\nconst mapStateToProps = (state: any) => {\n    const { userInfoStore } = state;\n    return {\n        isLogin: userInfoStore.isLogin\n    }\n};\nconst Home: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const { query } = url.parse(props.location.search, true);\n    const isALD= String(query.isALD || sessionStorage.getItem(\"isALD\") || \"0\");\n\n    return (\n        <div className={classes.homeContainer}>\n            <If condition={!props.isLogin}>\n                <Redirect to=\"/login\" />\n            </If>\n            <HomeHeader {...props} />\n            <Entrance isALD={isALD} {...props} />\n            <Reports />\n        </div>\n    )\n};\nexport default connect(mapStateToProps, { userLogin })(Home)","import { \n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        height: 48,\n        fontSize: '1rem',\n        textAlign: 'center',\n        color: theme.palette.primary.contrastText,\n        position: 'fixed',\n        fontWeight: 'bolder',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10\n    },\n    icon: {\n        color: '#fff'\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n        color: '#fff'\n    },\n    iconButton: {\n        padding: 10,\n        color: '#fff'\n    },\n    inputBox: {\n        color: '#fff'\n    }\n}));\nexport default useStyles;","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Grid,\n    CircularProgress,\n    IconButton,\n    Paper,\n    InputBase\n} from '@material-ui/core';\nimport {\n    ArrowBackIos,\n    Search as SearchIcon\n} from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport useStyles from './styles';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface IProps extends RouteComponentProps {\n    title: string;\n    endAdorment?: JSX.Element;\n    useSearch?: boolean;\n    autofocus?: boolean;\n    searchPlaceholder?: string;\n    searchLoading?: boolean;\n    getSearchValue?: (val: string) => void;\n    beforeRouteLeave?: () => void;\n}\n\nconst  AppBar: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const handleClickBack = () => {\n        props.beforeRouteLeave && props.beforeRouteLeave();\n        props.history.goBack();\n    };\n    const handleClickSearch = () => {\n        props.getSearchValue && props.getSearchValue(value);\n    };\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        let inputSub: any = null;\n        inputSub = current && fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                props.getSearchValue && props.getSearchValue(value);\n            }\n        );\n        return () => inputSub && inputSub.unsubscribe();\n    },[inputRef, handleClickSearch]);\n\n    return (\n        <Paper className={classes.root} square={true}>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <IconButton onClick={() => handleClickBack()}>\n                        <ArrowBackIos className={classes.icon} />\n                    </IconButton>\n                </Grid>\n                <Choose>\n                    <When condition={!props.useSearch}>\n                        <Grid item xs>\n                            {props.title}\n                        </Grid>\n                        <Grid item xs={2}>\n                            {props.endAdorment}\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs=\"auto\" className={classes.inputBox}>\n                            <InputBase\n                                autoFocus={props.autofocus}\n                                type=\"search\"\n                                inputRef={inputRef}\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                className={classes.input}\n                                placeholder={props.searchPlaceholder}\n                                inputProps={{ 'aria-label': props.searchPlaceholder }}\n                            />\n                            <Choose>\n                                <When condition={props.searchLoading}>\n                                    <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                    >\n                                        <CircularProgress size={20} color=\"secondary\" />\n                                    </IconButton>\n                                </When>\n                                <Otherwise>\n                                <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                        onClick={handleClickSearch}\n                                    >\n                                        <SearchIcon\n                                             color=\"secondary\"\n                                        />\n                                    </IconButton>\n                                </Otherwise>\n                            </Choose>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default withRouter(AppBar);","import React from 'react';\nimport { Divider as MDivider } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Divider: React.FC = (props: any) => {\n    const theme = useTheme();\n    return (\n        <MDivider style={{ backgroundColor: theme.palette.primary.main }} />\n    )\n}\nexport default Divider","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    selectContainer: {\n        position: 'fixed',\n        top: 48,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.12)'\n    },\n    contantContainer: {\n        marginTop: 110,\n        paddingBottom: 70\n    },\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    Paper,\n    Container,\n    Typography,\n    CircularProgress,\n    Tabs,\n    Tab\n} from '@material-ui/core';\nimport {\n    ExpandMore,\n    AttachFile\n} from '@material-ui/icons';\nimport { map } from 'rxjs/operators';\nimport dayjs from 'dayjs';\n// import { ListView } from 'antd-mobile';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport useStyles from './styles';\nimport { fetchTodoTaskRuns$ } from '@/api';\n\nconst Tasks: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n    const [tasksList, setTasksList] = React.useState([]);\n    const [page, setPage] = React.useState(1);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [tabValue, setTabValue] = useState(3);\n    const dispatch = useDispatch();\n    \n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n    }\n\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n\n    React.useEffect(() => {\n        setLoading(true);\n        const ApiInst = fetchTodoTaskRuns$({page, page_size: 10}).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next]),\n            map(([list, next]) => {\n                const tasksList =  list.map((item: any) => {\n                    return {\n                        ...item,\n                        toNowDate: dayjs(item.run_date).diff(dayjs(), 'day')\n                    }\n                });\n                return [tasksList, next];\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setTasksList(tasksList.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [page]);\n\n    return (\n        <Box>\n            <AppBar title=\"任务清单\" />\n            <Box className={classes.selectContainer}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"繁殖\" />\n                    <Tab label=\"保健\" />\n                    <Tab label=\"营养\" />\n                    <Tab label=\"任务\" />\n                </Tabs>\n            </Box>\n            <Choose>\n                <When condition={tabValue !== 3} >\n                    <Container className={classes.contantContainer}>\n                        <Box className=\"text-center\" marginTop=\"20px\"fontSize=\"12px\">\n                            没有更多了\n                        </Box>\n                    </Container>\n                </When>\n                <Otherwise>\n                    <Container className={classes.contantContainer}>\n                        {\n                            tasksList.map((item: any, i) => (\n                                <Paper className={classes.paper} key={`tasks-item-${i}`}>\n                                    <Box position=\"relative\">\n                                        <Grid container>\n                                            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                                                <Box paddingX=\"5px\">\n                                                    <img\n                                                        className={classes.img}\n                                                        alt=\"complex\"\n                                                        src={item.photo ? item.photo : require('../../assets/images/default.jpg')}\n                                                    />\n                                                </Box>\n                                            </Grid>\n                                            <Grid item xs={10} container>\n                                                <Grid item xs=\"auto\" container direction=\"column\">\n                                                    <Grid item xs>\n                                                        <Typography gutterBottom variant=\"subtitle1\">\n                                                            {item.run_date}\n                                                        </Typography>\n                                                        <Typography variant=\"subtitle2\" gutterBottom>\n                                                            <Box fontSize=\"12px\">\n                                                                任务名称：{item.todotask_name}\n                                                            </Box>\n                                                            <Box fontSize=\"12px\">\n                                                                责任人：{item.tasker_name}\n                                                            </Box>\n                                                            <Box fontSize=\"12px\">\n                                                                任务描述：{item.content}\n                                                            </Box>\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Divider />\n                                                        <Typography variant=\"subtitle2\" gutterBottom>\n                                                            <IconButton\n                                                                onClick={() => props.history.push(`/tasksDetail/${item.id}`)}\n                                                                className={classes.detailBtn}>\n                                                                <Box fontSize=\"12px\"\n                                                            >\n                                                                    明细\n                                                                </Box>\n                                                                <ExpandMore color=\"primary\" />\n                                                            </IconButton>\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Box\n                                            position=\"absolute\"\n                                            right=\"0%\"\n                                            top=\"10%\"\n                                        >\n                                            <Choose>\n                                                <When condition={item.attachment}>\n                                                    <a href={item.attachment} download>\n                                                        <IconButton>\n                                                            <AttachFile color=\"primary\" />\n                                                        </IconButton>\n                                                    </a>\n                                                </When>\n                                                <Otherwise>\n                                                    <IconButton onClick={() => dispatch({\n                                                        type: 'SHOW_MESSAGE',\n                                                        payload: {\n                                                            open: true,\n                                                            variant: 'warning',\n                                                            message: '无可用附件下载'\n                                                        }\n                                                    })}>\n                                                        <AttachFile color=\"primary\" />\n                                                    </IconButton>\n                                                </Otherwise>\n                                            </Choose>\n                                        </Box>\n                                    </Box>\n                                </Paper>\n                            ))\n                        }\n                        <Choose>\n                            <When condition={loading}>\n                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                                    <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                                </Box>\n                            </When>\n                            <Otherwise>\n                                <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                                    {next ? '点击加载更多' : '没有更多了'}\n                                </Box>\n                            </Otherwise>\n                        </Choose>\n                    </Container>\n                </Otherwise>\n            </Choose>\n        </Box>\n    );\n}\nexport default Tasks;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    circularProgressba: {\n        width: 50\n    },\n    root: {\n        height: '23vh',\n        padding: 10,\n        paddingTop: 50\n    },\n    tablecell: {\n        padding: '10px 5px'\n    },\n    table: {\n        background: '#fff'\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Grid,\n    Divider,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport clsx from 'clsx';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport AppBar from '@/components/app-bar';\nimport { fetchTodoTaskRunsDetail$ as fetchData$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport useStyles from './styles';\n\nfunction createData(cowNumber: string, cowshed: string, date: string, statusLabel: string) {\n    return { cowNumber, cowshed, date, statusLabel };\n}\n  \nconst rows = [\n    createData('1001', '2号棚', '2019-03-10', '是'),\n    createData('1002', '2号棚', '2019-03-10', '否'),\n    createData('1003', '2号棚', '2019-03-10', '是')\n];\nconst TasksDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [Data, setData] = React.useState([]);\n\n    React.useEffect(() => {\n        const id = props.match.params.id;\n        const ApiInst = fetchData$({id}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setData(data);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <Box>\n            <AppBar title=\"完工单明细\" />\n            <Grid container className={classes.root} alignItems=\"center\">\n                <Grid item xs>\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                    <Box fontSize={12}>任务 100， 完成 75</Box>\n                    <Rating name=\"half-rating\" value={75 * 5 / 100} readOnly />\n                </Box>\n                </Grid>\n                <Grid item  xs=\"auto\">\n                    <CircularProgressbar\n                        className={classes.circularProgressba}\n                        value={75}\n                        text='75%'\n                        styles={buildStyles({\n                            pathColor: `rgba(207, 0, 15, ${75 / 100})`,\n                            textColor: `rgba(207, 0, 15, ${75 / 100})`\n                        })}\n                    />\n                </Grid>\n            </Grid>\n            <Divider />\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛号</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛舍</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务日期</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>是否完成</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow hover key={row.cowNumber}>\n                            <TableCell align=\"center\" className={classes.tablecell} onClick={() => props.history.push('/cowDetail/1')}>{row.cowNumber}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.cowshed}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.date}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.statusLabel}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Box>\n    )\n}\nexport default TasksDetail;","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    Container,\n    Paper\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\nimport { SevenDayOpt } from './_mock';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root}>\n            <AppBar title=\"预警报表\" />\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n        </Container>\n    )\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper,\n    Tabs,\n    Tab,\n    Grid,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardMedia,\n    Button\n} from '@material-ui/core';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        top: 48,\n        width: '100vw'\n    },\n    reviewListContainer: {\n        paddingTop: 96\n    },\n    media: {\n        height: 120,\n    },\n});\n\nconst RouteParamsType: any = {\n    'ald': '阿拉钉牧场',\n    'society': '社会牧场'\n};\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const reviewList = [\n        {\n            title: '乳头评分',\n            img: require(\"./image/default.jpg\"),\n            value: 0\n        },\n        {\n            title: '行走评分',\n            img: require(\"./image/default.jpg\"),\n            value: 1\n        },\n        {\n            title: '体况评分',\n            img: require(\"./image/default.jpg\"),\n            value: 2\n        },\n        {\n            title: '粪便评分',\n            img: require(\"./image/default.jpg\"),\n            value: 3\n        }\n    ];\n    const RanchType = props.match.params.type;\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n        if (newValue) {\n            props.history.push(`/viewCowshed/${RanchType}`)\n        }\n    }\n\n    return (\n        <div >\n            <AppBar title={`${RouteParamsType[RanchType]}-现场管理清单`} />\n            <Paper className={classes.root} square={true}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"现场评分\" />\n                    <Tab label=\"牛舍巡棚\" />\n                </Tabs>\n            </Paper>\n            <Grid container justify=\"space-around\" className={classes.reviewListContainer}>\n                {\n                    reviewList.map(item => (\n                        <Grid item xs={5} key={item.title} className=\"mt-15-it\">\n                            <Card onClick={() => props.history.push(`/reviewDetail/${RanchType}/${item.value}`) }>\n                                <CardActionArea>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={item.img}\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                </CardActionArea>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        {item.title}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Required() {\n    return (\n        <span style={{color: 'red'}}>\n            *\n        </span>\n    )\n}","// 牛类型\nexport const CowType: ReviewDetail.LabelValueType[] = [\n    {\n      value: '0',\n      label: '干奶牛',\n    },\n    {\n      value: '1',\n      label: '新产牛',\n    },\n    {\n      value: '2',\n      label: '早期牛',\n    },\n    {\n      value: '3',\n      label: '中期牛',\n    },\n    {\n      value: '4',\n      label: '后期牛',\n    },\n];\n// 乳头信息\nexport const Teats: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    },\n    {\n        label: '瞎奶头',\n        value: '0'\n    }\n];\n// 体况评分\nexport const BCS: ReviewDetail.LabelValueType[] = [];\nfor(let i = 1; i <= 5; i = i + 0.25) {\n    BCS.push({\n        label: String(i), value: String(i)\n    });\n}\n// 结果\nexport const Results: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    }\n];\nexport const RanchType: ReviewDetail.IndexStringMap = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\nexport const ReviewType: ReviewDetail.IndexStringMap = {\n    0: '乳头评分',\n    1: '行走评分',\n    2: '体况评分',\n    3: '粪便评分'\n};\nexport const CowBreastPosition: ReviewDetail.CowBreastPositionItem[] = [\n    {\n        label: '左前',\n        key: 'lf'\n    },\n    {\n        label: '左后',\n        key: 'lb'\n    },\n    {\n        label: '右前',\n        key: 'rf'\n    },\n    {\n        label: '右后',\n        key: 'rb'\n    }\n];\ninterface IndexFuncMap<T> {\n    [index: string]: (state: any) => T;\n}\n// 验证数据的必填\nexport const validateReviewType: IndexFuncMap<boolean> = {\n    // 乳头评分\n    0: (state: any) => {\n        // const { assesser, content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cow.value &&\n        //         contentItem.lf &&\n        //         contentItem.lb &&\n        //         contentItem.rf &&\n        //         contentItem.rb\n        //     )) ||\n        //     false\n        // )\n        const { assesser, cow, lf, lb, rf, rb, photo } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !lf ||\n            !lb ||\n            !rf ||\n            !rb ||\n            false\n        )\n    },\n    // 行走评分\n    1: (state: any) => {\n        const { assesser, photo, cow, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !cowType ||\n            !results ||\n            false\n        )\n    },\n    // 体况评分\n    2: (state: any) => {\n        const { assesser, results, cowType, cow, photo } = state;\n        return (\n            // !assesser.value ||\n            !results ||\n            !cowType ||\n            !cow.value ||\n            !photo.length ||\n            false\n        )\n    },\n    // 粪便评分\n    3: (state: any) => {\n        // const { assesser, content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cowshed.value &&\n        //         contentItem.cowType &&\n        //         contentItem.results\n        //     )) ||\n        //     false\n        // )\n        const { assesser, cowshed, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cowshed.value ||\n            !cowType ||\n            !results ||\n            false\n        );\n    }\n};\n// 格式化数据\nexport const formatReviewType: IndexFuncMap<object> = {\n    // 乳头评分\n    0: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            lf: state.lf,\n            rf: state.rf,\n            rb: state.rb,\n            lb: state.lb,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    },\n    // 行走评分\n    1: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            cow_type: state.cowType,\n            locomotion_score: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n        }\n    },\n    // 体况评分\n    2: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            bcs: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n            cow_type: state.cowType\n        }\n    },\n    // 粪便评分\n    3: (state: any) => {\n        return {\n            cow_type: state.cowType,\n            fs:  state.results,\n            pen: state.cowshed.value,\n            note: state.note,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    }\n};","import React from 'react';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    TextField\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    Delete as DeleteIcon\n} from '@material-ui/icons'\nimport {useDropzone} from 'react-dropzone';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport R from 'ramda';\nimport Required from '@/components/required';\n\nconst useStyles = makeStyles({\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    img: {\n        display: 'block',\n        width: '100%',\n        height: '90px'\n    },\n    deleteIcon: {\n        color: 'red'\n    }\n});\ninterface IProps {\n    labelText: string;\n    index?: number;\n    photo: any[];\n    note:string;\n    textAreaRequired: boolean;\n    saveContent?: (params: object) => void;\n    saveReviewDetail?: (params: object) => void;\n}\nconst TextAreaAndUploadImg: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const {getRootProps, getInputProps} = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n            const photoFormat: any = props.photo.concat(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n            // props.saveContent({\n            //     photo: photoFormat,\n            //     index: props.index\n            // });\n            props.saveReviewDetail({\n                photo: photoFormat\n            });\n        }\n    });\n    const deleteImg = (i: number) => {\n        const photoClone = R.remove(i, 1, props.photo);\n        props.photo.forEach((file: any) => URL.revokeObjectURL(file.preview));\n        // props.saveContent({\n        //     photo: photoClone,\n        //     index: props.index\n        // });\n        props.saveReviewDetail({\n            photo: photoClone\n        });\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs>\n                <Grid container alignItems=\"center\">\n                    <If condition={props.textAreaRequired}>\n                        <Grid item xs={1}>\n                            <Required />\n                        </Grid>\n                    </If>\n                    <Grid item xs>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label={props.labelText}\n                            multiline\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={props.note}\n                            // onChange={e => props.saveContent({\n                            //     note: e.target.value,\n                            //     index: props.index\n                            // })}\n                            onChange={e => props.saveReviewDetail({\n                                note: e.target.value\n                            })}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={2} className={classes.flexbox}>\n                     <Box {...getRootProps({className: 'dropzone'})}>\n                        <input {...getInputProps()} />\n                        <IconButton>\n                            <Required />\n                            <AddAPhotoIcon color=\"primary\" />\n                        </IconButton>\n                    </Box>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"center\">\n                {\n                    props.photo.map((item: any, i: any) => (\n                        <Grid item xs={4} key={`img-file-${i}`}>\n                            <Box position=\"relative\">\n                                <img\n                                    className={classes.img}\n                                    src={item.preview}\n                                    alt={`img-file-${i}`}\n                                />\n                                <Box position=\"absolute\" top=\"-20px\" right=\"-20px\">\n                                    <IconButton\n                                        className={classes.deleteIcon}\n                                        onClick={() => deleteImg(i)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </Grid>\n    )\n}\nexport default TextAreaAndUploadImg;","\nimport { makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    InputAdornment: {\n        '& p': {\n            width: 65\n        }\n    },\n    inputAdornment: {\n        '& p': {\n            width: 45\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111'\n    }\n});\nexport default useStyles;","import {\n    SAVE_ASSESSER,\n    SAVE_COW,\n    SAVE_COWSHED,\n    SAVE_REVIEW_DETAIL,\n    SAVE_CONTENT,\n    ADD_CONTENT,\n    CLEAR_STATE\n} from './actionTypes';\n\ninterface Info {\n    value: string;\n    label: string;\n}\n\nexport const saveEstimator = (info: Info) => ({\n    type: SAVE_ASSESSER,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCow = (info: Info) => ({\n    type: SAVE_COW,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCowshed = (info: Info) => ({\n    type: SAVE_COWSHED,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveReviewDetail = (info: Info) => ({\n    type: SAVE_REVIEW_DETAIL,\n    payload: info\n});\n\nexport const saveContent = (info: Info) => ({\n    type: SAVE_CONTENT,\n    payload: info\n});\n\nexport const addContent = (info: Info) => ({\n    type: ADD_CONTENT,\n    payload: info\n});\n\nexport const clearState = (info: Info) => ({\n    type: CLEAR_STATE,\n    payload: info\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport {\n    Grid,\n    Box,\n    Container,\n    FormControl,\n    Input,\n    InputAdornment,\n    TextField,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n    Checkbox,\n    ButtonGroup\n} from '@material-ui/core';\nimport {\n    AddCircleOutline as AddCircleOutlineIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon\n} from '@material-ui/icons';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport { uploadImgs$, postAssessTeats$, postAssessFaecess$, postAssessBcss$, postAssessLocomotions$ } from '@/api';\nimport useStyles from './styles';\nimport {\n    CowType,\n    Teats,\n    BCS,\n    Results,\n    RanchType,\n    ReviewType,\n    CowBreastPosition,\n    validateReviewType,\n    formatReviewType\n} from './config';\nimport { saveReviewDetail, saveContent, addContent, clearState } from './redux/actions';\nimport { showMessage } from '@/redux/actions';\n\n// import { from } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\ninterface ReviewType {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ReviewDetail: React.FC = (props: any) => {\n\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const { ranchType, reviewType }: { ranchType: string, reviewType: keyof ReviewType  } = props.match.params;\n    const isCowNo = +reviewType !== 3; // 是否是牛号\n    const isTK = +reviewType === 2; // 是否是体况评分\n    const LabelText: string = `${ReviewType[reviewType]}-业务备注`;\n    const ResultsList = isTK ? BCS : Results;\n    \n\n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n    function handleUploadImgs() {\n        // const photoArr = props.content.map((contentItem: any) => contentItem.photo);\n        // const rxOb: FormData[] = photoArr.map((item: any) => {\n        //     const formdata: FormData = new FormData();\n        //     item.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        //     return formdata;\n        // });\n        // const uploadImgObser =  from(rxOb).pipe(\n        //     concatMap(formdata => {\n        //         return formdata.has('imgs') ? uploadImgs$(formdata) : Promise.resolve({ response: { upload_imgs: []} });\n        //     }),\n        //     map(({ response }) => response)\n        // );\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const OperaFuncMap: ReviewDetail.FetchFunc = {\n            0: postAssessTeats$,\n            1: postAssessLocomotions$,\n            2: postAssessBcss$,\n            3: postAssessFaecess$\n        };\n        const hasError = validateReviewType[reviewType](props);\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        setPostLoading(true);\n        const retData: any = formatReviewType[reviewType](props);\n        const uploadImgOb$ = handleUploadImgs();\n        const postAssessTeatsInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                const OperaFunc = OperaFuncMap[reviewType];\n                return OperaFunc(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                postAssessTeatsInst.unsubscribe();\n            }\n        );\n    };\n   \n\n    return (\n        <React.Fragment>\n            <AppBar\n                title={`${RanchType[ranchType]}-${ReviewType[reviewType]}`}\n                beforeRouteLeave={beforeRouteLeave}\n            />\n            <Container className={classes.root}>\n                <FormControl fullWidth>\n                    <Input\n                        value={props.assesser.label}\n                        placeholder=\"点击选择评估人姓名\"\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        startAdornment={<InputAdornment className={classes.InputAdornment} position=\"start\">评估人:</InputAdornment>}\n                    />\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"评估日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate}\n                            onChange={date => props.saveReviewDetail({assessDate: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            // disabled\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <TextAreaAndUploadImg\n                    labelText={LabelText}\n                    photo={props.photo}\n                    note={props.note}\n                    saveReviewDetail={props.saveReviewDetail}\n                    textAreaRequired={false}\n                />\n                <Box>\n                    <Box>\n                        <FormControl margin=\"dense\" fullWidth>\n                            <Input\n                                value={isCowNo ? props.cow.label : props.cowshed.label}\n                                onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}`)}\n                                placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                startAdornment={\n                                    (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                        <Required />牛{ isCowNo ? '号' : '舍'}:\n                                    </InputAdornment>)\n                                }\n                                endAdornment={\n                                    (<If condition={+reviewType === 3}>\n                                        <InputAdornment position=\"end\">#</InputAdornment>\n                                    </If>)\n                                }\n                            />\n                        </FormControl>\n                        <Choose>\n                            <When condition={+reviewType !== 0}>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />类型:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            cowType: e.target.value\n                                        })}\n                                        value={props.cowType}\n                                    >\n                                        {CowType.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />结果:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            results: e.target.value\n                                        })}\n                                        value={props.results}\n                                    >\n                                        {ResultsList.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                            </When>\n                            {/* 乳头评分 */}\n                            <Otherwise>\n                                <Grid container spacing={1}>\n                                    {\n                                        CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                            <Grid item xs={6} key={position.key}>\n                                                <FormControl margin=\"dense\" fullWidth>\n                                                    <TextField\n                                                        select\n                                                        InputProps={{\n                                                            startAdornment: (\n                                                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                                                    <p>\n                                                                        <Required />{position.label + ':'}\n                                                                    </p>\n                                                                </InputAdornment>\n                                                            ),\n                                                        }}\n                                                        onChange={e => props.saveReviewDetail({\n                                                            [position.key]: e.target.value\n                                                        })}\n                                                        value={props[position.key]}\n                                                    >\n                                                        {Teats.map(option => (\n                                                            <MenuItem key={option.value} value={option.value}>\n                                                                {option.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                </FormControl>\n                                            </Grid>\n                                        ))\n                                    }\n                                </Grid>\n                            </Otherwise>\n                        </Choose>\n                    </Box>\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <React.Fragment key={`content-item-${index}`}>\n                            <TextAreaAndUploadImg\n                                labelText={LabelText}\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                            <Box>\n                                <Box>\n                                    <FormControl margin=\"dense\" fullWidth>\n                                        <Input\n                                            value={isCowNo ? contentItem.cow.label : contentItem.cowshed.label}\n                                            onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}?index=${index}`)}\n                                            placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                            startAdornment={\n                                                (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    牛{ isCowNo ? '号' : '舍'}:\n                                                </InputAdornment>)\n                                            }\n                                            endAdornment={\n                                                (<If condition={+reviewType === 3}>\n                                                    <InputAdornment position=\"end\">#</InputAdornment>\n                                                </If>)\n                                            }\n                                        />\n                                    </FormControl>\n                                    <Choose>\n                                        <When condition={+reviewType !== 0}>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">类型:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        cowType: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem.cowType}\n                                                >\n                                                    {CowType.map(option => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">结果:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        [isTK ? 'locomotionScore' : 'results']: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem[isTK ? 'locomotionScore' : 'results']}\n                                                >\n                                                    {ResultsList.map((option: any) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                        </When>\n                                        <Otherwise>\n                                            <Grid container spacing={1}>\n                                                {\n                                                    CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                                        <Grid item xs={6} key={position.key}>\n                                                            <FormControl margin=\"dense\" fullWidth>\n                                                                <TextField\n                                                                    select\n                                                                    InputProps={{\n                                                                        startAdornment: <InputAdornment className={classes.inputAdornment} position=\"start\">{position.label + ':'}</InputAdornment>,\n                                                                    }}\n                                                                    onChange={e => props.saveContent({\n                                                                        [position.key]: e.target.value,\n                                                                        index\n                                                                    })}\n                                                                    value={contentItem[position.key]}\n                                                                >\n                                                                    {Teats.map(option => (\n                                                                        <MenuItem key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </MenuItem>\n                                                                    ))}\n                                                                </TextField>\n                                                            </FormControl>\n                                                        </Grid>\n                                                    ))\n                                                }\n                                            </Grid>\n                                        </Otherwise>\n                                    </Choose>\n                                </Box>\n                            </Box>\n                        </React.Fragment>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    {/* <Box>已经生成n条事件/您没有事件录入权限</Box> */}\n                    <FormControlLabel\n                        className={classes.btnContainer}\n                        control={\n                            <Checkbox\n                                // className={classes.btnContainer}\n                                checked={props.add_event}\n                                onChange={e => props.saveReviewDetail({\n                                    add_event: e.target.checked\n                                })}\n                                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                                value=\"add_event\"\n                                color=\"primary\"\n                            />\n                        }\n                        classes={{label: classes.btnContainer}}\n                        label=\"是否生成阿拉钉事件\"\n                    />\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        loading={postLoading}\n                        className={classes.btnMargin}\n                    />\n                </Box>\n            </Container>\n        </React.Fragment>\n    )\n}\nexport default connect(mapStateToProps, { saveReviewDetail, saveContent, addContent, clearState, showMessage })(ReviewDetail);","import {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    inputAdornment: {\n        '& p': {\n            width: 75\n        }\n    },\n    inputAdornment2: {\n        '& p': {\n            width: 92\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111',\n        marginTop: 20\n    }\n});\nexport default useStyles;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Container,\n    FormControl,\n    TextField,\n    InputAdornment,\n    MenuItem,\n    Input,\n    Box\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    AddCircleOutline as AddCircleOutlineIcon\n} from '@material-ui/icons';\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n} from '@material-ui/pickers';\nimport { map, concatMap } from 'rxjs/operators';\nimport LuxonUtils from \"@date-io/luxon\";\nimport AppBar from '@/components/app-bar';\nimport useStyles from './styles';\nimport { fetchTodoTaskTypes$, uploadImgs$, postMTodoTasks$ } from '@/api';\nimport { \n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\nimport { showMessage } from '@/redux/actions';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\nconst RanchType: any = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ViewCowshed: React.FC = (props: any) => {\n    const { ranchType } = props.match.params;\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [TypeList, setTypeList] = useState([]);\n    const [SubTypeList, setSubTypeList] = useState([]);\n    const TitleText: string = `${RanchType[ranchType]}-牛舍巡棚`;\n\n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n\n    function handleUploadImgs() {\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const hasError = !props.type || !props.sub_type || !props.note || !props.photo.length || !props.cowshed.value;\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        const retData = {\n            type: props.type,\n            sub_type: props.sub_type,\n            location: props.cowshed.value,\n            content: props.note,\n            photo: props.photo.toString(),\n            tasker: props.assesser.value,\n            start_time: props.assessDate2,\n            note: props.note\n        };\n        setPostLoading(true);\n        const uploadImgOb$ = handleUploadImgs();\n        const apiInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                return postMTodoTasks$(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                apiInst.unsubscribe();\n            }\n        );\n    };\n    React.useEffect(() => {\n        const activeTypeItem: any = TypeList.find((item: any) => +item.id === props.type);\n        const SubTypeList = activeTypeItem && activeTypeItem.sub_tasktypes;\n        setSubTypeList(SubTypeList || []);\n    }, [TypeList, props.type]);\n\n    React.useEffect(() => {\n        const ApiInst = fetchTodoTaskTypes$({page: 1, page_size:100}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setTypeList(data);\n            },\n            err => {\n                console.log('err', err)\n            },\n        );\n        return () => ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <div>\n            <AppBar title={TitleText} beforeRouteLeave={beforeRouteLeave} />\n            <Container className={classes.root}>\n                <FormControl margin=\"dense\" fullWidth>\n                    <Input\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        value={props.assesser.label}\n                        placeholder=\"点击选择责任人\"\n                        startAdornment={\n                            <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                责任人:\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            type: e.target.value\n                        })}\n                        value={props.type}\n                    >\n                        {TypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment2} position=\"start\">\n                                    <p>\n                                        <Required />子任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            sub_type: e.target.value\n                        })}\n                        value={props.sub_type}\n                    >\n                        {SubTypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"巡棚日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate2}\n                            onChange={date => props.saveReviewDetail({assessDate2: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            shouldDisableDate={ day => {\n                                if (day === null) {\n                                    return true;\n                                }\n                                return day.toMillis() < props.assessDate.toMillis();\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <Box>\n                    <FormControl margin=\"dense\" fullWidth>\n                        <Input\n                            value={props.cowshed.label}\n                            onFocus={() => props.history.push(`/commonSelectList/cowshed`)}\n                            placeholder=\"点击选择牛舍号\"\n                            startAdornment={\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />巡视点:\n                                    </p>\n                                </InputAdornment>\n                            }\n                            endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                        />\n                    </FormControl>\n                    <TextAreaAndUploadImg\n                        labelText='巡视点，问题描述'\n                        photo={props.photo}\n                        note={props.note}\n                        saveReviewDetail={props.saveReviewDetail}\n                        textAreaRequired={true}\n                    />\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <Box key={`content-item-${index}`}>\n                            <FormControl margin=\"dense\" fullWidth>\n                                <Input\n                                    value={contentItem.cowshed.label}\n                                    onFocus={() => props.history.push(`/commonSelectList/cowshed?index=${index}`)}\n                                    placeholder=\"点击选择牛舍号\"\n                                    startAdornment={<InputAdornment className={classes.inputAdornment} position=\"start\">巡视点:</InputAdornment>}\n                                    endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                                />\n                            </FormControl>\n                            <TextAreaAndUploadImg\n                                labelText='巡视点，问题描述'\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                        </Box>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        className={classes.btnMargin}\n                        loading={postLoading}\n                    />\n                </Box>\n            </Container>\n        </div>\n    )\n};\nconst actions = {\n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail,\n    showMessage\n};\nexport default connect(mapStateToProps,actions)(ViewCowshed);","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Box,\n    Paper,\n    CircularProgress\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport clsx from 'clsx';\nimport AppBar from '@/components/app-bar';\nimport { getOnsiteAssessments$ } from '@/api';\nimport { map } from 'rxjs/operators';\n\ninterface SceneReportListItem {\n    name: string;\n    date: string;\n    type: string;\n    id: string | number;\n}\nconst createData = (name: string, date: string, type: string, id: string | number) => {\n    return { name, date, type, id }\n}\nconst SceneReportList: SceneReportListItem[] = [\n    createData('风清扬', '2019-03-10', '乳头评分', 1),\n    createData('任我行', '2019-03-10', '行走评分', 2),\n    createData('风清扬', '2019-03-10', '巡棚评分', 3),\n    createData('任我行', '2019-03-10', '体况评分', 4)\n];\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 48\n    },\n    tableHeader: {\n        color: theme.palette.primary.main,\n    },\n    circularProgress: {\n        marginRight: 10\n    },\n    tableItemWidth: {\n        width: '22vw'\n    },\n    tablePadding: {\n        padding: '14px 0px'\n    }\n}))\nconst SceneReport: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const tableHeaderCls = clsx(classes.tableHeader, classes.tablePadding);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                page: params.page + 1\n            });\n        }\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const ApiInst = getOnsiteAssessments$(params).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(List.concat(list));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-清单\" />\n            <Paper square>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={tableHeaderCls} align=\"center\">人员</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">日期</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">类型</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">详情</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {List.map((listItem: any) => (\n                            <TableRow\n                                key={listItem.id}\n                                // onClick={() => props.history.push(`/sceneReportDetail/${listItem.id}`)}\n                            >\n                                <TableCell align=\"center\" className={classes.tablePadding}>{listItem.assessr_name}</TableCell>\n                                <TableCell align=\"center\" className={classes.tablePadding}>{listItem.assess_date}</TableCell>\n                                <TableCell align=\"center\" className={classes.tablePadding}>{listItem.assesstype_name}</TableCell>\n                                <TableCell align=\"center\" className={classes.tablePadding}>\n                                    <a href={listItem.pdf} download className={classes.tableHeader}>\n                                        下载\n                                    </a>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n};\nexport default SceneReport;","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        // height: '100vh',\n        paddingTop: 50,\n        marginBottom: 70,\n        overflowY: 'auto',\n        boxSizing: 'border-box'\n    },\n    paper: {\n        margin: \"0 4vw\",\n        borderRadius: 5,\n        marginTop: 15,\n        padding: '10px 0',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    infoItem: {\n        fontSize: 14,\n        lineHeight: 1.5,\n        color: '#111'\n    },\n    spanLeft: {\n        width: 70\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { Box, Paper, Grid, ButtonBase, Container, Link, CircularProgress } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport AppBar from '@/components/app-bar';\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport useStyles from './styles';\n\nconst SearchCow: React.FC = props => {\n    const classes = useStyles();\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10,\n        search: '',\n        fromMore: false\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [searchLoading, setSearchLoading] = React.useState(false);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                fromMore: true,\n                page: params.page + 1\n            });\n        }\n    };\n    const handleSearch = (search: string) => {\n        setSearchLoading(true);\n        setParams({\n            ...params,\n            fromMore: false,\n            page: 1,\n            search\n        });\n    }\n    React.useEffect(() => {\n        setLoading(true);\n        const paramsClone = JSON.parse(JSON.stringify(params));\n        delete paramsClone.fromMore;\n        const ApiInst = fetchCalfsList$(paramsClone).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(params.fromMore ? List.concat(list) : list);\n                setNext(data[1]);\n                setLoading(false);\n                setSearchLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar\n                title=\"查找牛只\"\n                useSearch\n                searchLoading={searchLoading}\n                searchPlaceholder=\"请输入牛号\"\n                getSearchValue={handleSearch}\n            />\n            {\n                List.map((item: any, i) => (\n                    <Link component={RouteLink} to={`/cowDetail/${item.id}?eartag=${item.eartag}`}  key={`cow-item-${i}`}>\n                        <Paper className={classes.paper} square>\n                            <Grid container>\n                                <Grid item xs={3} container justify=\"center\" alignItems=\"center\">\n                                    <Container>\n                                        <ButtonBase>\n                                            <img className={classes.img} alt=\"complex\" src={require('../../assets/images/default.jpg')} />\n                                        </ButtonBase>\n                                    </Container>\n                                </Grid>\n                                <Grid item xs>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>牛号:</span>\n                                        <span>{item.eartag}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>所属牛舎:</span>\n                                        <span>{item.pen_name}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>类型:</span>\n                                        <span>{item.cbrd || '暂无'}</span>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Link>\n                ))\n            }\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n}\nexport default SearchCow;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        marginTop: 58\n    },\n    heading: {\n        fontSize: 14,\n        flexBasis: '45%',\n        flexShrink: 0,\n    },\n    infoItem: {\n        padding: '5px 0'\n    },\n    lastExpan: {\n        margin: '16px -16px!important',\n    },\n    lastDetail: {\n        overflowX: 'scroll',\n        paddingLeft: 0\n    },\n    tableCell: {\n        paddingRight: 10\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Container,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Typography,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport useStyles from './styles';\nimport { fetchCalfsDetail$ as fetchData$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport url from \"url\";\n\nconst createData = (label: string, value: string | number) => ({ label, value });\nconst CowInfo = [\n    createData('牛号', 3080),\n    createData('牛区', 11),\n    createData('离场日期', ''),\n    createData('生日', '2013-06-07'),\n    createData('胎次', 5),\n    createData('胎次组', 3),\n    createData('母牛号', 30),\n    createData('父牛号', 380)\n];\nfunction createEventData(eventname: string, date: string, days: number, count: number, freeze: string, mark: string) {\n    return { eventname, date, days, count, freeze, mark };\n  }\n  \nconst eventData = [\n    createEventData('转群1转群1转群1转群1', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群2', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群3', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群4', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群5', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群6', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群7', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群8', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群9', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群10', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n];\nconst CowDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [Data, setData] = React.useState([]);\n\n    const [expanded, setExpanded] = React.useState<string | false>('panel1');\n    const { query } = url.parse(props.location.search, true);\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    React.useEffect(() => {\n        const id = props.match.params.id;\n        const ApiInst = fetchData$({id}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setData(data);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title={`牛头详情-${query.eartag}`} />\n            <Container>\n                <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息一</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息二</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息三</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}  className={expanded === 'panel4' ? classes.lastExpan : ''}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>事件信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={expanded === 'panel4' ? classes.lastDetail : ''}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>事件</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>日期</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>天数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>本胎发生的次数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>冻精</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>备注</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {eventData.map(row => (\n                                <TableRow key={row.eventname}>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.eventname}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.date}</TableCell>\n                                    <TableCell className={classes.tableCell}>{row.days}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '50px'}}>\n                                            {row.count}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.freeze}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.mark}\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Container>\n        </Box>\n    )\n}\nexport default CowDetail;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport AppBar from '@/components/app-bar';\nimport {\n    Box,\n    Container\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 48\n    }\n});\n\nconst SceneReportDetail: React.FC<RouteComponentProps<{id: string;}>> = props => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-明细\" />\n            <Container>\n                <h5>现场报告-明细, id:{props.match.params.id}</h5>\n            </Container>\n        </Box>\n    )\n};\nexport default SceneReportDetail;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    contantContainer: {\n        marginTop: 50\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport { Observable, of } from 'rxjs';\nimport { AjaxResponse } from 'rxjs/ajax';\nimport { map, catchError } from 'rxjs/operators';\nimport {\n    Box,\n    ButtonGroup,\n    Button,\n    CircularProgress,\n    Container,\n    FormControl,\n    RadioGroup,\n    FormControlLabel,\n    Radio\n} from '@material-ui/core';\nimport {\n    fetchUsersList$,\n    fetchCowlitesList$,\n    fetchPensList$\n} from '@/api';\nimport useStyles from './styles';\nimport { \n    saveContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\nimport url from \"url\";\n\ninterface FetchFunc {\n    [index:string]: (params: object) => Observable<AjaxResponse>;\n}\ninterface IndexMap {\n    [index: string]: string;\n}\ninterface IProps extends RouteComponentProps<{type: string}> {\n    saveContent: (params: object) => void;\n    saveReviewDetail: (params: object) => void;\n    value: string;\n}\n\nconst Type: any = {\n    'user': '选择评估人',\n    'cow': '选择牛只',\n    'cowshed': '选择牛舍'\n};\nconst FetchFunc: FetchFunc = {\n    'user': fetchUsersList$,\n    'cow': fetchCowlitesList$,\n    'cowshed': fetchPensList$,\n};\nconst mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst CommonSelectList: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    const [itemValue, setItemValue] = useState(props.value);\n    const [next, setNext] = React.useState(null);\n    const [list, setList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [searchValue, setSearchValue] = useState('');\n    const type: string = props.match.params.type;\n    const Label = Type[type];\n\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    const handleSelectItem = (e: any) => {\n        setItemValue(e.target.value);\n    };\n    const handleConfirm = () => {\n        if(!itemValue) return;\n        // const { query } = url.parse(props.location.search, true);\n        const item: any = list.find((item: any) => item.id === itemValue);\n        const StoreMap: IndexMap = {\n            'user': 'assesser',\n            'cow': 'cow',\n            'cowshed': 'cowshed'\n        };\n        const Params = {\n            [StoreMap[type]]: {\n                label: item.label,\n                value: itemValue\n            },\n            // index: query.index\n        };\n        // const operaFunc = type === 'user' ? props.saveReviewDetail : props.saveContent;\n        // operaFunc(Params);\n        props.saveReviewDetail(Params);\n        props.history.goBack();\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const Params: any = {\n            page,\n            page_size: 5\n        };\n        if(searchValue) {\n            Params.search = searchValue;\n        }\n        const ApiInst = FetchFunc[type](Params).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next]),\n            map(([results, next]) => [results.map((item: any) => ({...item, id: String(item.id)})), next]),\n            map(([results, next]) =>{\n                const LabelMap: IndexMap = {\n                    'user': 'username',\n                    'cow': 'eartag',\n                    'cowshed': 'pen_name'\n                };\n                return [\n                    results.map((item: any) => ({...item, label: item[LabelMap[type]]})),\n                    next\n                ]\n            }),\n            catchError(err => {\n                return of(`err => `, err)\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setList(list.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return  () => ApiInst.unsubscribe();\n    }, [page, searchValue]);\n    return (\n        <Box>\n            <AppBar\n                title={Label}\n                // useSearch\n                // searchPlaceholder=\"请输入要搜索的内容\"\n                // getSearchValue={setSearchValue}\n            />\n            <Container className={classes.contantContainer} >\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        aria-label=\"position\"\n                        name=\"position\"\n                        value={itemValue}\n                        onChange={handleSelectItem}\n                    >\n                        {\n                            list.map((item: any) => (\n                                <FormControlLabel\n                                    key={item.id}\n                                    value={item.id}\n                                    control={<Radio color=\"primary\" />}\n                                    label={item.label}\n                                    labelPlacement=\"end\"\n                                />\n                            ))\n                        }\n                    </RadioGroup>\n                </FormControl>\n            </Container>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n            <Box position=\"fixed\" left={15} right={15} bottom={15}>\n                <ButtonGroup\n                    fullWidth\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"选择一项\"\n                    onClick={() => handleConfirm()}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\nexport default connect(mapStateToProps, { saveContent, saveReviewDetail })(CommonSelectList);","import React, { useState } from 'react';\nimport {\n    Container,\n    IconButton,\n    Box,\n    Paper,\n    Grid,\n    FormControl,\n    InputLabel,\n    InputAdornment,\n    Input\n} from '@material-ui/core';\nimport {\n    Settings as SettingsIcon,\n    Done as DoneIcon,\n    PermIdentity,\n    Assignment,\n    NearMe,\n    Smartphone\n} from '@material-ui/icons';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 60\n    },\n    label: {\n        fontSize: 12,\n        color: '#111'\n    },\n    flexbox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    paper: {\n        marginTop: 20\n    },\n    infoContent: {\n        fontSize: 14,\n        padding: '10px 10px 10px 0'\n    },\n    input: {\n        padding: '10px 0'\n    },\n    formControl: {\n        marginTop: '20px!important'\n    }\n});\n\nconst editInfoArr: editInfoArrItem[] = [\n    {\n        label: '个性介绍',\n        icon: <PermIdentity color=\"primary\" />,\n        key: 'userDesc'\n    },\n    {\n        label: '公司名称',\n        icon: <Assignment color=\"primary\" />,\n        key: 'companyName'\n    },\n    {\n        label: '公司地址',\n        icon: <NearMe color=\"primary\" />,\n        key: 'companyAddress'\n    },\n    {\n        label: '联系方式',\n        icon: <Smartphone color=\"primary\" />,\n        key: 'mobileNumber'\n    }\n];\ninterface State {\n    userDesc: string;\n    companyName: string;\n    companyAddress: string;\n    mobileNumber: string;\n}\ninterface editInfoArrItem {\n    label: string;\n    icon: JSX.Element;\n    key: keyof State;\n}\nconst User: React.FC = props => {\n    const [editState, setEditState] = useState(false);\n    const classes = useStyles();\n    const [editInfo, setEditInfo] = useState<State>({\n        userDesc: '清风雨露一相逢便胜却人间无数',\n        companyName: '阿拉钉科技有限公司',\n        companyAddress: '北京市海淀区某某路',\n        mobileNumber: '18888888888'\n    });\n    const handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEditInfo({...editInfo, [name]: event.target.value})\n    }\n    return (\n        <Container className={classes.root}>\n            <AppBar\n                title=\"个人信息\"\n                endAdorment={\n                    (<IconButton onClick={() => setEditState(!editState)} className=\"text-white\">\n                        <Choose>\n                            <When condition={editState}>\n                                <DoneIcon />\n                            </When>\n                            <Otherwise>\n                                <SettingsIcon />\n                            </Otherwise>\n                        </Choose>\n                    </IconButton>)\n                }\n            />\n            <Box>\n                {\n                    editInfoArr.map((item: editInfoArrItem) => (\n                        <Choose>\n                            <When condition={!editState}>\n                                <Paper className={classes.paper} key={item.key}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={2} className={classes.flexbox}>\n                                            <IconButton>\n                                                {item.icon}\n                                            </IconButton>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Box className={classes.label}>\n                                                {item.label}\n                                            </Box>\n                                            <Box className={classes.infoContent}>\n                                                {editInfo[item.key]}\n                                            </Box>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </When>\n                            <Otherwise>\n                                <FormControl fullWidth margin=\"dense\" key={item.key} className={classes.formControl}>\n                                    <InputLabel\n                                        htmlFor={item.key}\n                                    >\n                                        {item.label}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"input-with-icon-adornment\"\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                {item.icon}\n                                            </InputAdornment>\n                                        }\n                                        multiline\n                                        className={classes.formControl}\n                                        value={editInfo[item.key]}\n                                        onChange={handleChange(item.key)}\n                                    />\n                                </FormControl>\n                            </Otherwise>\n                        </Choose>\n                    ))\n                }\n            </Box>\n        </Container>\n    )\n};\nexport default User;","import React, { useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst rootElement: any = document.getElementById('root');\n\nconst ScrollToTop: React.FC<RouteComponentProps> = (props: any) => {\n\n    useEffect(() => {\n      rootElement.scrollTo(0, 0);\n    }, [props.location.pathname]);\n  \n    return props.children;\n};\n  \nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { SyntheticEvent } from 'react';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n    CheckCircle as CheckCircleIcon,\n    Error as ErrorIcon,\n    Info as InfoIcon,\n    Close as CloseIcon,\n    Warning as WarningIcon\n} from '@material-ui/icons';\nimport { amber, green } from '@material-ui/core/colors';\nimport {\n    SnackbarContent,\n    Snackbar,\n    IconButton\n} from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n\nexport interface Props {\n    className?: string;\n    message?: string;\n    onClose?: () => void;\n    variant: keyof typeof variantIcon;\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n}\nconst useStyles2 = makeStyles((theme: Theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n}));\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.messageStore\n    }\n};\nconst mapStateToDispatch = (dispatch: any) => {\n    return {\n        close() {\n            dispatch({\n                type: 'CLOSE_MESSAGE',\n                payload: {\n                    open: false\n                }\n            })\n        }\n    }\n};\nfunction Message(props: any) {\n    const classes = useStyles2();\n\n    function handleClose(event?: SyntheticEvent, reason?: string) {\n      if (reason === 'clickaway') {\n        return;\n      }\n  \n      props.close();\n    }\n  \n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={props.open}\n          autoHideDuration={props.variant === 'error' ? null : 3000}\n          onClose={handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={handleClose}\n            className={classes.margin}\n            variant={props.variant}\n            message={props.message}\n          />\n        </Snackbar>\n      </div>\n    );\n};\nexport default connect(mapStateToProps, mapStateToDispatch)(Message);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./assets/styles/index.scss\";\nimport Message from '@/components/message';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00c6a0',\n            contrastText: '#fff'\n        },\n        secondary: {\n            // main: '#11cb5f'\n            main: '#fff'\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n            <Message />\n        </ThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport withLayout from \"./components/layout\";\nimport Login from './views/login';\nimport Register from './views/register';\nimport SelectRanch from './views/select-ranch';\nimport Home from './views/home';\nimport Tasks from './views/tasks';\nimport TasksDetail from './views/tasks-detail';\nimport Reports from './views/reports';\nimport ManageList from './views/manage-listing';\nimport ReviewDetail from './views/review-detail';\nimport ViewCowshed from './views/view-cowshed';\nimport SceneReport from './views/scene-report';\nimport SearchCow from './views/search-cow';\nimport CowDetail from './views/cow-detail';\nimport SceneReportDetail from './views/scene-report-detail';\nimport CommonSelectList from '@/views/common-select-list';\nimport User from './views/user';\nimport ScrollToTop from './components/scroll-to-top';\n\nexport default () => {\n    return (\n        <HashRouter>\n            <ScrollToTop>\n                {/* 登录注册 */}\n                <Route path=\"/login\" component={Login} />   \n                <Route path=\"/register\" component={Register} />\n\n                {/* 选择牧场 */}\n                <Route path=\"/selectRanch\" component={SelectRanch} />  \n\n                {/* 首页以及首页的几个入口 */}\n                <Route path={[\"/\", \"/home\", \"/index\"]} exact component={withLayout(Home)} />\n                <Route path=\"/manageList/:type\" component={ManageList} />\n                <Route path=\"/sceneReport\" component={SceneReport} /> \n                <Route path=\"/SceneReportDetail/:id\" component={SceneReportDetail} /> \n\n                {/* 底部导航栏入口 */}\n                <Route path=\"/tasks\" component={withLayout(Tasks)} />   \n                <Route path=\"/reports\" component={withLayout(Reports)} />\n                <Route path=\"/search\" component={withLayout(SearchCow)} />\n                <Route path=\"/cowDetail/:id\" component={withLayout(CowDetail)} />\n\n                <Route path=\"/reviewDetail/:ranchType/:reviewType\" component={ReviewDetail} />\n                <Route path=\"/viewCowshed/:ranchType\" component={ViewCowshed} />\n                <Route path=\"/tasksDetail/:id\" component={TasksDetail} />\n                {/* 用户信息入口 */}\n                <Route path=\"/user\" component={User} /> \n                {/* 选择用户，选择牛只，选择牛舍 */}\n                <Route path=\"/commonSelectList/:type\" component={CommonSelectList} />\n            </ScrollToTop>\n        </HashRouter>\n    );\n};\n"],"sourceRoot":""}