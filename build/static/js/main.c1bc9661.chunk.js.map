{"version":3,"sources":["views/manage-listing/image/default.jpg","assets/images/default.jpg","views/review-detail/default.png","views/scene-report-detail/a.pdf","views/review-detail/redux/reducers/index.ts","config/index.ts","redux/modules/user/reducers.ts","redux/reducers.ts","redux/modules/user/actionTypes.ts","redux/modules/message/reducers.ts","redux/modules/message/actionTypes.ts","redux/store.ts","views/review-detail/redux/actionTypes.ts","components/layout/index.tsx","redux/modules/message/actions.ts","api/base.ts","redux/modules/user/actions.ts","api/index.ts","views/login/styles.ts","components/button/index.tsx","hooks/useMessage.tsx","views/login/index.tsx","views/register/styles.ts","views/register/index.tsx","components/search/index.tsx","views/select-ranch/styles.ts","views/select-ranch/index.tsx","views/home/header/_styles.ts","views/home/header/index.tsx","views/home/entrance/_styles.ts","views/home/entrance/index.tsx","views/home/report/_chartbox.tsx","views/home/report/_styles.ts","views/home/report/_mock.ts","views/home/report/index.tsx","views/home/index.tsx","components/app-bar/styles.ts","components/app-bar/index.tsx","components/divider/index.tsx","views/tasks/tab-panel.tsx","views/tasks/styles.ts","components/click-load-more/index.tsx","views/tasks/index.tsx","views/tasks-detail/styles.ts","views/tasks-detail/detail.tsx","views/tasks-detail/index.tsx","views/reports/_mock.ts","views/reports/index.tsx","views/manage-listing/index.tsx","components/required/index.tsx","views/review-detail/config.ts","components/textarea-upload-img/index.tsx","views/review-detail/styles.ts","views/review-detail/redux/actions.ts","views/review-detail/index.tsx","views/view-cowshed/styles.ts","views/view-cowshed/index.tsx","views/scene-report/styles.ts","views/scene-report/index.tsx","views/search-cow/styles.ts","views/search-cow/index.tsx","views/cow-detail/styles.ts","views/cow-detail/index.tsx","views/scene-report-detail/styles.ts","views/scene-report-detail/index.tsx","views/common-select-list/styles.ts","views/common-select-list/index.tsx","views/user/index.tsx","components/scroll-to-top/index.tsx","serviceWorker.ts","components/message/index.tsx","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","defaultState","assesser","label","value","assessDate","DateTime","local","assessDate2","plus","day","type","sub_type","note","photo","cow","cowshed","lf","lb","rf","rb","cowType","results","add_event","ROUTE_HOME_PATH","baseUrl","getUserLocal","JSON","parse","localStorage","getItem","setUserLocal","data","arguments","length","undefined","setItem","stringify","Object","objectSpread","token","loginStatus","farmCode","redux_reducers","User","state","action","payload","Message","variant","open","message","rootReducers","combineReducers","GlobalStore","reviewDetailStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","layout","bottomNav","position","width","bottom","zIndex","boxShadow","Component","props","classes","location","history","includes","pathname","react_default","a","createElement","className","BottomNavigation","onChange","e","push","showLabels","BottomNavigationAction","icon","esm_Home","Description","TrendingUp","esm_Search","showMessage","closeMessage","dispatchMessage","store","dispatch","dispatchToLogin","href","concat","origin","handleError","error","console","log","status","throwError","base","url","params","options","formaturl","initUrl","headers","_getUserLocal","globalState","getState","useToken","EMPTY","AUTHORIZATION","useFarmCode","useId","id","overrideUrl","entries","map","item","join","ajax","get","pipe","catchError","_getUserLocal2","useJSON","overrideHeaders","post","uploadImgs$","fetchCalfsList$","postAssessTeats$","postAssessLocomotions$","postAssessBcss$","postAssessFaecess$","loginTitle","fontSize","marginTop","loginSubTitle","color","formContainer","margin","codeBtn","minWidth","marginBottom","textField","register","Button","ButtonGroup","onClick","fullWidth","size","aria-label","Button_Button","loading","CircularProgress","style","marginRight","key","loadingTxt","btnText","useMessage","useDispatch","descriptor","username","validator","rule","test","Error","password","required","schema","Login","useSelector","_useState","useState","_useState2","slicedToArray","loginInfo","setLoginInfo","_useState3","_useState4","setLoading","_useState5","_useState6","showPassword","setShowPassword","loginIn","LoginIn","handleUserInfoChange","name","defineProperty","target","getToken","code","Container","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","Visibility","VisibilityOff","components_button","apiInst","from","validate","errors","concatMap","method","body","qs","client_id","redirect_uri","response_type","scope","_ref","response","_ref2","subscribe","unsubscribe","Grid","container","xs","Link","component","RouterLink","to","registerbtn","registerSuccess","textAlign","padding0","padding","descriptorPhoneNumber","phone_number","verify_code","confirm_password","callback","source","company_name","validatorPhoneNumber","Register","RegisterForm","setRegisterForm","hasRegister","setHasRegister","btnDisabledState","setBtnDisabledState","_useState7","_useState8","codeTime","setCodeTime","_useState9","_useState10","btnTxt","setBtnTxt","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","showConfirmPassword","setConfirmShowPassword","handleRegisterFormChange","useEffect","timerId","setInterval","clearInterval","disabled","Params","crossDomain","withCredentials","tap","pluck","success","error_msg","root","display","alignItems","backgroundColor","input","marginLeft","flex","iconButton","Search","setValue","inputRef","useRef","handleClickSearch","searchOnValueIsEmpty","searchMethod","current","inputSub","fromEvent","Paper","InputBase","placeholder","inputProps","height","Search_default","title","ranchList","paddingLeft","SelectRanch","page","page_size","search","setParams","_React$useState","React","_React$useState2","otherRanchState","setOtherRanchState","checkALD","setCheckALD","aldRanch","setAldRanch","other","setOtherRanch","aldRanchList","setAldRanchList","selectFarm","SelectFarm","fetchCanUseFarms$","_ref$response","farm_code","justify","Switch","checked","components_search","RadioGroup","FormControlLabel","control","Radio","farm_name","labelPlacement","TextField","helperText","isALD","sessionStorage","theme","aldFarm","palette","primary","main","paddingTop","top","& h4","textWhite","menuItem","header","anchorEl","setAnchorEl","Boolean","Items","PermIdentity","cb","PowerSettingsNew","handleClose","event","currentTarget","MoreVert","Menu","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","homeContainer","overflowY","background","homeContent","paddingBottom","borderTopLeftRadius","borderTopRightRadius","homeContentIcon","searchContainer","Entrance","searchLoading","setSearchLoading","eartag","count","_data$results$","_chartbox","Box","border","borderRadius","borderColor","children","chartTitle","chartContainer","SevenDayOpt","text","textStyle","trigger","axisPointer","legend","grid","left","right","containLabel","xAxis","yAxis","series","stack","report","borderTop","RouteLink","NavigateNext","flexWrap","overflow","echarts_for_react_lib_default","Home","query","String","react_router","entrance","assign","contrastText","fontWeight","inputBox","withRouter","useCallback","getSearchValue","square","beforeRouteLeave","goBack","ArrowBackIos","useSearch","autoFocus","autofocus","searchPlaceholder","endAdorment","Divider","useTheme","Divider_Divider","TabPanel","index","objectWithoutProperties","hidden","selectContainer","pageContainer","minHeight","boxSizing","minHeight100","content","img","maxWidth","detailBtn","paper","circularProgressba","circularProgress","ClickLoadMore","loadMore","hasMore","justifyContent","Tasks","tabList","0","1","2","3","listMap","setListMap","pageMap","setPageMap","nextMap","setNextMap","firstFetchData","setFirstFetchData","tabValue","setTabValue","getTask3List","next","_ref3","list","toNowDate","dayjs","run_date","diff","getTaskNot3List","usage_id","_ref4","Array","isArray","ApiInst","clsx","app_bar","Tabs","newValue","indicatorColor","textColor","centered","Tab","react_swipeable_views_lib_default","axis","direction","onChangeIndex","dir","i","paddingX","alt","src","require","Typography","gutterBottom","workflow_type_name","drafttype","event_date","activity_done_day","done_count","totalcount","divider","ExpandMore","todotask_name","tasker_name","attachment","download","AttachFile","tablecell","table","tableHeader","DetailMap","activity_task","done_state_label","drug_name","pen_name","rem","technician","DetailFields","transform","lineHeight","Detail","setOpen","detail","Modal","aria-labelledby","aria-describedby","TasksDetail","setNext","List","setList","setPage","done_state","activeData","setActiveData","handleClick","actRet","DoneStateLabel","ret","_i","_Object$entries","finalize","mb","Rating","readOnly","index_esm","styles","buildStyles","pathColor","Table","TableHead","TableRow","TableCell","align","TableBody","row","hover","views_reports","flexGrow","reviewListContainer","media","RouteParamsType","ald","society","manage_listing","reviewList","RanchType","match","Card","CardActionArea","CardMedia","image","CardActions","Required","flexbox","deleteIcon","TextAreaAndUploadImg","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","photoFormat","file","preview","URL","createObjectURL","saveReviewDetail","getRootProps","getInputProps","textAreaRequired","labelText","multiline","AddAPhoto","spacing","photoClone","remove_default","forEach","revokeObjectURL","deleteImg","Delete","& p","inputAdornment","btnMargin","btnContainer","defaultImg","& img","CowType","Teats","BCS","Results","ReviewType","CowBreastPosition","validateReviewType","formatReviewType","cow_id","assess_time","cow_type","locomotion_score","bcs","fs","pen","info","saveContent","addContent","clearState","connect","postLoading","setPostLoading","_React$useState3","_React$useState4","defaultImgShow","setDefaultImgShow","_props$match$params","ranchType","reviewType","isCowNo","isTK","LabelText","ResultsList","handleSubmit","OperaFuncMap","retData","postAssessTeatsInst","formdata","FormData","imgFile","append","upload_imgs","handleUploadImgs","toString","OperaFunc","viewer","Image","Viewer","toolbar","navbar","destroy","show","Fragment","EventNote","onFocus","startAdornment","material_ui_pickers_esm","utils","LuxonUtils","locale","format","date","okLabel","cancelLabel","textarea_upload_img","select","InputProps","Checkbox","CheckBoxOutlineBlank","checkedIcon","CheckBox","inputAdornment2","actions","TypeList","setTypeList","SubTypeList","setSubTypeList","TitleText","tasker","start_time","activeTypeItem","find","sub_tasktypes","fetchTodoTaskTypes$","err","task_name_lang","shouldDisableDate","toMillis","SceneReport","_React$useState5","_React$useState6","_React$useState7","_React$useState8","tableHeaderCls","getOnsiteAssessments$","listItem","encodeURIComponent","pdf","assessr_name","assess_date","assesstype_name","infoItem","spanLeft","SearchCow","fromMore","_React$useState9","_React$useState10","paramsClone","ButtonBase","cbrd","heading","flexBasis","flexShrink","lastExpan","lastDetail","overflowX","tableCell","paddingRight","createData","CowInfo","createEventData","eventname","days","freeze","mark","eventData","CowDetail","setData","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","SceneReportDetail","canvasEl","_usePdf","usePdf","_usePdf2","ref","contantContainer","Type","user","FetchFunc","ownProps","itemValue","setItemValue","Label","LabelMap","handleConfirm","infoContent","formControl","editInfoArr","Assignment","NearMe","Smartphone","editState","setEditState","userDesc","companyName","companyAddress","mobileNumber","editInfo","setEditInfo","Done","Settings","rootElement","document","getElementById","scrollTo","hostname","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","useStyles1","green","dark","amber","iconVariant","opacity","MySnackbarContentWrapper","Icon","SnackbarContent","Close","useStyles2","_useSelector","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","createMuiTheme","secondary","ReactDOM","render","es","ThemeProvider","react_router_dom","scroll_to_top","path","exact","withLayout","ManageList","Reports","ReviewDetail","ViewCowshed","CommonSelectList","components_message","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1bc9661.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.aadf2c3d.png\";","module.exports = __webpack_public_path__ + \"static/media/a.684dfab2.pdf\";","\nimport { DateTime } from 'luxon';\nimport R from 'ramda';\nimport {\n    SAVE_REVIEW_DETAIL,\n    SAVE_CONTENT,\n    ADD_CONTENT,\n    CLEAR_STATE\n} from '../actionTypes';\n\n// const initState = {\n//     // 责任人、评估人\n//     assesser: {\n//         label: '',\n//         value: ''\n//     },\n//     assessDate: DateTime.local(),\n//     type: '', // 牛舍巡棚-任务类型\n//     sub_type: '', // 牛舍巡棚-任务子类型\n//     content: [\n//         {\n//             // 业务备注\n//             note: '',\n//             // 上传图片\n//             photo: [],\n//             // 牛只\n//             cow: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 牛舍\n//             cowshed: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 乳头评估\n//             lf: '',\n//             lb: '',\n//             rf: '',\n//             rb: '',\n//             // 牛类型\n//             cowType: '',\n//             // 行走，粪便评估\n//             results: '',\n//             // 体况评估\n//             locomotionScore: '',\n//         }\n//     ],\n//     add_event: true\n// };\nconst defaultState = () => ({\n        // 责任人、评估人\n    assesser: {\n        label: '',\n        value: ''\n    },\n    assessDate: DateTime.local(),\n    assessDate2: DateTime.local().plus({\n        day: 1\n    }),\n    type: '', // 牛舍巡棚-任务类型\n    sub_type: '', // 牛舍巡棚-任务子类型\n    // 业务备注\n    note: '',\n    // 上传图片\n    photo: [],\n    // 牛只\n    cow: {\n        label: '',\n        value: ''\n    },\n    // 牛舍\n    cowshed: {\n        label: '',\n        value: ''\n    },\n    // 乳头评估\n    lf: '',\n    lb: '',\n    rf: '',\n    rb: '',\n    // 牛类型\n    cowType: '',\n    results: '',\n    add_event: true\n});\n\nexport default function (state = defaultState(), action: any) {\n    switch (action.type) {\n        // case SAVE_CONTENT: {\n        //     const { index } = action.payload;\n        //     const contentClone = R.clone(state.content);\n        //     delete action.payload.index;\n        //     const retData = {\n        //         ...contentClone[index],\n        //         ...action.payload\n        //     };\n        //     contentClone.splice(index, 1, retData);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        // case ADD_CONTENT: {\n        //     const contentItem = {\n        //         // 业务备注\n        //         note: '',\n        //         // 上传图片\n        //         photo: [],\n        //         // 牛只\n        //         cow: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 牛舍\n        //         cowshed: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 乳头评估\n        //         lf: '',\n        //         lb: '',\n        //         rf: '',\n        //         rb: '',\n        //         // 牛类型\n        //         cowType: '',\n        //         // 行走，粪便评估\n        //         results: '',\n        //         // 体况评估\n        //         locomotionScore: '',\n        //     };\n        //     const contentClone = R.clone(state.content);\n        //     contentClone.push(contentItem);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        case SAVE_REVIEW_DETAIL: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        case CLEAR_STATE: {\n            // state.content.forEach(contentItem => {\n            //     contentItem.photo.forEach((item: any) => {\n            //         URL.revokeObjectURL(item.preview);\n            //     })\n            // });\n            return defaultState();\n        }\n        default:\n            return state\n    }\n};","\n\nexport const ROUTE_HOME_PATH = [\"/\", \"/home\", \"/index\"];\n\n// export enum ROUTE_PATH_MAP {\n//     HOME_PATH\n//     // kk = \"\",\n// }\nexport const baseHost = 'http://139.196.28.170:8811';\n\n// export const baseUrl = `${baseHost}/zh-hans/api/v1/`;\nexport const baseUrl = `/zh-hans/api/v1/`;\n\nexport const getUserLocal = () => JSON.parse(localStorage.getItem('User') || '{}');\n\nexport const setUserLocal = (data: object = {}) => {\n    localStorage.setItem('User', JSON.stringify({...getUserLocal(), ...data}))\n};\n// 周立平-接口地址\nexport const baseHost2 = 'http://118.178.178.8:8088';","import {\n    LOGIN_IN,\n    LOGIN_OUT,\n    SELECT_FARM\n} from './actionTypes';\nimport { getUserLocal, setUserLocal } from '@/config';\n\ninterface Action {\n    type: string;\n    payload?: object;\n}\ninterface User {\n    token: string,\n    loginStatus: boolean,\n    farmCode: string;\n}\n\nconst { token = '', loginStatus = false, farmCode = '' }: User = getUserLocal();\nconst defaultState = () => ({ token,loginStatus,farmCode });\n\nexport default function(state: User = defaultState(), action: Action) {\n    const emptyState = {\n        token: '',\n        loginStatus: false,\n        farmCode: ''\n    };\n    const { payload } = action;\n\n    switch(action.type) {\n        case LOGIN_IN: {\n            setUserLocal(payload);\n            return {\n                ...state,\n                ...payload\n            }\n        }\n        case LOGIN_OUT: {\n            setUserLocal(emptyState);\n            return {\n                token: '',\n                loginStatus: false,\n                farmCode: ''\n            }\n        }\n        case SELECT_FARM: {\n            setUserLocal(payload);\n            return {\n                ...state,\n                ...payload\n            }\n        }\n        default:\n            return state\n    }\n}\n","import User from './modules/user/reducers';\nimport Message from './modules/message/reducers';\n\nexport default {\n    User,\n    Message\n}","export const LOGIN_IN = 'LOGIN_IN';\nexport const LOGIN_OUT = 'LOGIN_OUT';\nexport const SELECT_FARM = 'SELECT_FARM';","import {\n    SHOW_MESSAGE,\n    CLOSE_MESSAGE\n} from './actionTypes';\n\ninterface Action {\n    type: string;\n    payload?: object;\n}\ninterface State {\n    variant: string;\n    open: boolean;\n    message: string;\n}\n\nconst defaultState = () => ({\n    variant: 'error',\n    open: false,\n    message: ''\n});\n\nexport default function(state: State = defaultState(), action: Action) {\n    const { payload } = action;\n    switch (action.type) {\n        case SHOW_MESSAGE: {\n            return {\n                ...state,\n                open: true,\n                ...payload\n            }\n        }\n        case CLOSE_MESSAGE: {\n            return {\n                ...state,\n                open: false\n            }\n        }\n        default:\n            return state\n    }\n}\n","export const SHOW_MESSAGE = 'SHOW_MESSAGE';\nexport const CLOSE_MESSAGE = 'CLOSE_MESSAGE';","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\nimport reviewDetailStore from '@/views/review-detail/redux/reducers';\nimport GlobalStore from './reducers';\n\nconst rootReducers = combineReducers({...GlobalStore, reviewDetailStore});\n\nexport default createStore(\n    rootReducers,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);","// 评估人信息\nexport const SAVE_ASSESSER = 'SAVE_ASSESSER';\n// 评估日期\nexport const SAVE_DATE = 'SAVE_DATE';\n// 业务备注\nexport const SAVE_NOTE = 'SAVE_NOTE';\n// 图片信息\nexport const SAVE_IMGS = 'SAVE_IMGS';\n// 牛只信息\nexport const SAVE_COW = 'SAVE_COW';\n// 牛舍信息\nexport const SAVE_COWSHED = 'SAVE_COWSHED';\n// 牛类型\nexport const SAVE_COW_TYPE = 'SAVE_COW_TYPE';\n// 乳头信息\nexport const SAVE_TEATS = 'SAVE_TEATS';\n// 结果信息\nexport const SAVE_RESULTS = 'SAVE_RESULTS';\n// 体况评分结果\nexport const SAVE_LOCOMOTION_SCORE = 'SAVE_LOCOMOTION_SCORE';\n// 评估详情信息\nexport const SAVE_REVIEW_DETAIL = 'SAVE_REVIEW_DETAIL';\n// 修改数组里面某一项值\nexport const SAVE_CONTENT = 'SAVE_CONTENT';\n\n// 修改数组里面某一项值\nexport const ADD_CONTENT = 'ADD_CONTENT';\n\n// 清空数据\nexport const CLEAR_STATE = 'CLEAR_STATE';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BottomNavigation,\n    BottomNavigationAction\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Home as HomeIcon,\n    Description as DescriptionIcon,\n    TrendingUp as TrendingUpIcon\n} from '@material-ui/icons';\nimport { ROUTE_HOME_PATH } from \"../../config\";\n\nconst useStyles = makeStyles({\n    layout: {\n        // height: '100vh'\n    },\n    bottomNav: {\n        position:'fixed',\n        width: '100%',\n        bottom: 0,\n        zIndex: 10,\n        boxShadow: \"0 -1px 5px 0 rgba(58, 59, 59, 0.5)\"\n    },\n});\n\ninterface IProps {\n    location: {\n        pathname: string;\n    },\n    history: {\n        push: (pathname: string) => void;\n    }\n}\n\nexport default (Component: any) => (props: IProps) => {\n    const classes = useStyles();\n    const { location, history } = props;\n    const value = ROUTE_HOME_PATH.includes(location.pathname) ? ROUTE_HOME_PATH[1] : location.pathname;\n\n    return (\n        <div className={classes.layout}>\n            <Component {...props} />\n\n            <BottomNavigation\n                value={value}\n                onChange={(e, pathname) => history.push(pathname)}\n                className={classes.bottomNav}\n                showLabels\n            >\n                <BottomNavigationAction label=\"主页\" value={ROUTE_HOME_PATH[1]} icon={<HomeIcon />} />\n                <BottomNavigationAction label=\"任务\" value=\"/tasks\" icon={<DescriptionIcon />} />\n                <BottomNavigationAction label=\"报表\" value=\"/reports\" icon={<TrendingUpIcon />} />\n                <BottomNavigationAction label=\"查牛\" value=\"/search\" icon={<SearchIcon />} />\n            </BottomNavigation>\n        </div>\n    )\n};\n","import {\n    SHOW_MESSAGE,\n    CLOSE_MESSAGE\n} from './actionTypes';\n\ninterface ShowMessage {\n    variant: string;\n    message: string;\n}\n\nexport const showMessage = (data: ShowMessage) => ({\n    type: SHOW_MESSAGE,\n    payload: {\n        ...data\n    }\n});\nexport const closeMessage = () => ({\n    type: CLOSE_MESSAGE\n});\n","import { ajax, AjaxResponse } from 'rxjs/ajax';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY, throwError } from 'rxjs';\nimport { baseUrl, getUserLocal } from '@/config';\nimport { showMessage, loginOut } from '@/redux/actions';\nimport store from '@/redux/store';\n\nconst dispatchMessage = (message: string) => store.dispatch(showMessage({ variant: 'error', message}));\nconst dispatchToLogin = () => {\n    store.dispatch(loginOut());\n    window.location.href=`${window.location.origin}/#/login`;\n};\nconst handleError = (error: AjaxResponse) => {\n    console.log('handleError', error);\n    if (error && error.status) {\n        switch (error.status) {\n          case 400:\n            dispatchMessage('参数错误');\n            break\n          case 401:\n            dispatchMessage('未授权，请登录');\n            dispatchToLogin();\n            break\n          case 402:\n            dispatchMessage('登录过期，请重新登录');\n            dispatchToLogin();\n            break\n          case 403: dispatchMessage('拒绝访问'); break\n          case 404: dispatchMessage('请求地址出错'); break\n          case 408: dispatchMessage('请求超时'); break\n          case 500: dispatchMessage('服务器内部错误'); break\n          case 501: dispatchMessage('服务未实现'); break\n          case 502: dispatchMessage('网关错误'); break\n          case 503: dispatchMessage('服务不可用'); break\n          case 504: dispatchMessage('网关超时'); break\n          case 505: dispatchMessage('HTTP版本不受支持'); break\n          default: break\n        }\n    }\n    return throwError(error);\n};\nexport default {\n    get(url: string, params: any, options?: ApiOptions) {\n        let initUrl = `${baseUrl}${url}/`;\n        let headers: ApiHeaders = {};\n        let formaturl: string = '';\n        let { token, farmCode } = getUserLocal();\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.User.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmCode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmCode}/${url}/`;\n        }\n        if(options && options.useId && options.useFarmCode) {\n            const { id } = params;\n            initUrl = `${baseUrl}${farmCode}/${url}/${id}/`;\n            delete params.id;\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmCode });\n        }\n        \n        formaturl = `${initUrl}?${Object.entries(params).map(item => item.join('=')).join('&')}`;\n\n        return ajax.get(formaturl, headers).pipe(\n            catchError(handleError)\n        );\n    },\n    post(url: string, params: object | string, options?: ApiOptions) {\n        let headers: ApiHeaders = {};\n        let initUrl = `${baseUrl}${url}/`;\n        let { token, farmCode } = getUserLocal();\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.User.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmCode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmCode}/${url}/`\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmCode });\n        }\n        if(options && options.useJSON) {\n            headers['content-type'] = 'application/json';\n        }\n        if(options && options.overrideHeaders) {\n            headers = options.overrideHeaders(headers);\n        }\n        return ajax.post(initUrl, params, headers).pipe(\n            catchError(handleError)\n        );\n    }\n}","import {\n    LOGIN_IN,\n    LOGIN_OUT,\n    SELECT_FARM\n} from './actionTypes';\n\ninterface LoginIn {\n    token: string;\n    loginStatus: boolean;\n}\n\ninterface SelectFarm {\n    farmCode: string;\n}\ninterface Action {\n    type: string;\n    payload?: object;\n}\n\nexport const loginIn = (data: LoginIn): Action => ({\n    type: LOGIN_IN,\n    payload: {\n        ...data\n    }\n});\nexport const loginOut = (): Action => ({\n    type: LOGIN_OUT\n});\nexport const selectFarm = (data: SelectFarm): Action => ({\n    type: SELECT_FARM,\n    payload: {\n        ...data\n    }\n});\n","import base from './base';\n\n// 使用code发送给接口端\nexport const loginIn$ = (params: object) => base.post('aladinauth', params, { useToken: false });\n\nexport const fetchCanUseFarms$ = (params: object) => base.get('farms', params, { useToken: true });\n\nexport const uploadImgs$ = (params: object) => base.post('imagesupload', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表\nexport const fetchTodoTaskRuns$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表单项明细(完工单明细)\nexport const fetchTodoTaskRunsDetail$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true, useId: true });\n\n// 用户列表\nexport const fetchUsersList$ = (params: object) => base.get('users', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛号列表\nexport const fetchCowlitesList$ = (params: object) => base.get('cowlites', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛舎列表\nexport const fetchPensList$ = (params: object) => base.get('pens', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息列表\nexport const fetchCalfsList$ = (params: object) => base.get('cows', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息详情\nexport const fetchCalfsDetail$ = (params: any) => {\n    const options = {\n        useFarmCode: true,\n        useToken: true,\n        useId: true\n    }\n\n    return base.get('cows', params, options);\n};\n\n// 牛舍巡棚页面\n// 任务类型\nexport const fetchTodoTaskTypes$ = (params: object = {}) => base.get('todotasktypes', params, { useFarmCode: false, useToken: true });\n\n// 乳头评分\nexport const postAssessTeats$ = (params: object | string) => base.post('assessteats', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 行走评分\nexport const postAssessLocomotions$ = (params: object | string) => base.post('assesslocomotions', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 体况评分\nexport const postAssessBcss$ = (params: object | string) => base.post('assessbcss', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 粪便评分\nexport const postAssessFaecess$ = (params: object | string) => base.post('assessfaecess', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 牛舍巡棚\nexport const postMTodoTasks$ = (params: object | string) => base.post('mtodotasks', params, { useToken: true, useFarmCode: true, useJSON: true });\n\n// 现场报告-清单\nexport const getOnsiteAssessments$ = (params: object | string) => base.get('onsiteassessments', params, { useToken: true, useFarmCode: true });\n\n// 流程接口\nexport const getDraftsHz$ = (params: object | string) => base.get('drafts-hz', params, { useToken: true, useFarmCode: true });\n\n// 流程明细\nexport const getDrafts$ = (params: object | string) => base.get('drafts', params, { useToken: true, useFarmCode: true });\n","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    loginSubTitle: {\n        fontSize: '16px',\n        color: '#ccc'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px',\n        marginBottom: 2\n    },\n    textField: {\n        marginTop: '30px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    }\n});\nexport default useStyles;","import React from 'react';\nimport { Button as MButton, CircularProgress, ButtonGroup } from '@material-ui/core';\n\ninterface IProps {\n    loading: boolean;\n    loadingTxt?: string;\n    btnText: string;\n    onClick?: () => void;\n    className?: string | undefined;\n}\n\nconst Button: React.FC<IProps> = props => {\n\n    return (\n        <ButtonGroup\n            onClick={() => props.onClick && props.onClick()}\n            className={props.className}\n            fullWidth\n            size=\"medium\"\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"Full width outlined button group\"\n        >\n            <MButton>\n                <Choose>\n                    <When condition={props.loading}>\n                        <CircularProgress size={18} color=\"secondary\" style={{\n                            marginRight: '10px'\n                        }} />\n                        {\n                            props.loadingTxt || '正在操作中...'\n                        }\n                    </When>\n                    <Otherwise>\n                        {props.btnText}\n                    </Otherwise>\n                </Choose>\n            </MButton>\n        </ButtonGroup>\n    )\n}\nexport default Button;","import { useDispatch } from 'react-redux';\nimport { showMessage } from '@/redux/actions';\n\ninterface Params {\n    variant: string;\n    message: string;\n}\nexport default function useMessage() {\n    const dispatch = useDispatch();\n\n    return function(params: Params): void {\n        dispatch(showMessage(params));\n    }\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\nimport {\n    Container,\n    InputAdornment,\n    Grid,\n    Link,\n    IconButton,\n    FormControl,\n    InputLabel,\n    Input\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { from, throwError } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { loginIn as LoginIn } from '@/redux/actions';\nimport { loginIn$ } from '@/api';\nimport useStyles from './styles';\nimport MButton from '@/components/button';\nimport qs from 'qs';\nimport { baseHost2 } from '@/config';\nimport schema from 'async-validator';\nimport useMessage from '@/hooks/useMessage';\n\ninterface State {\n    password: string;\n    username: string;\n}\ninterface LoginIn {\n    token: string;\n    loginStatus: boolean;\n}\n\nconst descriptor = {\n    username: {\n        validator: (rule: any, value: string) => {\n            if (!value) {\n                return new Error('请输入手机号');\n            }\n            if (!/^1[34578]\\d{9}$/.test(value)) {\n                return new Error('手机号格式有误');\n            }\n            return true;\n        }\n    },\n    password: {\n        required: true,\n        type: 'string',\n        message: '请输入密码'\n    }\n};\nconst validator = new schema(descriptor);\n\nconst Login: React.FC = (props: any) => {\n    const loginStatus = useSelector((state: any) => state.User.loginStatus);\n    const dispatch = useDispatch();\n    const showMessage = useMessage();\n    const [loginInfo, setLoginInfo] = useState<State>({\n        username: '13482545420',\n        password: '123456'\n    });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n   \n    const loginIn = (data: LoginIn) => dispatch(LoginIn(data));\n    const handleUserInfoChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setLoginInfo({...loginInfo, [name]: e.target.value})\n    };\n    const getCode = () => {\n        return ajax({\n            url: `${baseHost2}/mobile/login/`,\n            method: 'post',\n            body: qs.stringify({\n                username: loginInfo.username,\n                password: loginInfo.password,\n                client_id: '611753',\n                redirect_uri: 'http://aladdin.cas.cx',\n                response_type: 'code',\n                scope: 'openid profile email phone address ',\n                state: ''\n            })\n        })\n    }\n    const getToken = (code: string | number) => {\n        return loginIn$({ code })\n    };\n    const loginAuth = () => {\n        setLoading(true);\n        const validatorObser = from(validator.validate(loginInfo, () => {}));\n        const apiInst = validatorObser.pipe(\n            catchError((error: any) => {\n                const message = error.errors.map((item: any) => item.message)[0];\n                showMessage({ variant: 'warning', message });\n                return throwError(error);\n            }),\n            concatMap(() => {\n                return getCode().pipe(\n                    map(({ response }) => response)\n                );\n            }),\n            concatMap(response => {\n                return getToken(response.code).pipe(\n                    map(({ response }) => response)\n                )\n            }),\n            catchError((error: any) => {\n                setLoading(false);\n                return throwError(error);\n            })\n        ).subscribe(\n            data => {\n                loginIn({\n                    token: data.token,\n                    loginStatus: true\n                });\n                apiInst.unsubscribe();\n                dispatch({ type: 'CLOSE_MESSAGE' });\n                props.history.push('/selectRanch');\n            },\n            error => {\n                console.log('error', error);\n                apiInst.unsubscribe();\n            }\n        );\n    };\n\n    return (\n        <Container >\n            {/* <If condition={loginStatus}>\n                <Redirect to=\"/home\" />\n            </If> */}\n            <h1 className={`${classes.loginTitle} text-center`}>\n                登录阿拉钉牧场\n            </h1>\n            <h4 className={`${classes.loginSubTitle}  text-center`}>\n                {/* 请用您的手机号登陆 */}\n                欢迎您使用阿拉钉牧场平台\n            </h4>\n            <div className={classes.formContainer}>\n                <FormControl\n                    fullWidth\n                    className={classes.textField}\n                >\n                    <InputLabel htmlFor=\"adornment-mobile\">手机号</InputLabel>\n                    <Input\n                        id=\"adornment-mobile\"\n                        value={loginInfo.username}\n                        onChange={handleUserInfoChange('username')}\n                    />\n                </FormControl>\n                <FormControl\n                    fullWidth\n                    className={classes.textField}\n                >\n                    <InputLabel htmlFor=\"adornment-password\">密码</InputLabel>\n                    <Input\n                        id=\"adornment-password\"\n                        type={showPassword ? 'text' : 'password'}\n                        value={loginInfo.password}\n                        onChange={handleUserInfoChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => setShowPassword(!showPassword)}\n                                    onMouseDown={e => e.preventDefault()}\n                                >\n                                    <If condition={showPassword}>\n                                        <Visibility color=\"primary\" />\n                                    </If>\n                                    <If condition={!showPassword}>\n                                        <VisibilityOff  />\n                                    </If>\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n \n                <MButton\n                    className={classes.textField}\n                    loading={loading}\n                    loadingTxt=\"登录中\"\n                    onClick={loginAuth}\n                    btnText=\"登录\"\n                />\n            </div>\n            <Grid container className={classes.register}>\n                <Grid item xs={2} >\n                    \n                </Grid>\n                <Grid item xs={6} >\n                    <span>我还没有账号</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <Link component={RouterLink} to=\"/register\"> 我要注册 </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\nexport default Login;","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '10vh'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px'\n    },\n    textField: {\n        marginTop: '12px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    },\n    registerbtn: {\n        marginTop: 25\n    },\n    registerSuccess: {\n        width: '85%',\n        margin: '15vh auto 0',\n        color: '#999',\n        textAlign: 'center',\n        fontSize: '14px'\n    },\n    padding0: {\n        padding: 0\n    }\n});\n\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n    Container,\n    ButtonGroup,\n    Grid,\n    Link,\n    InputAdornment,\n    Button,\n    InputLabel,\n    Input,\n    FormControl,\n    IconButton\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport qs from 'qs';\nimport useStyles from './styles';\nimport MButton from '@/components/button';\nimport { from, EMPTY, Subscription } from 'rxjs';\nimport { concatMap, catchError, pluck, tap } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax';\n// import { baseHost2 } from '@/config';\nimport useMessage from '@/hooks/useMessage';\nimport schema from 'async-validator';\n\ninterface State {\n    phone_number: string;\n    password: string;\n    confirm_password: string;\n    company_name: string;\n    verify_code: string;\n}\nconst descriptorPhoneNumber = {\n    phone_number: {\n        validator: (rule: any, value: string) => {\n            if (!value) {\n                return new Error('请输入手机号');\n            }\n            if (!/^1[34578]\\d{9}$/.test(value)) {\n                return new Error('手机号格式有误');\n            }\n            return true;\n        }\n    }\n};\nconst descriptor = {\n    ...descriptorPhoneNumber,\n    verify_code: {\n        required: true,\n        type: 'string',\n        message: '请输入验证码'\n    },\n    password: {\n        required: true,\n        type: 'string',\n        message: '请输入密码'\n    },\n    confirm_password(rule: any, value: string, callback: any, source: State) {\n        if (!value) {\n            return new Error('请输入确认密码');\n        }\n        if (value !== source.password) {\n            return new Error('两次密码不一致')\n        }\n        return true;\n    },\n    company_name: {\n        required: true,\n        type: 'string',\n        message: '请输入公司名称'\n    }\n};\nconst validator = new schema(descriptor);\nconst validatorPhoneNumber = new schema(descriptorPhoneNumber);\n\nconst Register: React.FC = (props: any) => {\n    const classes = useStyles();\n    const [RegisterForm, setRegisterForm] = useState<State>({\n        phone_number: '',\n        password: '',\n        confirm_password: '',\n        company_name: '',\n        verify_code: ''\n    });\n    const [hasRegister, setHasRegister] = useState(false);\n    const [btnDisabledState, setBtnDisabledState] = useState(false);\n    const [codeTime, setCodeTime] = useState(30);\n    const [btnTxt, setBtnTxt] = useState('获取验证码');\n    const [loading, setLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n    const showMessage = useMessage();\n\n    const handleGetMobileCode = () => {\n        setBtnDisabledState(true);\n        let apiInst: Subscription;\n        const Params = {\n            method: 'get',\n            url: `/accounts/check_phone_code/${RegisterForm.phone_number}/`,\n            crossDomain: true,\n            withCredentials: true\n        };\n        apiInst = from(\n            validatorPhoneNumber.validate(\n                { phone_number: RegisterForm.phone_number },\n                () => {}\n            )\n        ).pipe(\n            catchError(error => {\n                const message = error.errors[0].message;\n                showMessage({ variant: 'warning', message });\n                setBtnDisabledState(false);\n                return EMPTY;\n            }),\n            concatMap(() => ajax(Params).pipe(tap(data => console.log('data', data))))\n        ).subscribe(\n            () => {\n                apiInst.unsubscribe();\n                showMessage({ variant: 'success', message: '发送成功，请注意查收！'});\n            },\n            error => {\n                console.log('error', error);\n                apiInst.unsubscribe();\n                setBtnDisabledState(false);\n                showMessage({ variant: 'error', message: error});\n            }\n        )\n    };\n    const handleRegisterFormChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setRegisterForm({ ...RegisterForm, [name]: e.target.value });\n    }\n    const handleRegister = () => {\n        setLoading(true);\n        const Params = {\n            method: 'post', \n            url: `/mobile/reg/`,\n            crossDomain: true,\n            withCredentials: true,\n            body: qs.stringify(RegisterForm)\n        };\n        const apiInst = from(validator.validate(RegisterForm, () => {})).pipe(\n            catchError(error => {\n                const message = error.errors[0].message;\n                showMessage({ variant: 'warning', message });\n                setLoading(false);\n                return EMPTY;\n            }),\n            concatMap(() => ajax(Params).pipe(pluck('response')))\n        ).subscribe(\n            data => {\n                setLoading(false);\n                apiInst.unsubscribe();\n                if (data.success) {\n                    showMessage({ variant: 'success', message: '注册成功!' });\n                    setHasRegister(true)\n                } else {\n                    showMessage({ variant: 'error', message: data.error_msg });\n                }\n            },\n            error => {\n                apiInst.unsubscribe();\n                setLoading(false);\n                showMessage({ variant: 'error', message: error});\n            }\n        );\n    }\n\n    useEffect(() => {\n        let timerId: any;\n        if (btnDisabledState) {\n            setBtnTxt(`${codeTime}s`);\n            timerId = setInterval(() => {\n                clearInterval(timerId);\n                if (codeTime !== 0) {\n                    setCodeTime(codeTime => codeTime - 1);\n                } else {\n                    setBtnDisabledState(false);\n                    setCodeTime(30);\n                }\n            }, 1000);\n        } else {\n            setBtnTxt('获取验证码');\n        }\n        return () => clearInterval(timerId);\n    }, [btnDisabledState, codeTime]);\n\n    return (\n        <Container >\n            <h1 className={`${classes.loginTitle} text-center`}>\n                阿拉钉牧业通用平台\n            </h1>\n            <Choose>\n                <When condition={!hasRegister}>\n                    <div className={classes.formContainer}>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-phone_number\">手机号</InputLabel>\n                            <Input\n                                id=\"adornment-phone_number\"\n                                value={RegisterForm.phone_number}\n                                onChange={handleRegisterFormChange('phone_number')}\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-verify_code\">验证码</InputLabel>\n                            <Input\n                                id=\"adornment-verify_code\"\n                                value={RegisterForm.verify_code}\n                                onChange={handleRegisterFormChange('verify_code')}\n                                endAdornment={\n                                    <Button\n                                        variant=\"text\"\n                                        className={classes.codeBtn}\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        disabled={btnDisabledState}\n                                        onClick={handleGetMobileCode}\n                                    >\n                                        {btnTxt}\n                                    </Button>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-password\">密码</InputLabel>\n                            <Input\n                                id=\"adornment-password\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={RegisterForm.password}\n                                onChange={handleRegisterFormChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => setShowPassword(!showPassword)}\n                                            onMouseDown={e => e.preventDefault()}\n                                        >\n                                            <If condition={showPassword}>\n                                                <Visibility color=\"primary\" />\n                                            </If>\n                                            <If condition={!showPassword}>\n                                                <VisibilityOff  />\n                                            </If>\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-confirm_password\">确认密码</InputLabel>\n                            <Input\n                                id=\"adornment-confirm_password\"\n                                type={showConfirmPassword ? 'text' : 'password'}\n                                value={RegisterForm.confirm_password}\n                                onChange={handleRegisterFormChange('confirm_password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm_password visibility\"\n                                            onClick={() => setConfirmShowPassword(!showConfirmPassword)}\n                                            onMouseDown={e => e.preventDefault()}\n                                        >\n                                            <If condition={showConfirmPassword}>\n                                                <Visibility color=\"primary\" />\n                                            </If>\n                                            <If condition={!showConfirmPassword}>\n                                                <VisibilityOff  />\n                                            </If>\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-company_name\">请输入企业名称</InputLabel>\n                            <Input\n                                id=\"adornment-company_name\"\n                                value={RegisterForm.company_name}\n                                onChange={handleRegisterFormChange('company_name')}\n                            />\n                        </FormControl>\n                        <MButton\n                            className={classes.registerbtn}\n                            loading={loading}\n                            loadingTxt=\"注册中\"\n                            onClick={handleRegister}\n                            btnText=\"注册\"\n                        />\n                        <Grid container className={classes.register}>\n                            <Grid item xs={1} >\n                                \n                            </Grid>\n                            <Grid item xs={7} >\n                                <span>已经有账户</span>\n                            </Grid>\n                            <Grid item xs={4} className=\"text-center\">\n                                <Link component={RouterLink} to=\"/login\">登录</Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </When>\n                <Otherwise>\n                    <div className={classes.registerSuccess}>\n                        <h3>欢迎使用，有任何问题请致电：</h3>\n                        <h3>18621812625</h3>\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                            onClick={() => props.history.push('/login')}\n                        >\n                            <Button>\n                                继续\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Otherwise>\n            </Choose>\n        </Container>\n    );\n}\nexport default Register;","import React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n        // marginBottom: 20\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n    },\n    iconButton: {\n      padding: 5,\n    }\n});\n\ninterface SearchProps {\n    loading?: boolean;\n    searchMethod?: any;\n    placeholder?: string;\n    searchOnValueIsEmpty: boolean;\n    onSearchChange?:() => void;\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const handleClickSearch = () => {\n        if (!props.searchOnValueIsEmpty && !value) {\n            return;\n        }\n        props.searchMethod && props.searchMethod(value);\n    };\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        const inputSub = fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                if(!props.searchOnValueIsEmpty && !value) return;\n                props.searchMethod && props.searchMethod(value);\n            }\n        );\n        return () => inputSub.unsubscribe()\n    },[inputRef, handleClickSearch]);\n\n    return (\n        <Paper className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={props.placeholder}\n                inputProps={{ 'aria-label': '搜索阿拉钉牧场' }}\n                inputRef={inputRef}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                type=\"search\"\n            />\n            <Choose>\n                <When condition={props.loading}>\n                    <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                    >\n                        <CircularProgress size={21} color=\"primary\" />\n                    </IconButton>\n                </When>\n                <Otherwise>\n                <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                        onClick={handleClickSearch}\n                    >\n                        <SearchIcon\n                            color={ value ? 'primary' : 'disabled'}\n                        />\n                    </IconButton>\n                </Otherwise>\n            </Choose>\n        </Paper>\n    )\n}\nexport default Search;","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    container: {\n        width: '85%',\n        margin: '15vh auto 0'\n    },\n    title: {\n        fontSize: '20px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    ranchList: {\n        paddingLeft: 10,\n        marginTop: 10\n    }\n});\nexport default useStyles;","import React,{ useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { map } from 'rxjs/operators';\nimport {\n    Grid,\n    Switch,\n    TextField,\n    Button,\n    ButtonGroup,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormControlLabel\n} from '@material-ui/core';\nimport { selectFarm as SelectFarm } from '@/redux/actions';\nimport Search from '@/components/search/index';\nimport { fetchCanUseFarms$ } from '@/api';\nimport useStyles from './styles';\nimport \"./index.scss\";\n\ninterface aldRanchItem {\n    farm_code: string;\n    farm_name: string;\n}\ninterface SelectFarm {\n    farmCode: string;\n}\n\nconst SelectRanch = (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [params, setParams] = useState({\n        page: 1,\n        page_size: 1000,\n        search: ''\n    });\n    const [otherRanchState, setOtherRanchState] = React.useState(false);\n    const [checkALD, setCheckALD] = useState(true);\n    const [aldRanch, setAldRanch] = useState('');\n    const [other, setOtherRanch] = useState('');\n    const [aldRanchList, setAldRanchList] = useState<aldRanchItem[]>([]);\n\n    const selectFarm = (data: SelectFarm) => dispatch(SelectFarm(data));\n    const handleChange = (e: any) => {\n        setCheckALD(e.target.checked)\n    };\n    const handleALDRanchChange = (e: any) => {\n        setAldRanch(e.target.value)\n    }\n    const handleInputOtherRanch = (e: any) => {\n        setOtherRanch(e.target.value);\n    }\n    const jumpToHome = () => {\n        if (checkALD && !aldRanch) return;\n        if (!checkALD && !other) return;\n        let isALD = \"0\";\n        if (checkALD) {\n            isALD = \"1\";\n            selectFarm({farmCode: aldRanch});\n        } else {\n            setOtherRanchState(!other);\n            if (!other) return;\n        }\n        props.history.push(`/home?isALD=${isALD}`);\n        sessionStorage.setItem(\"isALD\", isALD);\n    };\n\n    useEffect(() =>  {\n        const apiInst =  fetchCanUseFarms$(params).pipe(\n            map(({ response = {} }) => (response.results || []))\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setAldRanchList(data);\n                setAldRanch((data[0] && data[0].farm_code) || '');\n            },\n            error => {\n                console.log('error', error);\n            }\n        )\n        return () => {\n            apiInst.unsubscribe();\n        }\n    }, [params]);\n\n    return (\n        <div className=\"select-ranch-wrapper\">\n            <div className=\"select-ranch-container\">\n                <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Grid item xs={8}>\n                        <h1 className={classes.title}>登陆阿拉钉牧场</h1>\n                    </Grid>\n                    <Grid item xs={4} className=\"text-right\">\n                        <Switch\n                            checked={checkALD}\n                            color=\"primary\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Choose>\n                    <When condition={checkALD}>\n                        <Search\n                            searchMethod={(search: string) => setParams({\n                                ...params,\n                                search\n                            })}\n                            searchOnValueIsEmpty={true}\n                        />\n                        <FormControl component=\"fieldset\" className={classes.ranchList}>\n                            <RadioGroup aria-label=\"position\" name=\"position\" value={aldRanch} onChange={handleALDRanchChange}>\n                                {\n                                    aldRanchList.map(item => (\n                                        <FormControlLabel\n                                            key={item.farm_code}\n                                            value={item.farm_code}\n                                            control={<Radio color=\"primary\" />}\n                                            label={item.farm_name}\n                                            labelPlacement=\"end\"\n                                        />\n                                    ))\n                                }\n                            </RadioGroup>\n                            <If condition={!aldRanchList.length}>\n                                <h6 className=\"text-center\">无可用牧场</h6>\n                            </If>\n                        </FormControl>\n                    </When>\n                    <Otherwise>\n                        <TextField\n                            error={otherRanchState}\n                            className={classes.textField}\n                            placeholder=\"录入您的牧场名称,如XXX牧场\"\n                            fullWidth\n                            value={other}\n                            onChange={handleInputOtherRanch}\n                            helperText={otherRanchState ? \"请录入您的牧场名称\" : \"\"}\n                        />\n                    </Otherwise>\n                </Choose>\n                <ButtonGroup\n                    className={classes.textField}\n                    fullWidth\n                    size=\"medium\"\n                    onClick={jumpToHome}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"Full width outlined button group\"\n                    disabled={!aldRanchList.length}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectRanch;","\n/**\n * Home Page Header Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme: any) => ({\n    aldFarm: {\n        height: '20vh',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        paddingTop: 20,\n        width: '100%',\n        top: 0,\n        \"& h4\": {\n            marginTop: 0,\n            marginBottom: 0\n        },\n        position: 'fixed'\n    },\n    textWhite: {\n        color: 'white'\n    },\n    menuItem: {\n        width: 80\n    }\n}));\n","/**\n * Home Page Header Area \n */\nimport React from \"react\";\nimport { Container, Grid, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport {\n    PermIdentity,\n    MoreVert as MoreVertIcon,\n    PowerSettingsNew\n} from '@material-ui/icons';\nimport useStyles from \"./_styles\";\nimport { useDispatch } from 'react-redux';\nimport { loginOut } from '@/redux/actions';\n\nconst ITEM_HEIGHT = 48;\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const LoginOut = () => dispatch(loginOut());\n\n    const Items = [\n        {\n            label: '我的',\n            component: <PermIdentity color=\"primary\" />,\n            cb() {\n                props.history.push('/user')\n            }\n        },\n        {\n            label: '退出',\n            component: <PowerSettingsNew color=\"primary\" />,\n            cb() {\n                LoginOut();\n                props.history.push('/login')\n            }\n        }\n    ];\n\n    function handleMenuItemClick(cb: () => void) {\n        handleClose();\n        cb();\n    }\n    function handleClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    return (\n        <Container className={classes.aldFarm}>\n            <Grid container>\n                <Grid item xs={8}>\n                    <h4>ALDFarm</h4>\n                    <h4>连接牧场一切信息</h4>\n                </Grid>\n                <Grid item xs={4} className=\"text-right\">\n                    <IconButton\n                        aria-label=\"user\"\n                        className={classes.textWhite}\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                </Grid>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                        },\n                    }}\n                >\n                    {Items.map(option => (\n                        <MenuItem\n                            key={option.label}\n                            onClick={() => handleMenuItemClick(option.cb)}\n                        >\n                            {option.component} {option.label}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </Grid>\n        </Container>\n    );\n};\n","\n/**\n * Home Page entrance Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    homeContainer: {\n        height: '100vh',\n        overflowY: 'auto',\n        background: '#fff'\n    },\n    homeContent: {\n        marginTop: 85,\n        paddingTop: 30,\n        paddingBottom: 20,\n        zIndex: 5,\n        position: 'relative',\n        background: '#fff',\n        textAlign: 'center',\n        borderTopLeftRadius: '45px 45px',\n        borderTopRightRadius: '45px 45px',\n    },\n    homeContentIcon: {\n    },\n    searchContainer: {\n        width: '85%',\n        margin: '0 auto'\n    }\n});\n","/**\n * Home Page other page entrance area\n */\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Container, Grid, Link } from '@material-ui/core';\nimport { Description } from '@material-ui/icons';\nimport Search from '@/components/search/index';\nimport useStyles from \"./_styles\";\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\n\ninterface IProps {\n    isALD: string;\n}\n\nconst Entrance: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [searchLoading, setSearchLoading] = useState(false);\n\n    const searchMethod = (eartag: string) => {\n        console.log('eartag', eartag)\n        if (!eartag) {\n            dispatch({\n                type: 'SHOW_MESSAGE',\n                payload: {\n                    open: true,\n                    message: '请输入牛号',\n                    variant: 'warning'\n                }\n            });\n            return;\n        }\n        const params = {\n            page: 1,\n            page_size: 10,\n            eartag\n        };\n        setSearchLoading(true);\n        const apiInst = fetchCalfsList$(params).pipe(\n            map(({ response }) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                apiInst.unsubscribe();\n                setSearchLoading(false);\n                if (data.count === 1) {\n                    const { id, eartag } = data.results[0];\n                    props.history.push(`/cowDetail/${id}?eartag=${eartag}`)\n                } else {\n                    dispatch({\n                        type: 'SHOW_MESSAGE',\n                        payload: {\n                            open: true,\n                            message: '未搜到该牛号的牛只!',\n                            variant: 'warning'\n                        }\n                    });\n                }\n            },\n            error => {\n                setSearchLoading(true);\n            }\n        );\n    };\n\n    return (\n        <Container className={classes.homeContent}>\n            <div\n                className={classes.searchContainer}\n            >\n                <Search\n                    placeholder=\"搜索牛只\"\n                    searchMethod={searchMethod}\n                    loading={searchLoading}\n                    searchOnValueIsEmpty={false}\n                />\n            </div>\n            <Grid justify=\"center\" container >\n                <Choose>\n                    <When condition={props.isALD === \"1\"}>\n                        <Grid item xs={6} >\n                                <Link component={RouterLink} to=\"/manageList/ald\">\n                                    <div className=\"home-entrance-wrapper\">\n                                        <Description className=\"fs-36-it\" />\n                                        <div >\n                                            阿拉钉评估\n                                        </div>\n                                    </div>\n                                </Link>\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs={6}>\n                            <Link component={RouterLink} to=\"/manageList/society\">\n                                <div className=\"home-entrance-wrapper\">\n                                    <Description className=\"fs-36-it\" />\n                                    <div>\n                                        社会牧场评估\n                                    </div>\n                                </div>\n                            </Link>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/tasks\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                任务清单\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                现场报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                分析报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\nexport default Entrance;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nexport default function(props: any) {\n    return (\n        <Box\n            border={1}\n            borderRadius=\"borderRadius\"\n            borderColor=\"#ccc\"\n            flex=\"0 0 85%\"\n            margin=\"0 10px\"\n        >\n            {props.children}\n        </Box>\n    )\n};\n","/**\n * Home Page Reports Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    chartTitle: {\n        fontSize: '1rem',\n        color: '#111',\n        paddingLeft: '15px'\n    },\n    chartContainer: {\n        color: '#999',\n        padding: '0 0 70px',\n    }\n});\n","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","/**\n * Home Page Reports Area\n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Grid, IconButton, Box, Link } from '@material-ui/core';\nimport ReactEcharts from 'echarts-for-react';\nimport { NavigateNext } from '@material-ui/icons';\nimport ChartBox from './_chartbox';\nimport useStyles from \"./_styles\";\nimport { SevenDayOpt } from './_mock';\n\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            className={classes.chartContainer}\n            borderTop={1}\n            borderColor=\"#ccc\"\n        >\n            <Grid container alignItems=\"center\" className={classes.chartTitle}>\n                <Grid item xs>预警报表</Grid>\n                <Grid item xs={2} className=\"text-right\">\n                    <Link component={RouteLink} to=\"/reports\">\n                        <IconButton>\n                            <NavigateNext />\n                        </IconButton>\n                    </Link>\n                </Grid>\n            </Grid>\n            <Box\n                display=\"flex\"\n                flexWrap=\"nowrap\"\n                overflow=\"scroll\"\n            > \n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n            </Box>\n        </Box>\n    );\n};\n","import React from 'react';\n// import qs from \"querystring\";\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport url from \"url\";\nimport { makeStyles } from '@material-ui/styles';\nimport HomeHeader from \"./header\";\nimport Entrance from \"./entrance\";\nimport Reports from \"./report\";\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    homeContainer: {\n        background: '#fff'\n    }\n});\n\ninterface IProps{ \n    isLogin: boolean;\n}\n\nconst Home: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const loginStatus = useSelector((state: any) => state.User.loginStatus);\n    const { query } = url.parse(props.location.search, true);\n    const isALD= String(query.isALD || sessionStorage.getItem(\"isALD\") || \"0\");\n\n    return (\n        <div className={classes.homeContainer}>\n            <If condition={!loginStatus}>\n                <Redirect to=\"/login\" />\n            </If>\n            <HomeHeader {...props} />\n            <Entrance isALD={isALD} {...props} />\n            <Reports />\n        </div>\n    )\n};\nexport default Home;","import { \n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        height: 48,\n        fontSize: '1rem',\n        textAlign: 'center',\n        color: theme.palette.primary.contrastText,\n        position: 'fixed',\n        fontWeight: 'bolder',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10\n    },\n    icon: {\n        color: '#fff'\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n        color: '#fff'\n    },\n    iconButton: {\n        padding: 10,\n        color: '#fff'\n    },\n    inputBox: {\n        color: '#fff'\n    }\n}));\nexport default useStyles;","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport {\n    Grid,\n    CircularProgress,\n    IconButton,\n    Paper,\n    InputBase\n} from '@material-ui/core';\nimport {\n    ArrowBackIos,\n    Search as SearchIcon\n} from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport useStyles from './styles';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface IProps extends RouteComponentProps {\n    title: string;\n    endAdorment?: JSX.Element;\n    useSearch?: boolean;\n    autofocus?: boolean;\n    searchPlaceholder?: string;\n    searchLoading?: boolean;\n    getSearchValue?: (val: string) => void;\n    beforeRouteLeave?: () => void;\n}\n\nconst  AppBar: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const handleClickBack = () => {\n        props.beforeRouteLeave && props.beforeRouteLeave();\n        props.history.goBack();\n    };\n    const handleClickSearch = useCallback(() => {\n        return props.getSearchValue && props.getSearchValue(value);\n    }, [props, value]);\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        let inputSub: any = null;\n        inputSub = current && fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                props.getSearchValue && props.getSearchValue(value);\n            }\n        );\n        return () => inputSub && inputSub.unsubscribe();\n    },[inputRef, handleClickSearch, props]);\n\n    return (\n        <Paper className={classes.root} square={true}>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <IconButton onClick={() => handleClickBack()}>\n                        <ArrowBackIos className={classes.icon} />\n                    </IconButton>\n                </Grid>\n                <Choose>\n                    <When condition={!props.useSearch}>\n                        <Grid item xs>\n                            {props.title}\n                        </Grid>\n                        <Grid item xs={2}>\n                            {props.endAdorment}\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs=\"auto\" className={classes.inputBox}>\n                            <InputBase\n                                autoFocus={props.autofocus}\n                                type=\"search\"\n                                inputRef={inputRef}\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                className={classes.input}\n                                placeholder={props.searchPlaceholder}\n                                inputProps={{ 'aria-label': props.searchPlaceholder }}\n                            />\n                            <Choose>\n                                <When condition={props.searchLoading}>\n                                    <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                    >\n                                        <CircularProgress size={20} color=\"secondary\" />\n                                    </IconButton>\n                                </When>\n                                <Otherwise>\n                                <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                        onClick={handleClickSearch}\n                                    >\n                                        <SearchIcon\n                                             color=\"secondary\"\n                                        />\n                                    </IconButton>\n                                </Otherwise>\n                            </Choose>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default withRouter(AppBar);","import React from 'react';\nimport { Divider as MDivider } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Divider: React.FC = (props: any) => {\n    const theme = useTheme();\n    return (\n        <MDivider style={{ backgroundColor: theme.palette.primary.main }} />\n    )\n}\nexport default Divider","import React from 'react';\nimport { Typography, Box } from '@material-ui/core';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n    className?: string;\n}\n  \nexport default function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Box\n        hidden={value !== index}\n        {...other}\n      >\n        {children}\n      </Box>\n    );\n}\n  \n  ","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    selectContainer: {\n        position: 'fixed',\n        top: 48,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.12)'\n    },\n    pageContainer: {\n        padding: '100px 0 70px',\n        minHeight: '100vh',\n        boxSizing: 'border-box'\n    },\n    minHeight100: {\n        minHeight: '100vh',\n        boxSizing: 'border-box'\n    },\n    content: {\n        height: '100vh',\n        boxSizing: 'border-box',\n        padding: '100px 0 70px',\n        overflowY: 'auto'\n    },\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\n\ninterface IProps {\n    loading: boolean;\n    hasMore: boolean;\n    loadMore: () => void;\n}\nexport default function ClickLoadMore(props: IProps) {\n    const { loading, loadMore, hasMore } = props;\n    return (\n        <Choose>\n            <When condition={loading}>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                    <CircularProgress size={15} style={{ marginRight: 10 }} />正在加载中...\n                </Box>\n            </When>\n            <Otherwise>\n                <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                    {hasMore ? '点击加载更多' : '没有更多了'}\n                </Box>\n            </Otherwise>\n        </Choose>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n// import 'react-circular-progressbar/dist/styles.css';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    Paper,\n    Container,\n    Typography,\n    Tabs,\n    Tab,\n} from '@material-ui/core';\nimport {\n    ExpandMore,\n    AttachFile\n} from '@material-ui/icons';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport dayjs from 'dayjs';\nimport SwipeableViews from 'react-swipeable-views';\nimport clsx from 'clsx';\n// import { ListView } from 'antd-mobile';\nimport { useTheme } from '@material-ui/core/styles';\nimport { fetchTodoTaskRuns$, getDraftsHz$ } from '@/api';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport TabPanel from './tab-panel';\nimport useStyles from './styles';\nimport ClickLoadMore from '@/components/click-load-more';\n\nconst Tasks: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const tabList = ['繁殖', '保健', '营养', '任务'];\n    const [listMap, setListMap] = useState<IndexMap<any[]>>({\n        0: [],\n        1: [],\n        2: [],\n        3: []\n    });\n    const [pageMap, setPageMap] = useState<IndexMap<number>>({\n        0: 1,\n        1: 1,\n        2: 1,\n        3: 1,\n    });\n    const [nextMap, setNextMap] = useState<IndexMap<string>>({\n        0: 'init',\n        1: 'init',\n        2: 'init',\n        3: 'init',\n    });\n    const [firstFetchData, setFirstFetchData] = useState<IndexMap<boolean>>({\n        0: true,\n        1: true,\n        2: true,\n        3: true,\n    });\n    const [loading, setLoading] = useState(false);\n    const [tabValue, setTabValue] = useState(3);\n    const dispatch = useDispatch();\n    const page_size = 10;\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n    }\n\n    const getTask3List = useCallback(() => {\n        const ApiInst = fetchTodoTaskRuns$({ page: pageMap[3], page_size }).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next]),\n            map(([list, next]) => {\n                const tasksList =  list.map((item: any) => {\n                    return {\n                        ...item,\n                        toNowDate: dayjs(item.run_date).diff(dayjs(), 'day')\n                    }\n                });\n                return [tasksList, next];\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setLoading(false);\n                setListMap({ ...listMap, 3: listMap[3].concat(data[0]) });\n                setNextMap({ ...nextMap, 3: data[1] });\n                firstFetchData[3] && setFirstFetchData({...firstFetchData, 3: false});\n            },\n            () => setLoading(false)\n        );\n        return ApiInst;\n    }, [pageMap]);\n    const getTaskNot3List = useCallback(() => {\n        const UsageId: IndexMap<string> = {\n            0: '270',\n            1: '269',\n            2: '268'\n        };\n        const Params = {\n            page: pageMap[tabValue],\n            page_size,\n            usage_id: UsageId[String(tabValue)]\n        };\n        const ApiInst = getDraftsHz$(Params).pipe(\n            map(({response}) => response),\n            map(response => Array.isArray(response) ? [response, null] : [response.results, response.next]),\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setLoading(false);\n                setListMap({ ...listMap, [tabValue]: listMap[tabValue].concat(data[0]) });\n                setNextMap({ ...nextMap, [tabValue]: data[1] });\n                firstFetchData[tabValue] && setFirstFetchData({...firstFetchData, [tabValue]: false});\n            },\n            () => setLoading(false)\n        );\n        return ApiInst;\n    }, [tabValue, pageMap]);\n\n    const loadMore = (index: number) => () => {\n        if (nextMap[index]) {\n            setPageMap({\n                ...pageMap,\n                [index]: pageMap[index] + 1\n            });\n        }\n    };\n\n    useEffect(() => {\n        let ApiInst: Subscription;\n        if (pageMap[tabValue]!== 1) {\n            setLoading(true);\n            ApiInst = tabValue !== 3 ? getTaskNot3List() : getTask3List();\n        }\n        return () =>  ApiInst && ApiInst.unsubscribe();\n    }, [pageMap]);\n\n    useEffect(() => {\n        let ApiInst: Subscription;\n        if (firstFetchData[tabValue]) {\n            setLoading(true);\n            ApiInst = tabValue !== 3 ? getTaskNot3List() : getTask3List();\n        }\n        return () =>  ApiInst && ApiInst.unsubscribe();\n    }, [firstFetchData, tabValue, getTaskNot3List, getTask3List]);\n\n    return (\n        <Box className={clsx('bg-gray')}>\n            <AppBar title=\"任务清单\" />\n            <Box className={classes.selectContainer}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    {\n                        tabList.map(item => <Tab key={item} label={item} />)\n                    }\n                </Tabs>\n            </Box>\n            <Container>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={tabValue}\n                    onChangeIndex={(index) => setTabValue(index)}\n                >\n                    {\n                        tabList.map((item, index) => {\n                            return (\n                                <TabPanel\n                                    key={item}\n                                    value={tabValue}\n                                    index={index}\n                                    dir={theme.direction}\n                                    // className={classes.pageContainer}\n                                >\n                                    <Box className={classes.content}>\n                                        <Choose>\n                                            <When condition={index !== 3}>\n                                                {\n                                                    listMap[index].map((item: any, i) => (\n                                                        <Paper className={classes.paper} key={`tasks-${index}item-${i}`}>\n                                                            <Box position=\"relative\">\n                                                                <Grid container>\n                                                                    <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                                                                        <Box paddingX=\"5px\">\n                                                                            <img\n                                                                                className={classes.img}\n                                                                                alt=\"complex\"\n                                                                                src={item.photo ? item.photo : require('../../assets/images/default.jpg')}\n                                                                            />\n                                                                        </Box>\n                                                                    </Grid>\n                                                                    <Grid item xs={10} container>\n                                                                        <Grid item xs=\"auto\" container direction=\"column\">\n                                                                            <Grid item xs>\n                                                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                                                    {item.workflow_type_name}\n                                                                                </Typography>\n                                                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        派工单类型：{item.drafttype}\n                                                                                    </Box>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        任务日期：{item.event_date}\n                                                                                    </Box>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        完成期限：{item.activity_done_day}\n                                                                                    </Box>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        已完成：{item.done_count} / 总数：{item.totalcount}\n                                                                                    </Box>\n                                                                                </Typography>\n                                                                            </Grid>\n                                                                            <Grid item>\n                                                                                <Divider />\n                                                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                                                    <IconButton\n                                                                                        onClick={() => props.history.push(`/tasksDetail`)}\n                                                                                        className={classes.detailBtn}>\n                                                                                        <Box\n                                                                                            fontSize=\"12px\"\n                                                                                        >\n                                                                                            明细\n                                                                                        </Box>\n                                                                                        <ExpandMore color=\"primary\" />\n                                                                                    </IconButton>\n                                                                                </Typography>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            </Box>\n                                                        </Paper>\n                                                    ))\n                                                }\n                                            </When>\n                                            <Otherwise>\n                                                {\n                                                    listMap[3].map((item: any, i) => (\n                                                        <Paper className={clsx(classes.paper, 'minHeight100')} key={`tasks-3-item-${i}`}>\n                                                            <Box position=\"relative\">\n                                                                <Grid container>\n                                                                    <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                                                                        <Box paddingX=\"5px\">\n                                                                            <img\n                                                                                className={classes.img}\n                                                                                alt=\"complex\"\n                                                                                src={item.photo ? item.photo : require('../../assets/images/default.jpg')}\n                                                                            />\n                                                                        </Box>\n                                                                    </Grid>\n                                                                    <Grid item xs={10} container>\n                                                                        <Grid item xs=\"auto\" container direction=\"column\">\n                                                                            <Grid item xs>\n                                                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                                                    {item.run_date}\n                                                                                </Typography>\n                                                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        任务名称：{item.todotask_name}\n                                                                                    </Box>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        责任人：{item.tasker_name}\n                                                                                    </Box>\n                                                                                    <Box fontSize=\"12px\">\n                                                                                        任务描述：{item.content}\n                                                                                    </Box>\n                                                                                </Typography>\n                                                                            </Grid>\n                                                                            <Grid item>\n                                                                                <Divider />\n                                                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                                                    <IconButton\n                                                                                        // onClick={() => props.history.push(`/tasksDetail`)}\n                                                                                        className={classes.detailBtn}>\n                                                                                        <Box\n                                                                                            fontSize=\"12px\"\n                                                                                        >\n                                                                                            明细\n                                                                                        </Box>\n                                                                                        <ExpandMore color=\"primary\" />\n                                                                                    </IconButton>\n                                                                                </Typography>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </Grid>\n                                                                <Box\n                                                                    position=\"absolute\"\n                                                                    right=\"0%\"\n                                                                    top=\"10%\"\n                                                                >\n                                                                    <Choose>\n                                                                        <When condition={item.attachment}>\n                                                                            <a href={item.attachment} download>\n                                                                                <IconButton>\n                                                                                    <AttachFile color=\"primary\" />\n                                                                                </IconButton>\n                                                                            </a>\n                                                                        </When>\n                                                                        <Otherwise>\n                                                                            <IconButton onClick={() => dispatch({\n                                                                                type: 'SHOW_MESSAGE',\n                                                                                payload: {\n                                                                                    open: true,\n                                                                                    variant: 'warning',\n                                                                                    message: '无可用附件下载'\n                                                                                }\n                                                                            })}>\n                                                                                <AttachFile color=\"primary\" />\n                                                                            </IconButton>\n                                                                        </Otherwise>\n                                                                    </Choose>\n                                                                </Box>\n                                                            </Box>\n                                                        </Paper>\n                                                    ))\n                                                }\n                                            </Otherwise>\n                                        </Choose>\n                                        <ClickLoadMore\n                                            loading={loading}\n                                            loadMore={loadMore(index)}\n                                            hasMore={Boolean(nextMap[index])}\n                                        />\n                                    </Box>\n                                </TabPanel>\n                            )\n                        })\n                    }\n                </SwipeableViews>\n            </Container>\n        </Box>\n    );\n}\nexport default Tasks;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    circularProgressba: {\n        width: 50\n    },\n    root: {\n        height: '23vh',\n        padding: 10,\n        paddingTop: 50\n    },\n    tablecell: {\n        padding: '10px 5px'\n    },\n    table: {\n        background: '#fff'\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Modal, Box, Paper, Divider, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\ninterface IDetail extends IndexMap<string | number> {\n    id:  number | string;\n    activity_done_day: string | number;\n    activity_task: string;\n    done_state: string | number;\n    done_state_label: string;\n    drafttype: string;\n    drug_name: string;\n    eartag: string;\n    event_date: string;\n    pen_name: string;\n    rem: string;\n    technician: string;\n    workflow_type_name: string;\n}\ninterface IProps {\n    open: boolean;\n    setOpen: (open: boolean) => void;\n    detail: IDetail;\n}\nconst DetailMap: IndexMap<string> = {\n    activity_done_day: '完成期限',\n    activity_task: '任务名称',\n    done_state_label: '状态',\n    drafttype: '流程类型',\n    drug_name: '药品',\n    eartag: '耳号',\n    event_date: '任务日期',\n    pen_name: '牛舍',\n    rem: '备注',\n    technician: '技术员',\n    workflow_type_name: '工作流程'\n};\nconst DetailFields = [\n    'activity_task',\n    'drafttype',\n    'workflow_type_name',\n    'eartag',\n    'pen_name',\n    'drug_name',\n    'technician',\n    'event_date',\n    'activity_done_day',\n    'rem',\n    'done_state_label'\n];\n\nconst useStyles = makeStyles((theme: any) => ({\n    content: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        width: '80%',\n        transform: 'translate3d(-50%,-50%, 0)',\n        backgroundColor: '#fff',\n        borderRadius: 5,\n        padding: '0 10px 10px',\n        lineHeight: 2\n    },\n    label: {\n        color: '#333',\n        marginRight: 5\n    },\n    value: {\n        color: theme.palette.primary.main\n    }\n}))\nexport default function Detail(props: IProps) {\n    const classes = useStyles();\n    const { open, setOpen, detail } = props;\n    return (\n        <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={open}\n            onClose={() => setOpen(false)}\n        >\n            <Paper className={classes.content}>\n                <Box className=\"text-center\" fontSize=\"1.2rem\">明细</Box>\n                {\n                    DetailFields.map(item => (\n                        <Box key={item}>\n                            <Divider color=\"primary\" />\n                            <Grid container>\n                                <Grid item xs=\"auto\">\n                                    <div className={clsx(classes.label, 'text-left')}>\n                                        {DetailMap[item]}:\n                                    </div>\n                                </Grid>\n                                <Grid item xs>\n                                    <div className={clsx(classes.value, 'text-right')}>\n                                        {detail[item]}\n                                    </div>\n                                </Grid>\n                            </Grid> \n                        </Box>\n                    ))\n                }\n            </Paper>\n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Grid,\n    Divider,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport clsx from 'clsx';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport AppBar from '@/components/app-bar';\nimport { getDrafts$ } from '@/api';\nimport { map, pluck, finalize } from 'rxjs/operators';\nimport useStyles from './styles';\nimport Detail from './detail';\nimport ClickLoadMore from '@/components/click-load-more';\n\ninterface Detail extends IndexMap<string | number> {\n    id: number | string;\n    activity_done_day: string | number;\n    activity_task: string;\n    done_state: string | number;\n    done_state_label: string;\n    drafttype: string;\n    drug_name: string;\n    eartag: string;\n    event_date: string;\n    pen_name: string;\n    rem: string;\n    technician: string;\n    workflow_type_name: string;\n}\n\nconst TasksDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [next, setNext] = React.useState(null);\n    const [List, setList] = useState<Detail[]>([]);\n    const [page, setPage] = useState(1);\n    const [activeData, setActiveData] = useState<Detail>({\n        id: '',\n        activity_done_day: '',\n        activity_task: '',\n        done_state: '',\n        done_state_label: '',\n        drafttype: '',\n        drug_name: '',\n        eartag: '',\n        event_date: '',\n        pen_name: '',\n        rem: '',\n        technician: '',\n        workflow_type_name: '',\n    });\n\n    const handleClick = (target: string, index: number) => {\n        const actRet = List[index];\n        if (target === 'cow') {\n            props.history.push(`/cowDetail/${actRet.id}?eartag=${actRet.eartag}`);\n        } else {\n            setActiveData(actRet);\n            setOpen(true);\n        }\n    };\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    useEffect(() => {\n        // const id = props.match.params.id;\n        setLoading(true);\n        const ApiInst = getDrafts$({}).pipe(\n            pluck('response'),\n            map(response => {\n                const DoneStateLabel: IndexMap<string> = {\n                    0: '待完工',\n                    1: '已完成',\n                    2: '已过期'\n                };\n                if(Array.isArray(response)){\n                    const List = response.map((item: Detail) => {\n                        const ret: IndexMap<string | number> = {};\n                        for(const [key, value] of Object.entries(item)){\n                            ret[key] = value || '暂无';\n                        }\n                        ret.done_state_label = DoneStateLabel[item.done_state];\n                        return ret;\n                    });\n                    return [List, null];\n                } else {\n                    return [response.results, response.next];\n                }\n            }),\n            finalize(() => setLoading(false))\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setList(data[0]);\n                setNext(data[1])\n            },\n            error => {\n                console.log('error', error);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [page]);\n\n    return (\n        <Box paddingBottom=\"30px\">\n            <AppBar title=\"完工单明细\" />\n            <Grid container className={classes.root} alignItems=\"center\">\n                <Grid item xs>\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                    <Box fontSize={12}>任务 100， 完成 75</Box>\n                    <Rating name=\"half-rating\" value={75 * 5 / 100} readOnly />\n                </Box>\n                </Grid>\n                <Grid item  xs=\"auto\">\n                    <CircularProgressbar\n                        className={classes.circularProgressba}\n                        value={75}\n                        text='75%'\n                        styles={buildStyles({\n                            pathColor: `rgba(207, 0, 15, ${75 / 100})`,\n                            textColor: `rgba(207, 0, 15, ${75 / 100})`\n                        })}\n                    />\n                </Grid>\n            </Grid>\n            <Divider />\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛号</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>类型</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务日期</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务状态</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {List.map((row: any, index: number) => (\n                        <TableRow hover key={`${row.eartag}-${index}`}>\n                            <TableCell onClick={() => handleClick('cow', index)} align=\"center\" className={classes.tablecell} >{row.eartag}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.drafttype}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.event_date}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.done_state_label}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <ClickLoadMore loadMore={loadMore} loading={loading} hasMore={Boolean(next)} />\n            <Detail open={open} detail={activeData} setOpen={setOpen} />\n        </Box>\n    )\n}\nexport default TasksDetail;","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    Container,\n    Paper\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\nimport { SevenDayOpt } from './_mock';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    root: {\n        margin: '65px 0'\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root}>\n            <AppBar title=\"预警报表\" />\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n        </Container>\n    )\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper,\n    Tabs,\n    Tab,\n    Grid,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardMedia,\n    Button\n} from '@material-ui/core';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        top: 48,\n        width: '100vw'\n    },\n    reviewListContainer: {\n        paddingTop: 96\n    },\n    media: {\n        height: 120,\n    },\n});\n\nconst RouteParamsType: any = {\n    'ald': '阿拉钉牧场',\n    'society': '社会牧场'\n};\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const reviewList = [\n        {\n            title: '乳头评分',\n            img: require(\"./image/default.jpg\"),\n            value: 0\n        },\n        {\n            title: '行走评分',\n            img: require(\"./image/default.jpg\"),\n            value: 1\n        },\n        {\n            title: '体况评分',\n            img: require(\"./image/default.jpg\"),\n            value: 2\n        },\n        {\n            title: '粪便评分',\n            img: require(\"./image/default.jpg\"),\n            value: 3\n        }\n    ];\n    const RanchType = props.match.params.type;\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n        if (newValue) {\n            props.history.push(`/viewCowshed/${RanchType}`)\n        }\n    }\n\n    return (\n        <div >\n            <AppBar title={`${RouteParamsType[RanchType]}-现场管理清单`} />\n            <Paper className={classes.root} square={true}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"现场评分\" />\n                    <Tab label=\"牛舍巡棚\" />\n                </Tabs>\n            </Paper>\n            <Grid container justify=\"space-around\" className={classes.reviewListContainer}>\n                {\n                    reviewList.map(item => (\n                        <Grid item xs={5} key={item.title} className=\"mt-15-it\">\n                            <Card onClick={() => props.history.push(`/reviewDetail/${RanchType}/${item.value}`) }>\n                                <CardActionArea>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={item.img}\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                </CardActionArea>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        {item.title}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Required() {\n    return (\n        <span style={{color: 'red'}}>\n            *\n        </span>\n    )\n}","// 牛类型\nexport const CowType: ReviewDetail.LabelValueType[] = [\n    {\n      value: '0',\n      label: '干奶牛',\n    },\n    {\n      value: '1',\n      label: '新产牛',\n    },\n    {\n      value: '2',\n      label: '早期牛',\n    },\n    {\n      value: '3',\n      label: '中期牛',\n    },\n    {\n      value: '4',\n      label: '后期牛',\n    },\n];\n// 乳头信息\nexport const Teats: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    },\n    {\n        label: '瞎奶头',\n        value: '0'\n    }\n];\n// 体况评分\nexport const BCS: ReviewDetail.LabelValueType[] = [];\nfor(let i = 1; i <= 5; i = i + 0.25) {\n    BCS.push({\n        label: String(i), value: String(i)\n    });\n}\n// 结果\nexport const Results: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    }\n];\nexport const RanchType: ReviewDetail.IndexStringMap = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\nexport const ReviewType: ReviewDetail.IndexStringMap = {\n    0: '乳头评分',\n    1: '行走评分',\n    2: '体况评分',\n    3: '粪便评分'\n};\nexport const CowBreastPosition: ReviewDetail.CowBreastPositionItem[] = [\n    {\n        label: '左前',\n        key: 'lf'\n    },\n    {\n        label: '左后',\n        key: 'lb'\n    },\n    {\n        label: '右前',\n        key: 'rf'\n    },\n    {\n        label: '右后',\n        key: 'rb'\n    }\n];\ninterface IndexFuncMap<T> {\n    [index: string]: (state: any) => T;\n}\n// 验证数据的必填\nexport const validateReviewType: IndexFuncMap<boolean> = {\n    // 乳头评分\n    0: (state: any) => {\n        // const { assesser, content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cow.value &&\n        //         contentItem.lf &&\n        //         contentItem.lb &&\n        //         contentItem.rf &&\n        //         contentItem.rb\n        //     )) ||\n        //     false\n        // )\n        const { cow, lf, lb, rf, rb, photo } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !lf ||\n            !lb ||\n            !rf ||\n            !rb ||\n            false\n        )\n    },\n    // 行走评分\n    1: (state: any) => {\n        const { photo, cow, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !cowType ||\n            !results ||\n            false\n        )\n    },\n    // 体况评分\n    2: (state: any) => {\n        const { results, cowType, cow, photo } = state;\n        return (\n            // !assesser.value ||\n            !results ||\n            !cowType ||\n            !cow.value ||\n            !photo.length ||\n            false\n        )\n    },\n    // 粪便评分\n    3: (state: any) => {\n        // const { content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cowshed.value &&\n        //         contentItem.cowType &&\n        //         contentItem.results\n        //     )) ||\n        //     false\n        // )\n        const { cowshed, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cowshed.value ||\n            !cowType ||\n            !results ||\n            false\n        );\n    }\n};\n// 格式化数据\nexport const formatReviewType: IndexFuncMap<object> = {\n    // 乳头评分\n    0: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            lf: state.lf,\n            rf: state.rf,\n            rb: state.rb,\n            lb: state.lb,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    },\n    // 行走评分\n    1: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            cow_type: state.cowType,\n            locomotion_score: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n        }\n    },\n    // 体况评分\n    2: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            bcs: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n            cow_type: state.cowType\n        }\n    },\n    // 粪便评分\n    3: (state: any) => {\n        return {\n            cow_type: state.cowType,\n            fs:  state.results,\n            pen: state.cowshed.value,\n            note: state.note,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    }\n};","import React from 'react';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    TextField\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    Delete as DeleteIcon\n} from '@material-ui/icons'\nimport {useDropzone} from 'react-dropzone';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport R from 'ramda';\nimport Required from '@/components/required';\n\nconst useStyles = makeStyles({\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    img: {\n        display: 'block',\n        width: '100%',\n        height: '90px'\n    },\n    deleteIcon: {\n        color: 'red'\n    }\n});\ninterface IProps {\n    labelText: string;\n    index?: number;\n    photo: any[];\n    note:string;\n    textAreaRequired: boolean;\n    saveContent?: (params: object) => void;\n    saveReviewDetail?: (params: object) => void;\n}\nconst TextAreaAndUploadImg: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const {getRootProps, getInputProps} = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n            const photoFormat: any = props.photo.concat(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n            // props.saveContent({\n            //     photo: photoFormat,\n            //     index: props.index\n            // });\n            props.saveReviewDetail({\n                photo: photoFormat\n            });\n        }\n    });\n    const deleteImg = (i: number) => {\n        const photoClone = R.remove(i, 1, props.photo);\n        props.photo.forEach((file: any) => URL.revokeObjectURL(file.preview));\n        // props.saveContent({\n        //     photo: photoClone,\n        //     index: props.index\n        // });\n        props.saveReviewDetail({\n            photo: photoClone\n        });\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs>\n                <Grid container alignItems=\"center\">\n                    <If condition={props.textAreaRequired}>\n                        <Grid item xs={1}>\n                            <Required />\n                        </Grid>\n                    </If>\n                    <Grid item xs>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label={props.labelText}\n                            multiline\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={props.note}\n                            // onChange={e => props.saveContent({\n                            //     note: e.target.value,\n                            //     index: props.index\n                            // })}\n                            onChange={e => props.saveReviewDetail({\n                                note: e.target.value\n                            })}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={2} className={classes.flexbox}>\n                     <Box {...getRootProps({className: 'dropzone'})}>\n                        <input {...getInputProps()} />\n                        <IconButton>\n                            <Required />\n                            <AddAPhotoIcon color=\"primary\" />\n                        </IconButton>\n                    </Box>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"center\">\n                {\n                    props.photo.map((item: any, i: any) => (\n                        <Grid item xs={4} key={`img-file-${i}`}>\n                            <Box position=\"relative\">\n                                <img\n                                    className={classes.img}\n                                    src={item.preview}\n                                    alt={`img-file-${i}`}\n                                />\n                                <Box position=\"absolute\" top=\"-20px\" right=\"-20px\">\n                                    <IconButton\n                                        className={classes.deleteIcon}\n                                        onClick={() => deleteImg(i)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </Grid>\n    )\n}\nexport default TextAreaAndUploadImg;","\nimport { makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    InputAdornment: {\n        '& p': {\n            width: 65\n        }\n    },\n    inputAdornment: {\n        '& p': {\n            width: 45\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111'\n    },\n    defaultImg: {\n        backgroundColor: '#000',\n        overflow: 'auto',\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 1000,\n        '& img': {\n            width: '100%',\n            height: 'auto'\n        }\n    }\n});\nexport default useStyles;","import {\n    SAVE_ASSESSER,\n    SAVE_COW,\n    SAVE_COWSHED,\n    SAVE_REVIEW_DETAIL,\n    SAVE_CONTENT,\n    ADD_CONTENT,\n    CLEAR_STATE\n} from './actionTypes';\n\ninterface Info {\n    value: string;\n    label: string;\n}\n\nexport const saveEstimator = (info: Info) => ({\n    type: SAVE_ASSESSER,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCow = (info: Info) => ({\n    type: SAVE_COW,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCowshed = (info: Info) => ({\n    type: SAVE_COWSHED,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveReviewDetail = (info: Info) => ({\n    type: SAVE_REVIEW_DETAIL,\n    payload: info\n});\n\nexport const saveContent = (info: Info) => ({\n    type: SAVE_CONTENT,\n    payload: info\n});\n\nexport const addContent = (info: Info) => ({\n    type: ADD_CONTENT,\n    payload: info\n});\n\nexport const clearState = (info: Info) => ({\n    type: CLEAR_STATE,\n    payload: info\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport {\n    Grid,\n    Box,\n    Container,\n    FormControl,\n    Input,\n    InputAdornment,\n    TextField,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n    Checkbox\n} from '@material-ui/core';\nimport {\n    // AddCircleOutline as AddCircleOutlineIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon,\n    EventNote as EventNoteIcon\n} from '@material-ui/icons';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport { uploadImgs$, postAssessTeats$, postAssessFaecess$, postAssessBcss$, postAssessLocomotions$ } from '@/api';\nimport useStyles from './styles';\nimport {\n    CowType,\n    Teats,\n    BCS,\n    Results,\n    RanchType,\n    ReviewType,\n    CowBreastPosition,\n    validateReviewType,\n    formatReviewType\n} from './config';\n\nimport { saveReviewDetail, saveContent, addContent, clearState } from './redux/actions';\nimport { showMessage } from '@/redux/actions';\nimport Viewer from 'viewerjs';\nimport 'viewerjs/dist/viewer.css';\n// import { from } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\ninterface ReviewType {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ReviewDetail: React.FC = (props: any) => {\n\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [defaultImgShow, setDefaultImgShow] = React.useState(false);\n    \n    const { ranchType, reviewType }: { ranchType: string, reviewType: keyof ReviewType  } = props.match.params;\n    const isCowNo = +reviewType !== 3; // 是否是牛号\n    const isTK = +reviewType === 2; // 是否是体况评分\n    const LabelText: string = `${ReviewType[reviewType]}-业务备注`;\n    const ResultsList = isTK ? BCS : Results;\n    \n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n    function handleUploadImgs() {\n        // const photoArr = props.content.map((contentItem: any) => contentItem.photo);\n        // const rxOb: FormData[] = photoArr.map((item: any) => {\n        //     const formdata: FormData = new FormData();\n        //     item.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        //     return formdata;\n        // });\n        // const uploadImgObser =  from(rxOb).pipe(\n        //     concatMap(formdata => {\n        //         return formdata.has('imgs') ? uploadImgs$(formdata) : Promise.resolve({ response: { upload_imgs: []} });\n        //     }),\n        //     map(({ response }) => response)\n        // );\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const OperaFuncMap: ReviewDetail.FetchFunc = {\n            0: postAssessTeats$,\n            1: postAssessLocomotions$,\n            2: postAssessBcss$,\n            3: postAssessFaecess$\n        };\n        const hasError = validateReviewType[reviewType](props);\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        setPostLoading(true);\n        const retData: any = formatReviewType[reviewType](props);\n        const uploadImgOb$ = handleUploadImgs();\n        const postAssessTeatsInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                const OperaFunc = OperaFuncMap[reviewType];\n                return OperaFunc(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                postAssessTeatsInst.unsubscribe();\n            }\n        );\n    };\n\n    useEffect(() => {\n        let viewer: any = null;\n        if(defaultImgShow) {\n            const image = new Image();\n            image.src = require('@/views/review-detail/default.png');\n            viewer = new Viewer(image, {\n                toolbar: false,\n                navbar: false,\n                hidden: function () {\n                    viewer.destroy();\n                    setDefaultImgShow(defaultImgShow => !defaultImgShow)\n                },\n            });\n            viewer.show();\n        }\n        return () => viewer && viewer.destroy()\n    }, [defaultImgShow]);\n\n    return (\n        <React.Fragment>\n            <AppBar\n                title={`${RanchType[ranchType]}-${ReviewType[reviewType]}`}\n                beforeRouteLeave={beforeRouteLeave}\n                endAdorment={\n                    <If condition={+reviewType === 0}>\n                        <IconButton\n                            onClick={() => setDefaultImgShow(!defaultImgShow)}\n                        >\n                            <EventNoteIcon color=\"secondary\" />\n                        </IconButton>\n                    </If>\n                }\n            />\n            <Container className={classes.root}>\n                <FormControl fullWidth>\n                    <Input\n                        value={props.assesser.label}\n                        placeholder=\"点击选择评估人姓名\"\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        startAdornment={<InputAdornment className={classes.InputAdornment} position=\"start\">评估人:</InputAdornment>}\n                    />\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"评估日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate}\n                            onChange={date => props.saveReviewDetail({assessDate: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            // disabled\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <TextAreaAndUploadImg\n                    labelText={LabelText}\n                    photo={props.photo}\n                    note={props.note}\n                    saveReviewDetail={props.saveReviewDetail}\n                    textAreaRequired={false}\n                />\n                <Box>\n                    <Box>\n                        <FormControl margin=\"dense\" fullWidth>\n                            <Input\n                                value={isCowNo ? props.cow.label : props.cowshed.label}\n                                onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}`)}\n                                placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                startAdornment={\n                                    (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                        <Required />牛{ isCowNo ? '号' : '舍'}:\n                                    </InputAdornment>)\n                                }\n                                endAdornment={\n                                    (<If condition={+reviewType === 3}>\n                                        <InputAdornment position=\"end\">#</InputAdornment>\n                                    </If>)\n                                }\n                            />\n                        </FormControl>\n                        <Choose>\n                            <When condition={+reviewType !== 0}>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />类型:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            cowType: e.target.value\n                                        })}\n                                        value={props.cowType}\n                                    >\n                                        {CowType.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />结果:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            results: e.target.value\n                                        })}\n                                        value={props.results}\n                                    >\n                                        {ResultsList.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                            </When>\n                            {/* 乳头评分 */}\n                            <Otherwise>\n                                <Grid container spacing={1}>\n                                    {\n                                        CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                            <Grid item xs={6} key={position.key}>\n                                                <FormControl margin=\"dense\" fullWidth>\n                                                    <TextField\n                                                        select\n                                                        InputProps={{\n                                                            startAdornment: (\n                                                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                                                    <p>\n                                                                        <Required />{position.label + ':'}\n                                                                    </p>\n                                                                </InputAdornment>\n                                                            ),\n                                                        }}\n                                                        onChange={e => props.saveReviewDetail({\n                                                            [position.key]: e.target.value\n                                                        })}\n                                                        value={props[position.key]}\n                                                    >\n                                                        {Teats.map(option => (\n                                                            <MenuItem key={option.value} value={option.value}>\n                                                                {option.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                </FormControl>\n                                            </Grid>\n                                        ))\n                                    }\n                                </Grid>\n                            </Otherwise>\n                        </Choose>\n                    </Box>\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <React.Fragment key={`content-item-${index}`}>\n                            <TextAreaAndUploadImg\n                                labelText={LabelText}\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                            <Box>\n                                <Box>\n                                    <FormControl margin=\"dense\" fullWidth>\n                                        <Input\n                                            value={isCowNo ? contentItem.cow.label : contentItem.cowshed.label}\n                                            onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}?index=${index}`)}\n                                            placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                            startAdornment={\n                                                (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    牛{ isCowNo ? '号' : '舍'}:\n                                                </InputAdornment>)\n                                            }\n                                            endAdornment={\n                                                (<If condition={+reviewType === 3}>\n                                                    <InputAdornment position=\"end\">#</InputAdornment>\n                                                </If>)\n                                            }\n                                        />\n                                    </FormControl>\n                                    <Choose>\n                                        <When condition={+reviewType !== 0}>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">类型:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        cowType: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem.cowType}\n                                                >\n                                                    {CowType.map(option => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">结果:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        [isTK ? 'locomotionScore' : 'results']: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem[isTK ? 'locomotionScore' : 'results']}\n                                                >\n                                                    {ResultsList.map((option: any) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                        </When>\n                                        <Otherwise>\n                                            <Grid container spacing={1}>\n                                                {\n                                                    CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                                        <Grid item xs={6} key={position.key}>\n                                                            <FormControl margin=\"dense\" fullWidth>\n                                                                <TextField\n                                                                    select\n                                                                    InputProps={{\n                                                                        startAdornment: <InputAdornment className={classes.inputAdornment} position=\"start\">{position.label + ':'}</InputAdornment>,\n                                                                    }}\n                                                                    onChange={e => props.saveContent({\n                                                                        [position.key]: e.target.value,\n                                                                        index\n                                                                    })}\n                                                                    value={contentItem[position.key]}\n                                                                >\n                                                                    {Teats.map(option => (\n                                                                        <MenuItem key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </MenuItem>\n                                                                    ))}\n                                                                </TextField>\n                                                            </FormControl>\n                                                        </Grid>\n                                                    ))\n                                                }\n                                            </Grid>\n                                        </Otherwise>\n                                    </Choose>\n                                </Box>\n                            </Box>\n                        </React.Fragment>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    {/* <Box>已经生成n条事件/您没有事件录入权限</Box> */}\n                    <FormControlLabel\n                        className={classes.btnContainer}\n                        control={\n                            <Checkbox\n                                // className={classes.btnContainer}\n                                checked={props.add_event}\n                                onChange={e => props.saveReviewDetail({\n                                    add_event: e.target.checked\n                                })}\n                                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                                value=\"add_event\"\n                                color=\"primary\"\n                            />\n                        }\n                        classes={{label: classes.btnContainer}}\n                        label=\"是否生成阿拉钉事件\"\n                    />\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        loading={postLoading}\n                        className={classes.btnMargin}\n                    />\n                </Box>\n            </Container>\n        </React.Fragment>\n    )\n}\nexport default connect(mapStateToProps, { saveReviewDetail, saveContent, addContent, clearState, showMessage })(ReviewDetail);","import {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    inputAdornment: {\n        '& p': {\n            width: 75\n        }\n    },\n    inputAdornment2: {\n        '& p': {\n            width: 92\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111',\n        marginTop: 20\n    }\n});\nexport default useStyles;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Container,\n    FormControl,\n    TextField,\n    InputAdornment,\n    MenuItem,\n    Input,\n    Box\n} from '@material-ui/core';\n// import {\n//     AddCircleOutline as AddCircleOutlineIcon\n// } from '@material-ui/icons';\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n} from '@material-ui/pickers';\nimport { map, concatMap } from 'rxjs/operators';\nimport LuxonUtils from \"@date-io/luxon\";\nimport AppBar from '@/components/app-bar';\nimport useStyles from './styles';\nimport { fetchTodoTaskTypes$, uploadImgs$, postMTodoTasks$ } from '@/api';\nimport { \n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\nimport { showMessage } from '@/redux/actions';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\nconst RanchType: any = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ViewCowshed: React.FC = (props: any) => {\n    const { ranchType } = props.match.params;\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [TypeList, setTypeList] = useState([]);\n    const [SubTypeList, setSubTypeList] = useState([]);\n    const TitleText: string = `${RanchType[ranchType]}-牛舍巡棚`;\n\n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n\n    function handleUploadImgs() {\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const hasError = !props.type || !props.sub_type || !props.note || !props.photo.length || !props.cowshed.value;\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        const retData = {\n            type: props.type,\n            sub_type: props.sub_type,\n            location: props.cowshed.value,\n            content: props.note,\n            photo: props.photo.toString(),\n            tasker: props.assesser.value,\n            start_time: props.assessDate2,\n            note: props.note\n        };\n        setPostLoading(true);\n        const uploadImgOb$ = handleUploadImgs();\n        const apiInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                return postMTodoTasks$(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                apiInst.unsubscribe();\n            }\n        );\n    };\n    React.useEffect(() => {\n        const activeTypeItem: any = TypeList.find((item: any) => +item.id === props.type);\n        const SubTypeList = activeTypeItem && activeTypeItem.sub_tasktypes;\n        setSubTypeList(SubTypeList || []);\n    }, [TypeList, props.type]);\n\n    React.useEffect(() => {\n        const ApiInst = fetchTodoTaskTypes$({page: 1, page_size:100}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setTypeList(data);\n            },\n            err => {\n                console.log('err', err)\n            },\n        );\n        return () => ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <div>\n            <AppBar title={TitleText} beforeRouteLeave={beforeRouteLeave} />\n            <Container className={classes.root}>\n                <FormControl margin=\"dense\" fullWidth>\n                    <Input\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        value={props.assesser.label}\n                        placeholder=\"点击选择责任人\"\n                        startAdornment={\n                            <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                责任人:\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            type: e.target.value\n                        })}\n                        value={props.type}\n                    >\n                        {TypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment2} position=\"start\">\n                                    <p>\n                                        <Required />子任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            sub_type: e.target.value\n                        })}\n                        value={props.sub_type}\n                    >\n                        {SubTypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"巡棚日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate2}\n                            onChange={date => props.saveReviewDetail({assessDate2: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            shouldDisableDate={ day => {\n                                if (day === null) {\n                                    return true;\n                                }\n                                return day.toMillis() < props.assessDate.toMillis();\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <Box>\n                    <FormControl margin=\"dense\" fullWidth>\n                        <Input\n                            value={props.cowshed.label}\n                            onFocus={() => props.history.push(`/commonSelectList/cowshed`)}\n                            placeholder=\"点击选择牛舍号\"\n                            startAdornment={\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />巡视点:\n                                    </p>\n                                </InputAdornment>\n                            }\n                            endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                        />\n                    </FormControl>\n                    <TextAreaAndUploadImg\n                        labelText='巡视点，问题描述'\n                        photo={props.photo}\n                        note={props.note}\n                        saveReviewDetail={props.saveReviewDetail}\n                        textAreaRequired={true}\n                    />\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <Box key={`content-item-${index}`}>\n                            <FormControl margin=\"dense\" fullWidth>\n                                <Input\n                                    value={contentItem.cowshed.label}\n                                    onFocus={() => props.history.push(`/commonSelectList/cowshed?index=${index}`)}\n                                    placeholder=\"点击选择牛舍号\"\n                                    startAdornment={<InputAdornment className={classes.inputAdornment} position=\"start\">巡视点:</InputAdornment>}\n                                    endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                                />\n                            </FormControl>\n                            <TextAreaAndUploadImg\n                                labelText='巡视点，问题描述'\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                        </Box>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        className={classes.btnMargin}\n                        loading={postLoading}\n                    />\n                </Box>\n            </Container>\n        </div>\n    )\n};\nconst actions = {\n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail,\n    showMessage\n};\nexport default connect(mapStateToProps,actions)(ViewCowshed);","\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 48\n    },\n    tableHeader: {\n        color: theme.palette.primary.main,\n    },\n    circularProgress: {\n        marginRight: 10\n    },\n    // tableItemWidth: {\n    //     width: '22vw'\n    // },\n    // tablePadding: {\n    //     padding: '14px 0px'\n    // }\n}));\nexport default useStyles;","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Box,\n    Paper,\n    CircularProgress\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { map } from 'rxjs/operators';\nimport AppBar from '@/components/app-bar';\nimport { getOnsiteAssessments$ } from '@/api';\nimport useStyles from './styles';\n\nconst SceneReport: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const tableHeaderCls = clsx(classes.tableHeader);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                page: params.page + 1\n            });\n        }\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const ApiInst = getOnsiteAssessments$(params).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(List.concat(list));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-清单\" />\n            <Paper square>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={tableHeaderCls} align=\"center\">人员</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">日期</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">类型</TableCell>\n                            {/* <TableCell className={tableHeaderCls} align=\"center\">详情</TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {List.map((listItem: any) => (\n                            <TableRow\n                                key={listItem.id}\n                                onClick={() => props.history.push(`/sceneReportDetail?pdf=${encodeURIComponent(listItem.pdf)}`)}\n                            >\n                                <TableCell align=\"center\">{listItem.assessr_name}</TableCell>\n                                <TableCell align=\"center\">{listItem.assess_date}</TableCell>\n                                <TableCell align=\"center\">{listItem.assesstype_name}</TableCell>\n                                {/* <TableCell align=\"center\">\n                                    <a href={listItem.pdf} download className={classes.tableHeader}>\n                                        下载\n                                    </a>\n                                </TableCell> */}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n};\nexport default SceneReport;","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 50,\n        paddingBottom: 70,\n        boxSizing: 'border-box',\n        minHeight: '100vh'\n    },\n    paper: {\n        margin: \"0 4vw\",\n        borderRadius: 5,\n        marginTop: 15,\n        padding: '10px 0',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    infoItem: {\n        fontSize: 14,\n        lineHeight: 1.5,\n        color: '#111'\n    },\n    spanLeft: {\n        width: 70\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { Box, Paper, Grid, ButtonBase, Container, Link, CircularProgress } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport AppBar from '@/components/app-bar';\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport useStyles from './styles';\n\nconst SearchCow: React.FC = props => {\n    const classes = useStyles();\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10,\n        search: '',\n        fromMore: false\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [searchLoading, setSearchLoading] = React.useState(false);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                fromMore: true,\n                page: params.page + 1\n            });\n        }\n    };\n    const handleSearch = (search: string) => {\n        setSearchLoading(true);\n        setParams({\n            ...params,\n            fromMore: false,\n            page: 1,\n            search\n        });\n    }\n    React.useEffect(() => {\n        setLoading(true);\n        const paramsClone = JSON.parse(JSON.stringify(params));\n        delete paramsClone.fromMore;\n        const ApiInst = fetchCalfsList$(paramsClone).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(params.fromMore ? List.concat(list) : list);\n                setNext(data[1]);\n                setLoading(false);\n                setSearchLoading(false);\n            },\n            error => {\n                setLoading(false);\n                setSearchLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={clsx(classes.root, 'bg-gray')}>\n            <AppBar\n                title=\"查找牛只\"\n                useSearch\n                searchLoading={searchLoading}\n                searchPlaceholder=\"请输入牛号\"\n                getSearchValue={handleSearch}\n            />\n            {\n                List.map((item: any, i) => (\n                    <Link component={RouteLink} to={`/cowDetail/${item.id}?eartag=${item.eartag}`}  key={`cow-item-${i}`}>\n                        <Paper className={classes.paper} square>\n                            <Grid container>\n                                <Grid item xs={3} container justify=\"center\" alignItems=\"center\">\n                                    <Container>\n                                        <ButtonBase>\n                                            <img className={classes.img} alt=\"complex\" src={require('../../assets/images/default.jpg')} />\n                                        </ButtonBase>\n                                    </Container>\n                                </Grid>\n                                <Grid item xs>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>牛号:</span>\n                                        <span>{item.eartag}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>所属牛舎:</span>\n                                        <span>{item.pen_name}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>类型:</span>\n                                        <span>{item.cbrd || '暂无'}</span>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Link>\n                ))\n            }\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n}\nexport default SearchCow;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        marginTop: 58\n    },\n    heading: {\n        fontSize: 14,\n        flexBasis: '45%',\n        flexShrink: 0,\n    },\n    infoItem: {\n        padding: '5px 0'\n    },\n    lastExpan: {\n        margin: '16px -16px!important',\n    },\n    lastDetail: {\n        overflowX: 'scroll',\n        paddingLeft: 0\n    },\n    tableCell: {\n        paddingRight: 10\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Container,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Typography,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport useStyles from './styles';\nimport { fetchCalfsDetail$ as fetchData$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport url from \"url\";\n\nconst createData = (label: string, value: string | number) => ({ label, value });\nconst CowInfo = [\n    createData('牛号', 3080),\n    createData('牛区', 11),\n    createData('离场日期', ''),\n    createData('生日', '2013-06-07'),\n    createData('胎次', 5),\n    createData('胎次组', 3),\n    createData('母牛号', 30),\n    createData('父牛号', 380)\n];\nfunction createEventData(eventname: string, date: string, days: number, count: number, freeze: string, mark: string) {\n    return { eventname, date, days, count, freeze, mark };\n  }\n  \nconst eventData = [\n    createEventData('转群1转群1转群1转群1', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群2', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群3', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群4', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群5', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群6', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群7', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群8', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群9', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群10', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n];\nconst CowDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [Data, setData] = React.useState([]);\n\n    const [expanded, setExpanded] = React.useState<string | false>('panel1');\n    const { query } = url.parse(props.location.search, true);\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    React.useEffect(() => {\n        const id = props.match.params.id;\n        const ApiInst = fetchData$({id}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setData(data);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title={`牛只详情-${query.eartag}`} />\n            <Container>\n                <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息一</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息二</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息三</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}  className={expanded === 'panel4' ? classes.lastExpan : ''}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>事件信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={expanded === 'panel4' ? classes.lastDetail : ''}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>事件</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>日期</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>天数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>本胎发生的次数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>冻精</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>备注</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {eventData.map(row => (\n                                <TableRow key={row.eventname}>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.eventname}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.date}</TableCell>\n                                    <TableCell className={classes.tableCell}>{row.days}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '50px'}}>\n                                            {row.count}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.freeze}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.mark}\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Container>\n        </Box>\n    )\n}\nexport default CowDetail;","import {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 48\n    }\n});\nexport default useStyles;","import React, { useState, useEffect, useRef } from 'react';\nimport { usePdf } from 'react-pdf-js';\nimport { Box, Container } from '@material-ui/core';\nimport url from 'url';\nimport AppBar from '@/components/app-bar';\nimport useStyles from './styles';\n\nconst SceneReportDetail: React.FC<any> = props => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    // const [pages, setPages] = useState(null);\n   \n    // const renderPagination = (page: number, pages: any) => {\n    //   if (!pages) {\n    //     return null;\n    //   }\n    //   let previousButton = <li className=\"previous\" onClick={() => setPage(page - 1)}><a href=\"#\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    //   if (page === 1) {\n    //     previousButton = <li className=\"previous disabled\"><a href=\"#\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    //   }\n    //   let nextButton = <li className=\"next\" onClick={() => setPage(page + 1)}><a href=\"#\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    //   if (page === pages) {\n    //     nextButton = <li className=\"next disabled\"><a href=\"#\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    //   }\n    //   return (\n    //     <nav>\n    //       <ul className=\"pager\">\n    //         {previousButton}\n    //         {nextButton}\n    //       </ul>\n    //     </nav>\n    //   );\n    // };\n    const canvasEl = useRef(null);\n    const { query } = url.parse(props.location.search, true);\n    // const pdfUrl = decodeURIComponent(String(query.pdf || ''));\n\n    const [loading, numPages] = usePdf({\n        file: require('@/views/scene-report-detail/a.pdf'),\n        // onDocumentComplete,\n        page,\n        canvasEl\n    });\n\n    // useEffect(() => {\n    //     setPages(numPages);\n    // },[numPages]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-明细\" />\n            <Container>\n                {loading && <span>Loading...</span>}\n                <canvas ref={canvasEl} style={{width: '100vw', height: 'auto'}} />\n                {/* {renderPagination(page, pages)} */}\n            </Container>\n        </Box>\n    )\n};\nexport default SceneReportDetail;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    contantContainer: {\n        marginTop: 50\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport { Observable, of } from 'rxjs';\nimport { AjaxResponse } from 'rxjs/ajax';\nimport { map, catchError, pluck } from 'rxjs/operators';\nimport {\n    Box,\n    ButtonGroup,\n    Button,\n    CircularProgress,\n    Container,\n    FormControl,\n    RadioGroup,\n    FormControlLabel,\n    Radio\n} from '@material-ui/core';\nimport {\n    fetchUsersList$,\n    fetchCowlitesList$,\n    fetchPensList$\n} from '@/api';\nimport useStyles from './styles';\nimport { \n    saveContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\n// import url from \"url\";\n\ninterface FetchFunc {\n    [index:string]: (params: object) => Observable<AjaxResponse>;\n}\ninterface IndexMap {\n    [index: string]: string;\n}\ninterface IProps extends RouteComponentProps<{type: string}> {\n    saveContent: (params: object) => void;\n    saveReviewDetail: (params: object) => void;\n    value: string;\n}\n\nconst Type: any = {\n    'user': '选择评估人',\n    'cow': '选择牛只',\n    'cowshed': '选择牛舍'\n};\nconst FetchFunc: FetchFunc = {\n    'user': fetchUsersList$,\n    'cow': fetchCowlitesList$,\n    'cowshed': fetchPensList$,\n};\nconst mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst CommonSelectList: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    const [itemValue, setItemValue] = useState(props.value);\n    const [next, setNext] = React.useState(null);\n    const [list, setList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    // const [searchValue, setSearchValue] = useState('');\n    const type: string = props.match.params.type;\n    const Label = Type[type];\n\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    const handleSelectItem = (e: any) => {\n        setItemValue(e.target.value);\n    };\n    const handleConfirm = () => {\n        if(!itemValue) return;\n        // const { query } = url.parse(props.location.search, true);\n        const item: any = list.find((item: any) => item.id === itemValue);\n        const StoreMap: IndexMap = {\n            'user': 'assesser',\n            'cow': 'cow',\n            'cowshed': 'cowshed'\n        };\n        const Params = {\n            [StoreMap[type]]: {\n                label: item.label,\n                value: itemValue\n            },\n            // index: query.index\n        };\n        // const operaFunc = type === 'user' ? props.saveReviewDetail : props.saveContent;\n        // operaFunc(Params);\n        props.saveReviewDetail(Params);\n        props.history.goBack();\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const Params: any = {\n            page,\n            page_size: 5\n        };\n        // if(searchValue) {\n        //     Params.search = searchValue;\n        // }\n        const ApiInst = FetchFunc[type](Params).pipe(\n            pluck('response'),\n            map(response => [response.results, response.next]),\n            map(([results, next]) => [results.map((item: any) => ({...item, id: String(item.id)})), next]),\n            map(([results, next]) =>{\n                const LabelMap: IndexMap = {\n                    'user': 'username',\n                    'cow': 'eartag',\n                    'cowshed': 'pen_name'\n                };\n                return [\n                    results.map((item: any) => ({...item, label: item[LabelMap[type]]})),\n                    next\n                ]\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setList(list => list.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            },\n            error => {\n                console.log('error', error);\n            }\n        );\n        return  () => ApiInst.unsubscribe();\n    }, [page, type]);\n    return (\n        <Box>\n            <AppBar\n                title={Label}\n                // useSearch\n                // searchPlaceholder=\"请输入要搜索的内容\"\n                // getSearchValue={setSearchValue}\n            />\n            <Container className={classes.contantContainer} >\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        aria-label=\"position\"\n                        name=\"position\"\n                        value={itemValue}\n                        onChange={handleSelectItem}\n                    >\n                        {\n                            list.map((item: any) => (\n                                <FormControlLabel\n                                    key={item.id}\n                                    value={item.id}\n                                    control={<Radio color=\"primary\" />}\n                                    label={item.label}\n                                    labelPlacement=\"end\"\n                                />\n                            ))\n                        }\n                    </RadioGroup>\n                </FormControl>\n            </Container>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n            <Box position=\"fixed\" left={15} right={15} bottom={15}>\n                <ButtonGroup\n                    fullWidth\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"选择一项\"\n                    onClick={() => handleConfirm()}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\nexport default connect(mapStateToProps, { saveContent, saveReviewDetail })(CommonSelectList);","import React, { useState } from 'react';\nimport {\n    Container,\n    IconButton,\n    Box,\n    Paper,\n    Grid,\n    FormControl,\n    InputLabel,\n    InputAdornment,\n    Input\n} from '@material-ui/core';\nimport {\n    Settings as SettingsIcon,\n    Done as DoneIcon,\n    PermIdentity,\n    Assignment,\n    NearMe,\n    Smartphone\n} from '@material-ui/icons';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 60\n    },\n    label: {\n        fontSize: 12,\n        color: '#111'\n    },\n    flexbox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    paper: {\n        marginTop: 20\n    },\n    infoContent: {\n        fontSize: 14,\n        padding: '10px 10px 10px 0'\n    },\n    input: {\n        padding: '10px 0'\n    },\n    formControl: {\n        marginTop: '20px!important'\n    }\n});\n\nconst editInfoArr: editInfoArrItem[] = [\n    {\n        label: '个性介绍',\n        icon: <PermIdentity color=\"primary\" />,\n        key: 'userDesc'\n    },\n    {\n        label: '公司名称',\n        icon: <Assignment color=\"primary\" />,\n        key: 'companyName'\n    },\n    {\n        label: '公司地址',\n        icon: <NearMe color=\"primary\" />,\n        key: 'companyAddress'\n    },\n    {\n        label: '联系方式',\n        icon: <Smartphone color=\"primary\" />,\n        key: 'mobileNumber'\n    }\n];\ninterface State {\n    userDesc: string;\n    companyName: string;\n    companyAddress: string;\n    mobileNumber: string;\n}\ninterface editInfoArrItem {\n    label: string;\n    icon: JSX.Element;\n    key: keyof State;\n}\nconst User: React.FC = props => {\n    const [editState, setEditState] = useState(false);\n    const classes = useStyles();\n    const [editInfo, setEditInfo] = useState<State>({\n        userDesc: '清风雨露一相逢便胜却人间无数',\n        companyName: '阿拉钉科技有限公司',\n        companyAddress: '北京市海淀区某某路',\n        mobileNumber: '18888888888'\n    });\n    const handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEditInfo({...editInfo, [name]: event.target.value})\n    }\n    return (\n        <Container className={classes.root}>\n            <AppBar\n                title=\"个人信息\"\n                endAdorment={\n                    (<IconButton onClick={() => setEditState(!editState)} className=\"text-white\">\n                        <Choose>\n                            <When condition={editState}>\n                                <DoneIcon />\n                            </When>\n                            <Otherwise>\n                                <SettingsIcon />\n                            </Otherwise>\n                        </Choose>\n                    </IconButton>)\n                }\n            />\n            <Box>\n                {\n                    editInfoArr.map((item: editInfoArrItem) => (\n                        <Choose>\n                            <When condition={!editState}>\n                                <Paper className={classes.paper} key={item.key}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={2} className={classes.flexbox}>\n                                            <IconButton>\n                                                {item.icon}\n                                            </IconButton>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Box className={classes.label}>\n                                                {item.label}\n                                            </Box>\n                                            <Box className={classes.infoContent}>\n                                                {editInfo[item.key]}\n                                            </Box>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </When>\n                            <Otherwise>\n                                <FormControl fullWidth margin=\"dense\" key={item.key} className={classes.formControl}>\n                                    <InputLabel\n                                        htmlFor={item.key}\n                                    >\n                                        {item.label}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"input-with-icon-adornment\"\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                {item.icon}\n                                            </InputAdornment>\n                                        }\n                                        multiline\n                                        className={classes.formControl}\n                                        value={editInfo[item.key]}\n                                        onChange={handleChange(item.key)}\n                                    />\n                                </FormControl>\n                            </Otherwise>\n                        </Choose>\n                    ))\n                }\n            </Box>\n        </Container>\n    )\n};\nexport default User;","import React, { useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst rootElement: any = document.getElementById('root');\n\nconst ScrollToTop: React.FC<RouteComponentProps> = (props: any) => {\n\n    useEffect(() => {\n      rootElement.scrollTo(0, 0);\n    }, [props.location.pathname]);\n  \n    return props.children;\n};\n  \nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { SyntheticEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n    CheckCircle as CheckCircleIcon,\n    Error as ErrorIcon,\n    Info as InfoIcon,\n    Close as CloseIcon,\n    Warning as WarningIcon\n} from '@material-ui/icons';\nimport { amber, green } from '@material-ui/core/colors';\nimport {\n    SnackbarContent,\n    Snackbar,\n    IconButton\n} from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { closeMessage } from '@/redux/actions';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n\nexport interface Props {\n    className?: string;\n    message?: string;\n    onClose?: () => void;\n    variant: keyof typeof variantIcon;\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n}\nconst useStyles2 = makeStyles((theme: Theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n}));\n\nfunction Message(props: any) {\n    const classes = useStyles2();\n    const { open, variant, message } = useSelector((state: any) => state.Message);\n    const dispatch = useDispatch();\n\n    function handleClose(event?: SyntheticEvent, reason?: string) {\n      if (reason === 'clickaway') {\n        return;\n      }\n      dispatch(closeMessage());\n    }\n  \n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={open}\n          autoHideDuration={variant === 'error' ? null : 3000}\n          onClose={handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={handleClose}\n            className={classes.margin}\n            variant={variant}\n            message={message}\n          />\n        </Snackbar>\n      </div>\n    );\n};\nexport default Message;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./assets/styles/index.scss\";\nimport Message from '@/components/message';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00c6a0',\n            contrastText: '#fff'\n        },\n        secondary: {\n            // main: '#11cb5f'\n            main: '#fff'\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n            <Message />\n        </ThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport withLayout from \"./components/layout\";\nimport Login from './views/login';\nimport Register from './views/register';\nimport SelectRanch from './views/select-ranch';\nimport Home from './views/home';\nimport Tasks from './views/tasks';\nimport TasksDetail from './views/tasks-detail';\nimport Reports from './views/reports';\nimport ManageList from './views/manage-listing';\nimport ReviewDetail from './views/review-detail';\nimport ViewCowshed from './views/view-cowshed';\nimport SceneReport from './views/scene-report';\nimport SearchCow from './views/search-cow';\nimport CowDetail from './views/cow-detail';\nimport SceneReportDetail from './views/scene-report-detail';\nimport CommonSelectList from '@/views/common-select-list';\nimport User from './views/user';\nimport ScrollToTop from './components/scroll-to-top';\n\nexport default () => {\n    return (\n        <HashRouter>\n            <ScrollToTop>\n                {/* 登录注册 */}\n                <Route path=\"/login\" component={Login} />   \n                <Route path=\"/register\" component={Register} />\n\n                {/* 选择牧场 */}\n                <Route path=\"/selectRanch\" component={SelectRanch} />  \n\n                {/* 首页以及首页的几个入口 */}\n                <Route path={[\"/\", \"/home\", \"/index\"]} exact component={withLayout(Home)} />\n                <Route path=\"/manageList/:type\" component={ManageList} />\n                <Route path=\"/sceneReport\" component={SceneReport} /> \n                <Route path=\"/SceneReportDetail\" component={SceneReportDetail} /> \n\n                {/* 底部导航栏入口 */}\n                <Route path=\"/tasks\" component={withLayout(Tasks)} />   \n                <Route path=\"/reports\" component={withLayout(Reports)} />\n                <Route path=\"/search\" component={withLayout(SearchCow)} />\n                <Route path=\"/cowDetail/:id\" component={withLayout(CowDetail)} />\n\n                <Route path=\"/reviewDetail/:ranchType/:reviewType\" component={ReviewDetail} />\n                <Route path=\"/viewCowshed/:ranchType\" component={ViewCowshed} />\n                <Route path=\"/tasksDetail\" component={TasksDetail} />\n                {/* 用户信息入口 */}\n                <Route path=\"/user\" component={User} /> \n                {/* 选择用户，选择牛只，选择牛舍 */}\n                <Route path=\"/commonSelectList/:type\" component={CommonSelectList} />\n            </ScrollToTop>\n        </HashRouter>\n    );\n};\n"],"sourceRoot":""}