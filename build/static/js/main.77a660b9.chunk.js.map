{"version":3,"sources":["views/manage-listing/image/default.jpg","assets/images/default.jpg","redux/actionTypes.ts","redux/reducers/index.ts","views/review-detail/redux/reducers/index.ts","redux/store.ts","views/review-detail/redux/actionTypes.ts","config/index.ts","components/layout/index.tsx","api/base.ts","views/login/index.tsx","api/index.ts","views/register/index.tsx","components/search/index.tsx","views/select-ranch/index.tsx","views/home/header/_styles.ts","views/home/header/index.tsx","views/home/entrance/_styles.ts","views/home/entrance/index.tsx","views/home/report/_chartbox.tsx","views/home/report/_styles.ts","views/home/report/_mock.ts","views/home/report/index.tsx","views/home/index.tsx","components/app-bar/index.tsx","components/divider/index.tsx","views/tasks/styles.ts","views/tasks/index.tsx","views/tasks-detail/index.tsx","views/review-detail/index.tsx","views/reports/_mock.ts","views/reports/index.tsx","views/manage-listing/index.tsx","components/textarea-upload-img/index.tsx","views/view-cowshed/index.tsx","views/scene-report/index.tsx","views/search-cow/index.tsx","views/cow-detail/index.tsx","views/scene-report-detail/index.tsx","views/common-select-list/styles.ts","views/common-select-list/index.tsx","views/user/index.tsx","components/scroll-to-top/index.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","SAVE_USER_INFO","userInfo","JSON","parse","localStorage","getItem","console","log","initState","isLogin","token","farm_code","assesser","label","value","assessDate","DateTime","local","note","photo","cow","lf","lb","rf","rb","cowType","results","locomotionScore","rootReducers","combineReducers","userInfoStore","state","arguments","length","undefined","action","type","setItem","stringify","Object","objectSpread","payload","reviewDetailStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ROUTE_HOME_PATH","baseUrl","useStyles","makeStyles","layout","height","bottomNav","position","width","bottom","zIndex","boxShadow","Component","props","classes","location","history","includes","pathname","react_default","a","createElement","className","BottomNavigation","onChange","e","push","showLabels","BottomNavigationAction","icon","esm_Home","Description","TrendingUp","esm_Search","base","url","params","options","formaturl","initUrl","concat","headers","_JSON$parse","farmcode","globalState","store","getState","useToken","dispatch","href","origin","EMPTY","AUTHORIZATION","useFarmCode","entries","map","item","join","ajax","get","_JSON$parse2","overrideUrl","overrideHeaders","post","loginTitle","fontSize","marginTop","loginSubTitle","color","formContainer","margin","codeBtn","minWidth","marginBottom","textField","register","connect","saveUserInfo","_useState","useState","mobileCode","userNameOrMobile","_useState2","slicedToArray","loginInfo","setLoginInfo","_useState3","_useState4","loginInfoValid","setLoginInfoValid","handleUserInfoChange","name","defineProperty","target","handleLogin","Boolean","subscription","open_id","pipe","mergeMap","_ref","_ref$response","response","Promise","resolve","subscribe","data","unsubscribe","error","Container","TextField","required","helperText","placeholder","fullWidth","InputProps","endAdornment","InputAdornment","Button","variant","size","ButtonGroup","aria-label","onClick","Grid","container","xs","Link","component","RouterLink","to","registerSuccess","textAlign","changeLoginStatus","loginStatus","setUserNameOrMobile","setMobileCode","_useState5","_useState6","hasRegister","setHasRegister","onUserNameOrMobileChange","startAdornment","AccountCircle_default","onMobileCodeChange","root","padding","display","alignItems","backgroundColor","input","marginLeft","flex","iconButton","Search","setValue","Paper","InputBase","inputProps","IconButton","searchMethod","Search_default","title","ranchList","paddingLeft","_React$useState","React","_React$useState2","otherRanchState","setOtherRanchState","checkALD","setCheckALD","aldRanch","setAldRanch","searchValue","setSearchValue","_useState7","_useState8","aldRanchList","setAldRanchList","useEffect","Params","page","page_size","search","subscrible","_useState9","_useState10","other","setOtherRanch","justify","Switch","checked","key","FormControl","RadioGroup","FormControlLabel","control","Radio","farm_name","labelPlacement","isALD","sessionStorage","theme","aldFarm","palette","primary","main","paddingTop","top","& h4","textWhite","header","RouteLink","PermIdentity","homeContainer","overflowY","background","homeContent","paddingBottom","borderTopLeftRadius","borderTopRightRadius","homeContentIcon","searchContainer","entrance","_chartbox","Box","border","borderRadius","borderColor","children","chartTitle","chartContainer","SevenDayOpt","text","textStyle","trigger","axisPointer","legend","grid","left","right","containLabel","xAxis","yAxis","series","stack","report","borderTop","NavigateNext","flexWrap","overflow","lib_default","option","style","query","String","react_router","contrastText","fontWeight","inputBox","withRouter","searchState","setSearchState","_React$useState3","_React$useState4","square","goBack","KeyboardBackspace","searchPlaceholder","getSearchValue","Done","useSearch","endAdorment","Divider","useTheme","Divider_Divider","selectContainer","contantContainer","img","maxWidth","maxHeight","detailBtn","paper","circularProgressba","circularProgress","marginRight","Tasks","tasksList","setTasksList","setPage","_React$useState5","_React$useState6","next","setNext","_React$useState7","_React$useState8","loading","setLoading","_React$useState9","_React$useState10","anchorElBJ","setAnchorElBJ","_React$useState11","_React$useState12","anchorElFZ","setAnchorElFZ","_React$useState13","_React$useState14","anchorElSY","setAnchorElSY","_React$useState15","_React$useState16","anchorElRW","setAnchorElRW","_React$useState17","BJ","FZ","SY","RW","_React$useState18","selectedIndex","setSelectedIndex","anchorEl","setAnchorEl","setAnchorElMap","handleClose","ApiInst","_ref2","_ref3","list","toNowDate","dayjs","run_date","diff","app_bar","index","aria-controls","aria-haspopup","currentTarget","ExpandMore","Menu","id","keepMounted","open","onClose","PaperProps","ITEM_HEIGHT","MenuItem","selected","event","handleMenuItemClick","i","paddingX","alt","src","require","direction","Typography","gutterBottom","todotask_name","content","split","Math","abs","divider","index_esm","styles","buildStyles","pathColor","textColor","justifyContent","CircularProgress","tablecell","table","tableHeader","createData","cowNumber","cowshed","date","statusLabel","rows","TasksDetail","mb","Rating","readOnly","Table","TableHead","TableRow","TableCell","align","clsx","TableBody","row","hover","views_reports","flexGrow","reviewListContainer","media","RouteParamsType","ald","society","manage_listing","tabValue","setTabValue","reviewList","RanchType","match","Tabs","newValue","indicatorColor","centered","Tab","Card","CardActionArea","CardMedia","image","CardActions","flexbox","deleteIcon","saveReviewDetail","info","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","photoFormat","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","labelText","multiline","AddAPhoto","spacing","photoClone","remove_default","deleteImg","Delete","& p","inputAdornment","btnMargin","btnContainer","lineHeight","CowType","Teats","LocomotionScore","Results","ReviewType","0","1","2","3","CowBreastPosition","imgFiles","cowBreastPosition","setCowBreastPosition","result","cowTypeAndResult","setCowTypeAndResult","_props$match$params","ranchType","reviewType","LabelText","ResultsList","handleCowTypeAndResult","Fragment","Input","onFocus","material_ui_pickers_esm","utils","LuxonUtils","locale","format","okLabel","cancelLabel","textarea_upload_img","select","AddCircleOutline","Checkbox","CheckBoxOutlineBlank","checkedIcon","CheckBox","formdata","FormData","append","TypeList","ViewCowshed","TitleText","cowshedNumber","people","mark","taskForm","setTaskForm","setDate","handleChange","SceneReportList","SceneReport","SceneReportListItem","boxSizing","infoItem","spanLeft","CowList","SearchCow","ButtonBase","heading","flexBasis","flexShrink","lastExpan","lastDetail","overflowX","tableCell","paddingRight","CowInfo","createEventData","eventname","days","count","freeze","eventData","CowDetail","expanded","setExpanded","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","SceneReportDetail","Type","FetchFunc","ownProps","itemValue","setItemValue","setList","Label","fetchFunc","username","find","handleConfirm","infoContent","formControl","editInfoArr","Assignment","NearMe","Smartphone","User","editState","setEditState","userDesc","companyName","companyAddress","mobileNumber","editInfo","setEditInfo","Settings","InputLabel","htmlFor","rootElement","document","getElementById","scrollTo","hostname","createMuiTheme","secondary","ReactDOM","render","es","ThemeProvider","react_router_dom","scroll_to_top","path","Login","Register","SelectRanch","exact","withLayout","Home","ManageList","Reports","ReviewDetail","CommonSelectList","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77a660b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","export const SAVE_USER_INFO: string = 'SAVE_USER_INFO';\n","\nimport { SAVE_USER_INFO } from '../actionTypes';\n\nconst userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n\nconsole.log('userInfo', userInfo)\n\nconst initState = {\n    isLogin: false,\n    token: '',\n    farm_code: ''\n};\nif (userInfo.isLogin) {\n    initState.isLogin = userInfo.isLogin;\n    initState.token = userInfo.token;\n    initState.farm_code = userInfo.farm_code;\n    console.log('initState', initState);\n}\nexport default function changeLoginStatus(state = initState, action: any) {\n    switch (action.type) {\n        case SAVE_USER_INFO: {\n            const userInfo = JSON.parse((localStorage.getItem('userInfo') || '{}'));\n            localStorage.setItem('userInfo', JSON.stringify({...userInfo, ...action.payload.userInfo}));\n            return {\n                ...state,\n                ...action.payload.userInfo\n            }\n        }\n        default:\n            return initState\n    }\n}","\nimport { DateTime } from 'luxon';\nimport {\n    SAVE_ASSESSER,\n    SAVE_DATE,\n    SAVE_NOTE,\n    SAVE_IMGS,\n    SAVE_COW_TYPE,\n    SAVE_COW,\n    SAVE_COWSHED,\n    SAVE_TEATS,\n    SAVE_RESULTS,\n    SAVE_LOCOMOTION_SCORE,\n    SAVE_REVIEW_DETAIL\n} from '../actionTypes';\n\nconst initState = {\n    assesser: {\n        label: '',\n        value: ''\n    },\n    assessDate: DateTime.local(),\n    note: '',\n    photo: [],\n    cow: {\n        label: '',\n        value: ''\n    },\n    lf: '',\n    lb: '',\n    rf: '',\n    rb: '',\n    cowType: '',\n    results: '',\n    locomotionScore: ''\n};\n\nexport default function (state = initState, action: any) {\n    switch (action.type) {\n        case SAVE_REVIEW_DETAIL: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return initState\n    }\n};","import { combineReducers } from 'redux';\nimport { createStore } from 'redux';\nimport userInfoStore from './reducers/index';\nimport reviewDetailStore from '@/views/review-detail/redux/reducers';\nconst rootReducers = combineReducers({ userInfoStore, reviewDetailStore });\n\nexport default createStore(\n    rootReducers,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);","// 评估人信息\nexport const SAVE_ASSESSER = 'SAVE_ASSESSER';\n// 评估日期\nexport const SAVE_DATE = 'SAVE_DATE';\n// 业务备注\nexport const SAVE_NOTE = 'SAVE_NOTE';\n// 图片信息\nexport const SAVE_IMGS = 'SAVE_IMGS';\n// 牛只信息\nexport const SAVE_COW = 'SAVE_COW';\n// 牛舍信息\nexport const SAVE_COWSHED = 'SAVE_COWSHED';\n// 牛类型\nexport const SAVE_COW_TYPE = 'SAVE_COW_TYPE';\n// 乳头信息\nexport const SAVE_TEATS = 'SAVE_TEATS';\n// 结果信息\nexport const SAVE_RESULTS = 'SAVE_RESULTS';\n// 体况评分结果\nexport const SAVE_LOCOMOTION_SCORE = 'SAVE_LOCOMOTION_SCORE';\n// 评估详情信息\nexport const SAVE_REVIEW_DETAIL = 'SAVE_REVIEW_DETAIL';","\n\nexport const ROUTE_HOME_PATH = [\"/\", \"/home\", \"/index\"];\n\n// export enum ROUTE_PATH_MAP {\n//     HOME_PATH\n//     // kk = \"\",\n// }\nexport const baseHost = 'http://139.196.28.170:8811';\n\nexport const baseUrl = '/zh-hans/api/v1/';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BottomNavigation,\n    BottomNavigationAction\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Home as HomeIcon,\n    Description as DescriptionIcon,\n    TrendingUp as TrendingUpIcon\n} from '@material-ui/icons';\nimport { ROUTE_HOME_PATH } from \"../../config\";\n\nconst useStyles = makeStyles({\n    layout: {\n        height: '100vh'\n    },\n    bottomNav: {\n        position:'fixed',\n        width: '100%',\n        bottom: 0,\n        zIndex: 10,\n        boxShadow: \"0 -1px 5px 0 rgba(58, 59, 59, 0.5)\"\n    },\n});\n\ninterface IProps {\n    location: {\n        pathname: string;\n    },\n    history: {\n        push: (pathname: string) => void;\n    }\n}\n\nexport default (Component: any) => (props: IProps) => {\n    const classes = useStyles();\n    const { location, history } = props;\n    const value = ROUTE_HOME_PATH.includes(location.pathname) ? ROUTE_HOME_PATH[1] : location.pathname;\n\n    return (\n        <div className={classes.layout}>\n            <Component {...props} />\n\n            <BottomNavigation\n                value={value}\n                onChange={(e, pathname) => history.push(pathname)}\n                className={classes.bottomNav}\n                showLabels\n            >\n                <BottomNavigationAction label=\"主页\" value={ROUTE_HOME_PATH[1]} icon={<HomeIcon />} />\n                <BottomNavigationAction label=\"任务\" value=\"/tasks\" icon={<DescriptionIcon />} />\n                <BottomNavigationAction label=\"报表\" value=\"/reports\" icon={<TrendingUpIcon />} />\n                <BottomNavigationAction label=\"查牛\" value=\"/search\" icon={<SearchIcon />} />\n            </BottomNavigation>\n        </div>\n    )\n};\n","import { ajax } from 'rxjs/ajax';\nimport { baseUrl } from '@/config';\nimport { EMPTY } from 'rxjs';\nimport store from '@/redux/store';\n\nexport default {\n    get(url: string, params: object, options?: ApiOptions) {\n        let initUrl = `${baseUrl}${url}/`;\n        let headers: ApiHeaders = {};\n        let formaturl: string = '';\n        let { token, farm_code: farmcode } = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.userInfoStore.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                store.dispatch({\n                    type: 'SAVE_USER_INFO',\n                    payload: {\n                        userInfo: {\n                            isLogin: false,\n                            token: '',\n                            farm_code: ''\n                        }\n                    }\n                });\n                window.location.href=`${window.location.origin}/#/login`;\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmcode) {\n                window.location.href=`${window.location.origin}/#/login`;\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmcode}/${url}/`;\n        }\n\n        formaturl = `${initUrl}?${Object.entries(params).map(item => item.join('=')).join('&')}`;\n\n        return ajax.get(formaturl, headers);\n    },\n    post(url: string, params: object, options?: ApiOptions) {\n        let headers: ApiHeaders = {};\n        let initUrl = `${baseUrl}${url}/`;\n        const { token, farm_code: farmcode } = JSON.parse(localStorage.getItem('userInfo') || '{}');\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.userInfoStore.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                store.dispatch({\n                    type: 'SAVE_USER_INFO',\n                    payload: {\n                        userInfo: {\n                            isLogin: false,\n                            token: '',\n                            farm_code: ''\n                        }\n                    }\n                });\n                window.location.href=`${window.location.origin}/#/login`;\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmcode) {\n                window.location.href=`${window.location.origin}/#/login`;\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmcode}/${url}/`\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmcode });\n        }\n        if(options && options.overrideHeaders) {\n            headers = options.overrideHeaders(headers);\n        }\n        return ajax.post(initUrl, params, headers);\n    }\n}","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Container,\n    TextField,\n    InputAdornment,\n    Button,\n    ButtonGroup,\n    Grid,\n    Link\n} from '@material-ui/core';\nimport {\n    AccountCircle\n} from '@material-ui/icons';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { loginIn$ } from '@/api';\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveUserInfo: (userInfo: object) => dispatch({\n            type: 'SAVE_USER_INFO',\n            payload: {\n                userInfo\n            }\n        })\n    }\n};\nconst mapStateToProps = (state: any) => {\n    const { userInfoStore } = state;\n    return {\n        isLogin: userInfoStore.isLogin\n    }\n};\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    loginSubTitle: {\n        fontSize: '16px',\n        color: '#ccc'\n    },\n    formContainer: {\n        width: '75%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px',\n        marginBottom: 2\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    }\n});\ninterface State {\n    mobileCode: string;\n    userNameOrMobile: string;\n}\ninterface StateValid {\n    mobileCode: boolean;\n    userNameOrMobile: boolean;\n}\nconst Login: React.FC = (props: any) => {\n    const [loginInfo, setLoginInfo] = useState<State>({\n        mobileCode: '1234',\n        userNameOrMobile: 'test'\n    });\n    const [loginInfoValid, setLoginInfoValid] = useState<StateValid>({\n        mobileCode: true,\n        userNameOrMobile: true\n    });\n    const classes = useStyles();\n\n    const handleUserInfoChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setLoginInfo({...loginInfo, [name]: e.target.value})\n    }\n    const handleLogin = () => {\n        setLoginInfoValid({\n            mobileCode: Boolean(loginInfo.mobileCode),\n            userNameOrMobile: Boolean(loginInfo.userNameOrMobile)\n        });\n        if (!loginInfo.mobileCode || !loginInfo.userNameOrMobile) {\n            return\n        }\n        const Params = {\n            'open_id': 'af7ca86e-94e6-4216-9ae4-e0ca2800125c'\n        };\n        const subscription = loginIn$(Params).pipe(\n            mergeMap(({ response = {}}) => {\n                return Promise.resolve(response)\n            })\n        ).subscribe(\n            data => {\n                props.saveUserInfo({\n                    ...data,\n                    isLogin: true\n                });\n                subscription.unsubscribe();\n                props.history.push('/selectRanch');\n            },\n            error => {\n                console.log('error', error)\n            }\n        )\n    }\n    return (\n        <Container >\n            {/* <If condition={props.isLogin}>\n                <Redirect to=\"/home\" />\n            </If> */}\n            <h1 className={`${classes.loginTitle} text-center`}>\n                登录阿拉钉牧场\n            </h1>\n            <h4 className={`${classes.loginSubTitle}  text-center`}>\n                请用您的手机号或者账号登陆\n            </h4>\n            <div className={classes.formContainer}>\n                <TextField\n                    required\n                    error={!loginInfoValid.userNameOrMobile}\n                    helperText={ !loginInfoValid.userNameOrMobile ? \"请输入手机号/账号\" : \"\"}\n                    className={classes.textField}\n                    onChange={handleUserInfoChange('userNameOrMobile')}\n                    value={loginInfo.userNameOrMobile}\n                    placeholder=\"手机号/账号\"\n                    fullWidth\n                />\n                <TextField\n                    error={!loginInfoValid.mobileCode}\n                    helperText={ !loginInfoValid.mobileCode ? \"请输入验证码\" : \"\"}\n                    className={classes.textField}\n                    onChange={handleUserInfoChange('mobileCode')}\n                    value={loginInfo.mobileCode}\n                    placeholder=\"验证码\"\n                    fullWidth\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" className={classes.codeBtn} size=\"small\" color=\"primary\">\n                                    获取验证码\n                                </Button>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n                <ButtonGroup\n                    className={classes.textField}\n                    fullWidth\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"Full width outlined button group\"\n                    onClick={() => handleLogin()}\n                >\n                    <Button>\n                        登录\n                    </Button>\n                </ButtonGroup>\n            </div>\n            <Grid container className={classes.register}>\n                <Grid item xs={2} >\n                    \n                </Grid>\n                <Grid item xs={6} >\n                    <span>我还没有账号</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <Link component={RouterLink} to=\"/register\"> 我要注册 </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import base from './base';\n\nexport const loginIn$ = (params: object) => base.post('jauth', params, { useToken: false });\n\nexport const fetchCanUseFarms$ = (params: object) => base.get('farms', params, { useToken: true });\n\nexport const uploadImgs$ = (params: object) => base.post('imagesupload', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表\nexport const fetchTodoTaskRuns$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true });\n\n// 用户列表\nexport const fetchUsersList$ = (params: object) => base.get('users', params, { useFarmCode: true, useToken: true });\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        changeLoginStatus: (loginStatus: boolean) => dispatch({\n            type: 'CHANGE_LOGIN_STATUS',\n            payload: {\n                loginStatus\n            }\n        })\n    }\n}\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    formContainer: {\n        width: '75%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    },\n    registerSuccess: {\n        width: '80%',\n        margin: '15vh auto 0',\n        color: '#999',\n        textAlign: 'center',\n        fontSize: '14px'\n    }\n});\n\nconst Register: React.FC = (props: any) => {\n    const [userNameOrMobile, setUserNameOrMobile] = useState('');\n    const [mobileCode, setMobileCode] = useState('');\n    const [hasRegister, setHasRegister] = useState(false);\n    const classes = useStyles();\n\n    const onUserNameOrMobileChange = (e: any) => {\n        setUserNameOrMobile(e.target.value);\n    }\n    const onMobileCodeChange = (e: any) => {\n        setMobileCode(e.target.value);\n    }\n    const handleLogin = () => {\n        props.changeLoginStatus(true)\n        setHasRegister(true)\n    }\n    const toHome = () => {\n        props.history.push('/')\n    }\n    return (\n        <Container >\n            <h1 className={`${classes.loginTitle} text-center`}>\n                阿拉钉牧业通用平台\n            </h1>\n            <Choose>\n                <When condition={!hasRegister}>\n                    <div className={classes.formContainer}>\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onUserNameOrMobileChange(e)}\n                            placeholder=\"录入您的手机号\"\n                            fullWidth\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircle />\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onMobileCodeChange(e)}\n                            // label=\"手机号/账号\"\n                            placeholder=\"验证码\"\n                            fullWidth\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircle />\n                                    </InputAdornment>\n                                ),\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <Button variant=\"contained\" className={classes.codeBtn} size=\"small\" color=\"primary\">\n                                            获取验证码\n                                        </Button>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            onChange={e => onUserNameOrMobileChange(e)}\n                            // label=\"手机号/账号\"\n                            placeholder=\"录入您的牧场/企业\"\n                            fullWidth\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircle />\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                        >\n                            <Button\n                                onClick={() => handleLogin()}\n                            >\n                                注册\n                            </Button>\n                        </ButtonGroup>\n                        <Grid container className={classes.register}>\n                            <Grid item xs={1} >\n                                \n                            </Grid>\n                            <Grid item xs={7} >\n                                <span>已经有账户</span>\n                            </Grid>\n                            <Grid item xs={4} className=\"text-center\">\n                                <Link component={RouterLink} to=\"/login\">登录</Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </When>\n                <Otherwise>\n                    <div className={classes.registerSuccess}>\n                        <h3>欢迎使用，有任何问题请致电：</h3>\n                        <h3>18621812625</h3>\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                        >\n                            <Button\n                                onClick={() => toHome()}\n                            >\n                                继续\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Otherwise>\n            </Choose>\n        </Container>\n    );\n}\nexport default connect(null, mapDispatchToProps)(Register)","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n        // marginBottom: 20\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n    },\n    iconButton: {\n      padding: 5,\n    }\n});\n\ninterface SearchProps {\n    searchMethod?: any;\n    placeholder?: string;\n    onSearchChange?:() => void;\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const handleClickSearch = () => {\n        props.searchMethod && props.searchMethod(value);\n    }\n\n    return (\n        <Paper className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={props.placeholder}\n                inputProps={{ 'aria-label': '搜索阿拉钉牧场' }}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n            />\n            <IconButton\n                className={classes.iconButton}\n                aria-label=\"Search\"\n                onClick={() => handleClickSearch()} \n            >\n                <SearchIcon color={ value ? 'primary' : 'disabled'}/>\n            </IconButton>\n        </Paper>\n    )\n}\nexport default Search;","import React,{ useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { mergeMap } from 'rxjs/operators';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Grid,\n    Switch,\n    TextField,\n    Button,\n    ButtonGroup,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormControlLabel\n} from '@material-ui/core';\nimport Search from '@/components/search/index';\nimport { fetchCanUseFarms$ } from '@/api';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    container: {\n        width: '70%',\n        margin: '15vh auto 0'\n    },\n    title: {\n        fontSize: '20px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    ranchList: {\n        paddingLeft: 10,\n        marginTop: 10\n    }\n});\n\ninterface aldRanchItem {\n    farm_code: string;\n    farm_name: string;\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveUserInfo: (userInfo: object) => dispatch({\n            type: 'SAVE_USER_INFO',\n            payload: {\n                userInfo\n            }\n        })\n    }\n};\nconst SelectRanch = (props: any) => {\n    const classes = useStyles();\n    const [otherRanchState, setOtherRanchState] = React.useState(false);\n    const [checkALD, setCheckALD] = useState(true);\n    const [aldRanch, setAldRanch] = useState('');\n    const [searchValue, setSearchValue] = useState('');\n    const [aldRanchList, setAldRanchList] = useState<aldRanchItem[]>([]);\n\n    useEffect(() =>  {\n        const Params: any = {\n            page: 1,\n            page_size: 1000\n        };\n        if (searchValue) {\n            Params.search = searchValue\n        }\n        const subscrible =  fetchCanUseFarms$(Params).pipe(\n            mergeMap(({ response = {} }) => {\n                return Promise.resolve(response.results || []);\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setAldRanchList(data);\n                setAldRanch((data[0] && data[0].farm_code) || '');\n            },\n            error => {\n                console.log('error', error);\n            }\n        )\n        return () => {\n            subscrible.unsubscribe();\n        }\n    }, [searchValue]);\n\n    const handleChange = (e: any) => {\n        setCheckALD(e.target.checked)\n    };\n\n    const handleALDRanchChange = (e: any) => {\n        setAldRanch(e.target.value)\n    }\n\n    const [other, setOtherRanch] = useState(\"\");\n    const handleInputOtherRanch = (e: any) => {\n        setOtherRanch(e.target.value);\n    }\n\n    const jumpToHome = () => {\n        let isALD = \"0\";\n        if (checkALD) {\n            isALD = \"1\";\n            props.saveUserInfo({farm_code: aldRanch});\n        } else {\n            setOtherRanchState(!other);\n            if (!other) return;\n        }\n        props.history.push(`/home?isALD=${isALD}`);\n        sessionStorage.setItem(\"isALD\", isALD);\n    };\n\n    return (\n        <div className=\"select-ranch-wrapper\">\n            <div className=\"select-ranch-container\">\n                <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Grid item xs={8}>\n                        <h1 className={classes.title}>登陆阿拉钉牧场</h1>\n                    </Grid>\n                    <Grid item xs={4} className=\"text-right\">\n                        <Switch\n                            checked={checkALD}\n                            color=\"primary\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Choose>\n                    <When condition={checkALD}>\n                        <Search\n                            searchMethod={setSearchValue}\n                        />\n                        <FormControl component=\"fieldset\" className={classes.ranchList}>\n                            <RadioGroup aria-label=\"position\" name=\"position\" value={aldRanch} onChange={handleALDRanchChange}>\n                                {\n                                    aldRanchList.map(item => (\n                                        <FormControlLabel\n                                            key={item.farm_code}\n                                            value={item.farm_code}\n                                            control={<Radio color=\"primary\" />}\n                                            label={item.farm_name}\n                                            labelPlacement=\"end\"\n                                        />\n                                    ))\n                                }\n                            </RadioGroup>\n                        </FormControl>\n                    </When>\n                    <Otherwise>\n                        <TextField\n                            error={otherRanchState}\n                            className={classes.textField}\n                            placeholder=\"录入您的牧场名称,如XXX牧场\"\n                            fullWidth\n                            value={other}\n                            onChange={handleInputOtherRanch}\n                            helperText={otherRanchState ? \"请录入您的牧场名称\" : \"\"}\n                        />\n                    </Otherwise>\n                </Choose>\n                <ButtonGroup\n                    className={classes.textField}\n                    fullWidth\n                    size=\"medium\"\n                    onClick={jumpToHome}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"Full width outlined button group\"\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, mapDispatchToProps)(SelectRanch)","\n/**\n * Home Page Header Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme: any) => ({\n    aldFarm: {\n        height: '20vh',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        paddingTop: 20,\n        width: '100%',\n        top: 0,\n        \"& h4\": {\n            marginTop: 0,\n            marginBottom: 0\n        },\n        position: 'fixed'\n    },\n    textWhite: {\n        color: 'white'\n    }\n}));\n","/**\n * Home Page Header Area \n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Container, Grid, IconButton, Link } from '@material-ui/core';\nimport { PermIdentity } from '@material-ui/icons';\nimport useStyles from \"./_styles\";\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.aldFarm}>\n            <Grid container>\n                <Grid item xs={8}>\n                    <h4>ALDFarm</h4>\n                    <h4>连接牧场一切信息</h4>\n                </Grid>\n                <Grid item xs={4} className=\"text-right\">\n                    <Link component={RouteLink} to=\"/user\">\n                        <IconButton\n                            aria-label=\"user\"\n                            className={classes.textWhite}\n                        >\n                            <PermIdentity />\n                        </IconButton>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n","\n/**\n * Home Page entrance Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    homeContainer: {\n        height: '100vh',\n        overflowY: 'auto',\n        background: '#fff'\n    },\n    homeContent: {\n        marginTop: 85,\n        paddingTop: 30,\n        paddingBottom: 20,\n        zIndex: 5,\n        position: 'relative',\n        background: '#fff',\n        textAlign: 'center',\n        borderTopLeftRadius: '45px 45px',\n        borderTopRightRadius: '45px 45px',\n    },\n    homeContentIcon: {\n    },\n    searchContainer: {\n        width: '85%',\n        margin: '0 auto'\n    }\n});\n","/**\n * Home Page other page entrance area\n */\nimport React from \"react\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Container, Grid, Link } from '@material-ui/core';\nimport { Description } from '@material-ui/icons';\nimport Search from '@/components/search/index';\nimport useStyles from \"./_styles\";\n\ninterface IProps {\n    isALD: string;\n}\n\nexport default (props: IProps) => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.homeContent}>\n            <div className={classes.searchContainer}>\n                <Search placeholder=\"搜索牛只\" />\n            </div>\n            <Grid justify=\"center\" container >\n                <Choose>\n                    <When condition={props.isALD === \"1\"}>\n                        <Grid item xs={6} >\n                                <Link component={RouterLink} to=\"/manageList/ald\">\n                                    <div className=\"home-entrance-wrapper\">\n                                        <Description className=\"fs-36-it\" />\n                                        <div >\n                                            阿拉钉评估\n                                        </div>\n                                    </div>\n                                </Link>\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs={6}>\n                            <Link component={RouterLink} to=\"/manageList/society\">\n                                <div className=\"home-entrance-wrapper\">\n                                    <Description className=\"fs-36-it\" />\n                                    <div>\n                                        社会牧场评估\n                                    </div>\n                                </div>\n                            </Link>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/tasks\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                任务清单\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                现场报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                现场报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nexport default function(props: any) {\n    return (\n        <Box\n            border={1}\n            borderRadius=\"borderRadius\"\n            borderColor=\"#ccc\"\n            flex=\"0 0 85%\"\n            margin=\"0 10px\"\n        >\n            {props.children}\n        </Box>\n    )\n};\n","/**\n * Home Page Reports Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    chartTitle: {\n        fontSize: '1rem',\n        color: '#111',\n        paddingLeft: '15px'\n    },\n    chartContainer: {\n        color: '#999',\n        padding: '0 0 90px',\n    }\n});\n","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"邮件营销\",\n                icon: 'circle'\n            },\n            {\n                name: \"联盟广告\",\n                icon: 'circle'\n            },\n            {\n                name: \"视频广告\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"邮件营销\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"联盟广告\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"视频广告\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","/**\n * Home Page Reports Area\n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Grid, IconButton, Box, Link } from '@material-ui/core';\nimport ReactEcharts from 'echarts-for-react';\nimport { NavigateNext } from '@material-ui/icons';\nimport ChartBox from './_chartbox';\nimport useStyles from \"./_styles\";\nimport { SevenDayOpt } from './_mock';\n\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            className={classes.chartContainer}\n            borderTop={1}\n            borderColor=\"#ccc\"\n        >\n            <Grid container alignItems=\"center\" className={classes.chartTitle}>\n                <Grid item xs>预警报表</Grid>\n                <Grid item xs={2} className=\"text-right\">\n                    <Link component={RouteLink} to=\"/reports\">\n                        <IconButton>\n                            <NavigateNext />\n                        </IconButton>\n                    </Link>\n                </Grid>\n            </Grid>\n            <Box\n                display=\"flex\"\n                flexWrap=\"nowrap\"\n                overflow=\"scroll\"\n            > \n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n            </Box>\n        </Box>\n    );\n};\n","import React from 'react';\n// import qs from \"querystring\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport url from \"url\";\nimport { makeStyles } from '@material-ui/styles';\nimport HomeHeader from \"./header\";\nimport Entrance from \"./entrance\";\nimport Reports from \"./report\";\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    homeContainer: {\n        // height: '100vh',\n        // overflowY: 'auto',\n        background: '#fff'\n    }\n});\n\ninterface IProps{ \n    isLogin: boolean;\n}\nconst mapStateToProps = (state: any) => {\n    const { userInfoStore } = state;\n    return {\n        isLogin: userInfoStore.isLogin\n    }\n};\nconst Home: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const { query } = url.parse(props.location.search, true)\n    const isALD= String(query.isALD || sessionStorage.getItem(\"isALD\") || \"0\");\n\n    return (\n        <div className={classes.homeContainer}>\n            <If condition={!props.isLogin}>\n                <Redirect to=\"/login\" />\n            </If>\n            <HomeHeader />\n            <Entrance isALD={isALD}/>\n            <Reports />\n        </div>\n    )\n};\nexport default connect(mapStateToProps)(Home)","import React from 'react';\nimport {\n    Grid,\n    IconButton,\n    Paper,\n    InputBase\n} from '@material-ui/core';\nimport { \n    makeStyles\n} from '@material-ui/styles'\nimport {\n    KeyboardBackspace,\n    Search,\n    Done as DoneIcon,\n} from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\ninterface IProps extends RouteComponentProps {\n    title: string;\n    endAdorment?: JSX.Element;\n    useSearch?: boolean;\n    searchPlaceholder?: string;\n    getSearchValue?: (val: string) => void;\n}\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        height: 48,\n        fontSize: '1rem',\n        textAlign: 'center',\n        color: theme.palette.primary.contrastText,\n        position: 'fixed',\n        fontWeight: 'bolder',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10\n    },\n    icon: {\n        color: '#fff'\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n        color: '#fff'\n    },\n    iconButton: {\n        padding: 10,\n        color: '#fff'\n    },\n    inputBox: {\n        color: '#fff'\n    }\n}))\n\nconst  AppBar: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [searchState, setSearchState] = React.useState(false);\n    const [searchValue, setSearchValue] = React.useState('');\n\n    const handleCliclBack = () => {\n        props.history.goBack()\n    };\n    const handleSetSearchState = (state: boolean) => {\n        setSearchState(state);\n        props.getSearchValue && props.getSearchValue(searchValue);\n        setSearchValue('');\n    }\n    \n    return (\n        <Paper className={classes.root} square={true}>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <IconButton onClick={() => handleCliclBack()}>\n                        <KeyboardBackspace className={classes.icon} />\n                    </IconButton>\n                </Grid>\n                <Choose>\n                    <When condition={!searchState}>\n                        <Grid item xs>\n                            {props.title}\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs=\"auto\" className={classes.inputBox}>\n                            <InputBase\n                                value={searchValue}\n                                onChange={e => setSearchValue(e.target.value)}\n                                className={classes.input}\n                                placeholder={props.searchPlaceholder}\n                                inputProps={{ 'aria-label': props.searchPlaceholder }}\n                            />\n                            <IconButton\n                                className={classes.iconButton}\n                                aria-label=\"search\"\n                                onClick={() => handleSetSearchState(false)}\n                            >\n                                <DoneIcon />\n                            </IconButton>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n                <If condition={!searchState}>\n                    <Choose>\n                        <When condition={props.useSearch}>\n                            <IconButton onClick={() => setSearchState(true)}>\n                                <Search className={classes.icon} />\n                            </IconButton>\n                        </When>\n                        <Otherwise>\n                            <Grid item xs={2}>\n                                {props.endAdorment}\n                            </Grid>\n                        </Otherwise>\n                    </Choose>\n                </If>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default withRouter(AppBar);","import React from 'react';\nimport { Divider as MDivider } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Divider: React.FC = (props: any) => {\n    const theme = useTheme();\n    return (\n        <MDivider style={{ backgroundColor: theme.palette.primary.main }} />\n    )\n}\nexport default Divider","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    selectContainer: {\n        position: 'fixed',\n        top: 48,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText\n    },\n    contantContainer: {\n        marginTop: 110,\n        paddingBottom: 70\n    },\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    Menu,\n    MenuItem,\n    Paper,\n    Container,\n    Typography,\n    CircularProgress\n} from '@material-ui/core';\nimport {\n    ExpandMore\n} from '@material-ui/icons';\nimport { map } from 'rxjs/operators';\nimport dayjs from 'dayjs';\n// import { ListView } from 'antd-mobile';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport useStyles from './styles';\nimport { fetchTodoTaskRuns$ } from '@/api';\n\ninterface selectedIndexState {\n    BJ: number;\n    FZ: number;\n    SY: number;\n    RW: number;\n}\ninterface optionsItem {\n    key: keyof selectedIndexState;\n    anchorEl: null | HTMLElement;\n    setAnchorEl: React.Dispatch<React.SetStateAction<HTMLElement | null>>;\n    options: string[];\n}\nconst ITEM_HEIGHT = 48;\n// const dataBlobs = {};\n// let sectionIDs = [];\n// let rowIDs = [];\n\nconst Tasks: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n    const [tasksList, setTasksList] = React.useState([]);\n    const [page, setPage] = React.useState(1);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    // const [isLoading, setIsLoading] = React.useState(true);\n    const [anchorElBJ, setAnchorElBJ] = React.useState<null | HTMLElement>(null);\n    const [anchorElFZ, setAnchorElFZ] = React.useState<null | HTMLElement>(null);\n    const [anchorElSY, setAnchorElSY] = React.useState<null | HTMLElement>(null);\n    const [anchorElRW, setAnchorElRW] = React.useState<null | HTMLElement>(null);\n    const [selectedIndex, setSelectedIndex] = React.useState<selectedIndexState>({\n        'BJ': 0,\n        'FZ': 0,\n        'SY': 0,\n        'RW': 0\n    });\n    const options: optionsItem[] = [\n        {\n            key: 'BJ',\n            anchorEl: anchorElBJ,\n            setAnchorEl: setAnchorElBJ,\n            options: [\n                '保健',\n                '保健一',\n                '保健二',\n                '保健三'\n            ]\n        },\n        {\n            key: 'FZ',\n            anchorEl: anchorElFZ,\n            setAnchorEl: setAnchorElFZ,\n            options: [\n                '繁殖',\n                '繁殖一',\n                '繁殖二',\n                '繁殖三'\n            ]\n        },\n        {\n            key: 'SY',\n            anchorEl: anchorElSY,\n            setAnchorEl: setAnchorElSY,\n            options: [\n                '饲养',\n                '饲养一',\n                '饲养二',\n                '饲养三'\n            ]\n        },\n        {\n            key: 'RW',\n            anchorEl: anchorElRW,\n            setAnchorEl: setAnchorElRW,\n            options: [\n                '任务',\n                '任务一',\n                '任务二',\n                '任务三'\n            ]\n        }\n    ];\n    const setAnchorElMap: any = {\n        'BJ': setAnchorElBJ,\n        'FZ': setAnchorElFZ,\n        'SY': setAnchorElSY,\n        'RW': setAnchorElRW\n    };\n    const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, key: string, index: number) => {\n        setSelectedIndex({...selectedIndex, [key]: index});\n        handleClose(key);\n    }\n    \n    const handleClose = (key: string) => {\n        setAnchorElMap[key](null);\n    }\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n\n    React.useEffect(() => {\n        setLoading(true);\n        const ApiInst = fetchTodoTaskRuns$({page, page_size: 10}).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next]),\n            map(([list, next]) => {\n                const tasksList =  list.map((item: any) => {\n                    return {\n                        ...item,\n                        toNowDate: dayjs(item.run_date).diff(dayjs(), 'day')\n                    }\n                });\n                return [tasksList, next];\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setTasksList(tasksList.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [page]);\n\n    return (\n        <Box>\n            <AppBar title=\"任务清单\" />\n            <Box className={classes.selectContainer}>\n                <Grid container >\n                    {\n                        options.map((item, index) => (\n                            <Grid item xs={3} key={`${item.key}-${index}`} container justify=\"center\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"More\"\n                                    aria-controls=\"long-menu\"\n                                    aria-haspopup=\"true\"\n                                    onClick={e => item.setAnchorEl(e.currentTarget)}\n                                >\n                                    <Box fontSize=\"12px\">\n                                        {item.options[selectedIndex[item.key]]}\n                                    </Box>\n                                    <ExpandMore />\n                                </IconButton>\n                                <Menu\n                                    id=\"long-menu\"\n                                    anchorEl={item.anchorEl}\n                                    keepMounted\n                                    open={Boolean(item.anchorEl)}\n                                    onClose={() => handleClose(item.key)}\n                                    PaperProps={{\n                                        style: {\n                                            maxHeight: ITEM_HEIGHT * 4.5,\n                                            width: 120,\n                                        },\n                                    }}\n                                >\n                                    {item.options.map((option, index) => (\n                                        <MenuItem\n                                            key={option}\n                                            selected={index === selectedIndex[item.key]}\n                                            onClick={e => handleMenuItemClick(e, item.key, index)}\n                                        >\n                                            {option}\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n        \n                            </Grid>\n                        ))\n                    }\n                </Grid>\n            </Box>\n            <Container className={classes.contantContainer}>\n                {\n                    tasksList.map((item: any, i) => (\n                        <Paper className={classes.paper} key={`tasks-item-${i}`}>\n                            <Box position=\"relative\">\n                                <Grid container>\n                                    <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                                        <Box paddingX=\"5px\">\n                                            <img\n                                                className={classes.img}\n                                                alt=\"complex\"\n                                                src={item.photo ? item.photo : require('../../assets/images/default.jpg')}\n                                            />\n                                        </Box>\n                                    </Grid>\n                                    <Grid item xs={10} container>\n                                        <Grid item xs=\"auto\" container direction=\"column\">\n                                            <Grid item xs>\n                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                    {item.todotask_name}\n                                                </Typography>\n                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                    <Box fontSize=\"12px\">\n                                                        {item.content}\n                                                    </Box>\n                                                    <Box fontSize=\"12px\">\n                                                        100/84 完工期限 {item.toNowDate > 0 ?  item.toNowDate : 0}天\n                                                    </Box>\n                                                    <Box fontSize=\"12px\">\n                                                        任务日期 {item.run_date.split(' ')[0]} { item.toNowDate > 0 ? '距今' : '已超'}{Math.abs(item.toNowDate)}天\n                                                    </Box>\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Divider />\n                                                <Typography variant=\"subtitle2\" gutterBottom>\n                                                    <IconButton className={classes.detailBtn}>\n                                                        <Box fontSize=\"12px\">\n                                                            明细\n                                                        </Box>\n                                                        <ExpandMore color=\"primary\" />\n                                                    </IconButton>\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Box\n                                    position=\"absolute\"\n                                    right=\"5px\"\n                                    top=\"10%\"\n                                    onClick={() => props.history.push('/tasksDetail/1')}\n                                >\n                                    <CircularProgressbar\n                                        className={classes.circularProgressba}\n                                        value={75}\n                                        text='75%'\n                                        styles={buildStyles({\n                                            pathColor: `rgba(207, 0, 15, ${75 / 100})`,\n                                            textColor: `rgba(207, 0, 15, ${75 / 100})`\n                                        })}\n                                    />\n                                </Box>\n                            </Box>\n                        </Paper>\n                    ))\n                }\n                <Choose>\n                    <When condition={loading}>\n                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                            <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                        </Box>\n                    </When>\n                    <Otherwise>\n                        <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                            {next ? '点击加载更多' : '没有更多了'}\n                        </Box>\n                    </Otherwise>\n                </Choose>\n            </Container>\n        </Box>\n    );\n}\nexport default Tasks;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Grid,\n    Divider,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles((theme: any) => ({\n    circularProgressba: {\n        width: 50\n    },\n    root: {\n        height: '23vh',\n        padding: 10,\n        paddingTop: 50\n    },\n    tablecell: {\n        padding: '10px 5px'\n    },\n    table: {\n        background: '#fff'\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\nfunction createData(cowNumber: string, cowshed: string, date: string, statusLabel: string) {\n    return { cowNumber, cowshed, date, statusLabel };\n}\n  \nconst rows = [\n    createData('1001', '2号棚', '2019-03-10', '是'),\n    createData('1002', '2号棚', '2019-03-10', '否'),\n    createData('1003', '2号棚', '2019-03-10', '是')\n];\nconst TasksDetail: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n    return (\n        <Box>\n            <AppBar title=\"完工单明细\" />\n            <Grid container className={classes.root} alignItems=\"center\">\n                <Grid item xs>\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                    <Box fontSize={12}>任务 100， 完成 75</Box>\n                    <Rating name=\"half-rating\" value={75 * 5 / 100} readOnly />\n                </Box>\n                </Grid>\n                <Grid item  xs=\"auto\">\n                    <CircularProgressbar\n                        className={classes.circularProgressba}\n                        value={75}\n                        text='75%'\n                        styles={buildStyles({\n                            pathColor: `rgba(207, 0, 15, ${75 / 100})`,\n                            textColor: `rgba(207, 0, 15, ${75 / 100})`\n                        })}\n                    />\n                </Grid>\n            </Grid>\n            <Divider />\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛号</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛舍</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务日期</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>是否完成</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow hover key={row.cowNumber}>\n                            <TableCell align=\"center\" className={classes.tablecell} onClick={() => props.history.push('/cowDetail/1')}>{row.cowNumber}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.cowshed}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.date}</TableCell>\n                            <TableCell align=\"center\" className={classes.tablecell}>{row.statusLabel}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Box>\n    )\n}\nexport default TasksDetail;","import React from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport {\n    Grid,\n    Box,\n    Container,\n    FormControl,\n    Input,\n    InputAdornment,\n    TextField,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n    Checkbox,\n    ButtonGroup,\n    Button\n} from '@material-ui/core';\nimport {\n    AddCircleOutline as AddCircleOutlineIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon\n} from '@material-ui/icons'\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport { DateTime } from 'luxon';\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport { uploadImgs$ } from '@/api';\n\ninterface CowBreastPositionState {\n    lf: string;\n    lb: string;\n    rf: string;\n    rb: string;\n}\ninterface CowTypeAndResult {\n    type: string;\n    result: string;\n}\ninterface CowBreastPositionItem {\n    label: string;\n    key: keyof CowBreastPositionState;\n}\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    InputAdornment: {\n        '& p': {\n            width: 60\n        }\n    },\n    inputAdornment: {\n        '& p': {\n            width: 40\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111'\n    }\n});\n// 牛类型\nconst CowType = [\n    {\n      value: '0',\n      label: '干奶牛',\n    },\n    {\n      value: '1',\n      label: '新产牛',\n    },\n    {\n      value: '2',\n      label: '早期牛',\n    },\n    {\n      value: '3',\n      label: '中期牛',\n    },\n    {\n      value: '4',\n      label: '后期牛',\n    },\n];\n// 乳头信息\nconst Teats = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    },\n    {\n        label: '瞎奶头',\n        value: '0'\n    }\n];\n// 体况评分\nconst LocomotionScore: any = [];\nfor(let i = 1; i <= 5; i = i + 0.25) {\n    LocomotionScore.push({label: i, value: i});\n}\n// 结果\nconst Results = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    }\n];\nconst RanchType: any = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\nconst ReviewType: any = {\n    0: '乳头评分',\n    1: '行走评分',\n    2: '体况评分',\n    3: '粪便评分'\n};\nconst CowBreastPosition: CowBreastPositionItem[] = [\n    {\n        label: '左前',\n        key: 'lf'\n    },\n    {\n        label: '左后',\n        key: 'lb'\n    },\n    {\n        label: '右前',\n        key: 'rf'\n    },\n    {\n        label: '右后',\n        key: 'rb'\n    }\n];\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveReviewDetail(info: object) {\n            return dispatch({\n                type: 'SAVE_REVIEW_DETAIL',\n                payload: info\n            });\n        }\n    }\n};\nconst ReviewDetail: React.FC = (props: any) => {\n    const [assessDate, setAssessDate] = React.useState<any>(\n        DateTime.local()\n    );\n    const [note, setNote] = React.useState('');\n    const [imgFiles, setImgFiles] = React.useState<any>([]);\n    const [cowBreastPosition, setCowBreastPosition] = React.useState<CowBreastPositionState>({\n        lf: '',\n        lb: '',\n        rf: '',\n        rb: ''\n    });\n    const [cowTypeAndResult, setCowTypeAndResult] = React.useState<CowTypeAndResult>({\n        type: '',\n        result: ''\n    });\n    const { ranchType, reviewType } = props.match.params;\n    \n    const LabelText: string = `${ReviewType[reviewType]}-业务备注`;\n    const ResultsList = +reviewType === 2 ? LocomotionScore : Results;\n    const classes = useStyles();\n\n    function handleDateChange(date: any) {\n        setAssessDate(date);\n    }\n    const handleCowBreastPosition = (name: keyof CowBreastPositionState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCowBreastPosition({...cowBreastPosition, [name]: event.target.value});\n    };\n    const handleCowTypeAndResult = (name: keyof CowTypeAndResult) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCowTypeAndResult({...cowTypeAndResult, [name]: event.target.value});\n    };\n    const handleSubmit = () => {\n        const formdata = new FormData();\n        formdata.append('imgs', imgFiles[0]);\n        uploadImgs$(formdata)\n            .subscribe(\n                data => {\n                    console.log('data', data)\n                },\n                error => {\n                    console.log('error', error)\n                }\n            )\n    };\n    const handleReviewDetail = (name: string) => (e: any) => {\n        props.saveReviewDetail({\n            [name]: e.target.value\n        })\n    }\n    return (\n        <React.Fragment>\n            <AppBar title={`${RanchType[ranchType]}-${ReviewType[reviewType]}`} />\n            <Container className={classes.root}>\n                <FormControl fullWidth>\n                    <Input\n                        value={props.assesser.label}\n                        placeholder=\"请输入评估人姓名\"\n                        onFocus={() => props.history.push('/commonSelectList/0')}\n                        startAdornment={<InputAdornment className={classes.InputAdornment} position=\"start\">评估人:</InputAdornment>}\n                    />\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"评估日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate}\n                            onChange={date => props.saveReviewDetail({assessDate: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <TextAreaAndUploadImg\n                    // getImgFiles={photo => props.saveReviewDetail({photo})}\n                    // getTextAreaValue={note => props.saveReviewDetail({note})}\n                    labelText={LabelText}\n                    // note={props.note}\n                    // photo={props.photo}\n                />\n                <Box>\n                    <Box>\n                        <FormControl margin=\"dense\" fullWidth>\n                            <Input\n                                placeholder={`请输入牛${ +reviewType !== 3 ? '' : '舍'}号`}\n                                startAdornment={\n                                    (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                        牛{ +reviewType !== 3 ? '号' : '舍'}:\n                                    </InputAdornment>)\n                                }\n                                endAdornment={\n                                    (<If condition={+reviewType === 3}>\n                                        <InputAdornment position=\"end\">#</InputAdornment>\n                                    </If>)\n                                }\n                            />\n                        </FormControl>\n                        <Choose>\n                            <When condition={+reviewType !== 0}>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">类型:</InputAdornment>,\n                                        }}\n                                        onChange={handleCowTypeAndResult('type')}\n                                        value={cowTypeAndResult.type}\n                                    >\n                                        {CowType.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">结果:</InputAdornment>,\n                                        }}\n                                        onChange={handleCowTypeAndResult('result')}\n                                        value={cowTypeAndResult.result}\n                                    >\n                                        {ResultsList.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                            </When>\n                            <Otherwise>\n                                <Grid container spacing={1}>\n                                    {\n                                        CowBreastPosition.map((position: CowBreastPositionItem) => (\n                                            <Grid item xs={6} key={position.key}>\n                                                <FormControl margin=\"dense\" fullWidth>\n                                                    <TextField\n                                                        select\n                                                        InputProps={{\n                                                            startAdornment: <InputAdornment className={classes.inputAdornment} position=\"start\">{position.label + ':'}</InputAdornment>,\n                                                        }}\n                                                        onChange={handleCowBreastPosition(position.key)}\n                                                        value={cowBreastPosition[position.key]}\n                                                    >\n                                                        {Teats.map(option => (\n                                                            <MenuItem key={option.value} value={option.value}>\n                                                                {option.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                </FormControl>\n                                            </Grid>\n                                        ))\n                                    }\n                                </Grid>\n                            </Otherwise>\n                        </Choose>\n                        <Box className={classes.flexbox}>\n                            <IconButton>\n                                <AddCircleOutlineIcon color=\"primary\" />\n                            </IconButton>   \n                        </Box>\n                    </Box>\n                </Box>\n                <Box className={classes.btnContainer}>\n                    <Box>已经生成n条事件/您没有事件录入权限</Box>\n                    <FormControlLabel\n                        className={classes.btnContainer}\n                        control={\n                            <Checkbox\n                                // className={classes.btnContainer}\n                                // checked={state.checkedB}\n                                // onChange={handleChange('checkedB')}\n                                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                                value=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        classes={{label: classes.btnContainer}}\n                        label=\"是否生成阿拉钉事件\"\n                    />\n                    <ButtonGroup\n                        onClick={handleSubmit}\n                        className={classes.btnMargin}\n                        fullWidth\n                        size=\"medium\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        aria-label=\"Full width outlined button group\"\n                    >\n                        <Button>\n                            提交\n                        </Button>\n                    </ButtonGroup>\n                </Box>\n            </Container>\n        </React.Fragment>\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewDetail);","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"邮件营销\",\n                icon: 'circle'\n            },\n            {\n                name: \"联盟广告\",\n                icon: 'circle'\n            },\n            {\n                name: \"视频广告\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"邮件营销\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"联盟广告\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"视频广告\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    Container,\n    Paper\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\nimport { SevenDayOpt } from './_mock';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root}>\n            <AppBar title=\"预警报表\" />\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n        </Container>\n    )\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper,\n    Tabs,\n    Tab,\n    Grid,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardMedia,\n    Button\n} from '@material-ui/core';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        top: 48,\n        width: '100vw'\n    },\n    reviewListContainer: {\n        paddingTop: 96\n    },\n    media: {\n        height: 120,\n    },\n});\n\nconst RouteParamsType: any = {\n    'ald': '阿拉钉牧场',\n    'society': '社会牧场'\n};\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const reviewList = [\n        {\n            title: '乳头评分',\n            img: require(\"./image/default.jpg\"),\n            value: 0\n        },\n        {\n            title: '行走评分',\n            img: require(\"./image/default.jpg\"),\n            value: 1\n        },\n        {\n            title: '体况评分',\n            img: require(\"./image/default.jpg\"),\n            value: 2\n        },\n        {\n            title: '粪便评分',\n            img: require(\"./image/default.jpg\"),\n            value: 3\n        }\n    ];\n    const RanchType = props.match.params.type;\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n        if (newValue) {\n            props.history.push(`/viewCowshed/${RanchType}`)\n        }\n    }\n\n    return (\n        <div >\n            <AppBar title={`${RouteParamsType[RanchType]}-现场管理清单`} />\n            <Paper className={classes.root} square={true}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"现场评分\" />\n                    <Tab label=\"牛舍巡棚\" />\n                </Tabs>\n            </Paper>\n            <Grid container justify=\"space-around\" className={classes.reviewListContainer}>\n                {\n                    reviewList.map(item => (\n                        <Grid item xs={5} key={item.title} className=\"mt-15-it\">\n                            <Card onClick={() => props.history.push(`/reviewDetail/${RanchType}/${item.value}`) }>\n                                <CardActionArea>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={item.img}\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                </CardActionArea>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        {item.title}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    TextField\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    Delete as DeleteIcon\n} from '@material-ui/icons'\nimport {useDropzone} from 'react-dropzone';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport R from 'ramda';\n\nconst useStyles = makeStyles({\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    img: {\n        display: 'block',\n        width: '100%',\n        height: '90px'\n    },\n    deleteIcon: {\n        color: 'red'\n    }\n});\ninterface IProps {\n    labelText: string;\n}\nconst mapStateToProps = (state: any) => {\n    return {\n        photo: state.reviewDetailStore.photo,\n        note: state.reviewDetailStore.note\n    }\n};\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveReviewDetail(info: object) {\n            return dispatch({\n                type: 'SAVE_REVIEW_DETAIL',\n                payload: info\n            });\n        }\n    }\n};\nconst TextAreaAndUploadImg: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    // const [photo, setPhoto] = useState<any[]>(props.photo);\n    const {getRootProps, getInputProps} = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n            const photoFormat: any = props.photo.concat(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n            props.saveReviewDetail({\n                photo: photoFormat\n            });\n            // setPhoto(photoFormat);\n        }\n    });\n    const deleteImg = (i: number) => {\n        const photoClone = R.remove(i, 1, props.photo);\n        props.saveReviewDetail({\n            photo: photoClone\n        });\n        // setPhoto(photoClone);\n    }\n\n    // useEffect(() => () => {\n    //     props.photo.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    // }, [props.photo]);\n\n    return (\n        <Grid container>\n            <Grid item xs>\n                <TextField\n                    id=\"outlined-textarea\"\n                    label={props.labelText}\n                    multiline\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={props.note}\n                    onChange={e => props.saveReviewDetail({\n                        note: e.target.value\n                    })}\n                />\n            </Grid>\n            <Grid item xs={2} className={classes.flexbox}>\n                     <Box {...getRootProps({className: 'dropzone'})}>\n                        <input {...getInputProps()} />\n                        <IconButton>\n                            <AddAPhotoIcon color=\"primary\" />\n                        </IconButton>\n                    </Box>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"center\">\n                {\n                    props.photo.map((item: any, i: any) => (\n                        <Grid item xs={4} key={`img-file-${i}`}>\n                            <Box position=\"relative\">\n                                <img\n                                    className={classes.img}\n                                    src={item.preview}\n                                    alt={`img-file-${i}`}\n                                />\n                                <Box position=\"absolute\" top=\"-20px\" right=\"-20px\">\n                                    <IconButton\n                                        className={classes.deleteIcon}\n                                        onClick={() => deleteImg(i)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </Grid>\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TextAreaAndUploadImg);","import React from 'react';\nimport {\n    Container,\n    FormControl,\n    TextField,\n    InputAdornment,\n    MenuItem,\n    Input,\n    Box,\n    Grid,\n    IconButton,\n    ButtonGroup,\n    Button,\n    FormControlLabel,\n    Checkbox\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    AddCircleOutline as AddCircleOutlineIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon\n} from '@material-ui/icons';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport { DateTime } from 'luxon';\nimport AppBar from '@/components/app-bar';\n\ninterface TaskForm {\n    type: string;\n    cowshedNumber: string;\n    people: string;\n    mark: ''\n}\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    inputAdornment: {\n        '& p': {\n            width: 75\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111'\n    }\n});\n\nconst TypeList = [\n    {\n        label: '巡棚任务',\n        value: '1'\n    },\n    {\n        label: '外部服务',\n        value: '2'\n    },\n    {\n        label: 'TMR评估',\n        value: '3'\n    },\n    {\n        label: '防暑降温评估',\n        value: '4'\n    },\n    {\n        label: '牛舍评估',\n        value: '5'\n    },\n    {\n        label: '奶厅评估',\n        value: '6'\n    }\n];\n    \nconst RanchType: any = {\n    ald: '阿拉钉牧场',\n    society: '社会牧场'\n};\nconst ViewCowshed: React.FC = (props: any) => {\n    const { ranchType } = props.match.params;\n    const TitleText: string = `${RanchType[ranchType]}-牛舍巡棚`;\n    const [taskForm, setTaskForm] = React.useState<TaskForm>({\n        type: '',\n        cowshedNumber: '',\n        people: '',\n        mark: ''\n    });\n    const [date, setDate] = React.useState<any>(\n        DateTime.local()\n    );\n    const classes = useStyles();\n    const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTaskForm({...taskForm, [name]: event.target.value});\n    };\n    const handleDateChange = (date: any) => setDate(date);\n\n    return (\n        <div>\n            <AppBar title={TitleText} />\n            <Container className={classes.root}>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: <InputAdornment className={classes.inputAdornment} position=\"start\">任务类型:</InputAdornment>,\n                        }}\n                        onChange={handleChange('type')}\n                        value={taskForm.type}\n                    >\n                        {TypeList.map(option => (\n                            <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"巡棚日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={date}\n                            onChange={handleDateChange}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <Box>\n                    <FormControl margin=\"dense\" fullWidth>\n                        <Input\n                            onChange={handleChange('cowshedNumber')}\n                            value={taskForm.cowshedNumber}\n                            placeholder=\"请输入牛舍号\"\n                            startAdornment={<InputAdornment className={classes.inputAdornment} position=\"start\">巡视点:</InputAdornment>}\n                            endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                        />\n                    </FormControl>\n                    <FormControl margin=\"dense\" fullWidth>\n                        <Input\n                            onChange={handleChange('people')}\n                            value={taskForm.people}\n                            placeholder=\"请输入责任人姓名\"\n                            startAdornment={<InputAdornment className={classes.inputAdornment} position=\"start\">责任人:</InputAdornment>}\n                        />\n                    </FormControl>\n                    <Grid container>\n                        <Grid item xs>\n                            <TextField\n                                onChange={handleChange('mark')}\n                                value={taskForm.mark}\n                                id=\"outlined-textarea\"\n                                label=\"巡视点，问题描述\"\n                                multiline\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={2} className={classes.flexbox}>\n                            <IconButton>\n                                <AddAPhotoIcon color=\"primary\" />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box className={classes.flexbox}>\n                    <IconButton>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box>\n                <Box className={classes.btnContainer}>\n                    <FormControlLabel\n                        className={classes.btnContainer}\n                        control={\n                            <Checkbox\n                                // className={classes.btnContainer}\n                                // checked={state.checkedB}\n                                onChange={handleChange('checkedB')}\n                                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                                value=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        classes={{label: classes.btnContainer}}\n                        label=\"是否生成阿拉钉事件\"\n                    />\n                    <ButtonGroup\n                        className={classes.btnMargin}\n                        fullWidth\n                        size=\"medium\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        aria-label=\"Full width outlined button group\"\n                    >\n                        <Button>\n                            提交\n                        </Button>\n                    </ButtonGroup>\n                </Box>\n            </Container>\n        </div>\n    )\n}\nexport default ViewCowshed","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Box,\n    Paper\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport clsx from 'clsx';\nimport AppBar from '@/components/app-bar';\n\ninterface SceneReportListItem {\n    name: string;\n    date: string;\n    type: string;\n    id: string | number;\n}\nconst createData = (name: string, date: string, type: string, id: string | number) => {\n    return { name, date, type, id }\n}\nconst SceneReportList: SceneReportListItem[] = [\n    createData('风清扬', '2019-03-10', '乳头评分', 1),\n    createData('任我行', '2019-03-10', '行走评分', 2),\n    createData('风清扬', '2019-03-10', '巡棚评分', 3),\n    createData('任我行', '2019-03-10', '体况评分', 4)\n];\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 48\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}))\nconst SceneReport: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-清单\" />\n            <Paper square>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.tableHeader} align=\"center\">人员</TableCell>\n                            <TableCell className={classes.tableHeader} align=\"center\">日期</TableCell>\n                            <TableCell className={classes.tableHeader} align=\"center\">类型</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {SceneReportList.map(SceneReportListItem => (\n                            <TableRow key={SceneReportListItem.id} onClick={() => props.history.push(`/sceneReportDetail/${SceneReportListItem.id}`)}>\n                                <TableCell align=\"center\">{SceneReportListItem.name}</TableCell>\n                                <TableCell align=\"center\">{SceneReportListItem.date}</TableCell>\n                                <TableCell align=\"center\">{SceneReportListItem.type}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Box>\n    )\n};\nexport default SceneReport;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, Grid, ButtonBase, Container, Link } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        // height: '100vh',\n        paddingTop: 50,\n        paddingBottom: 50,\n        overflowY: 'auto',\n        boxSizing: 'border-box'\n    },\n    paper: {\n        margin: \"0 4vw\",\n        borderRadius: 5,\n        marginTop: 15,\n        padding: '10px 0',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    infoItem: {\n        fontSize: 14,\n        lineHeight: 1.5,\n        color: '#111'\n    },\n    spanLeft: {\n        width: 70\n    }\n});\nconst CowList = [\n    '007',\n    '008',\n    '007',\n    '008',\n    '007',\n    '008',\n    '007',\n    '008',\n    '007',\n    '008',\n];\nconst SearchCow: React.FC = props => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"查找牛只\" />\n            {\n                CowList.map((item, i) => (\n                    <Link component={RouteLink} to={`/cowDetail/${i}`}  key={`cow-item-${i}`}>\n                        <Paper className={classes.paper} square>\n                            <Grid container>\n                                <Grid item xs={3} container justify=\"center\" alignItems=\"center\">\n                                    <Container>\n                                        <ButtonBase>\n                                            <img className={classes.img} alt=\"complex\" src={require('../../assets/images/default.jpg')} />\n                                        </ButtonBase>\n                                    </Container>\n                                </Grid>\n                                <Grid item xs>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>牛号:</span>\n                                        <span>{`${item}-${i}`}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>所属牛舎:</span>\n                                        <span>007#</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>类型:</span>\n                                        <span>干奶牛</span>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Link>\n                ))\n            }\n        </Box>\n    )\n}\nexport default SearchCow;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Container,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Typography,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        marginTop: 58\n    },\n    heading: {\n        fontSize: 14,\n        flexBasis: '45%',\n        flexShrink: 0,\n    },\n    infoItem: {\n        padding: '5px 0'\n    },\n    lastExpan: {\n        margin: '16px -16px!important',\n    },\n    lastDetail: {\n        overflowX: 'scroll',\n        paddingLeft: 0\n    },\n    tableCell: {\n        paddingRight: 10\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\nconst createData = (label: string, value: string | number) => ({ label, value });\nconst CowInfo = [\n    createData('牛号', 3080),\n    createData('牛区', 11),\n    createData('离场日期', ''),\n    createData('生日', '2013-06-07'),\n    createData('胎次', 5),\n    createData('胎次组', 3),\n    createData('母牛号', 30),\n    createData('父牛号', 380)\n];\nfunction createEventData(eventname: string, date: string, days: number, count: number, freeze: string, mark: string) {\n    return { eventname, date, days, count, freeze, mark };\n  }\n  \nconst eventData = [\n    createEventData('转群1转群1转群1转群1', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群2', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群3', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群4', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群5', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群6', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群7', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群8', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群9', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群10', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n];\nconst CowDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const TitleText = `牛头详情-${props.match.params.id}号`;\n\n    const [expanded, setExpanded] = React.useState<string | false>('panel1');\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title={TitleText} />\n            <Container>\n                <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息一</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息二</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只信息三</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}  className={expanded === 'panel4' ? classes.lastExpan : ''}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>事件信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={expanded === 'panel4' ? classes.lastDetail : ''}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>事件</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>日期</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>天数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>本胎发生的次数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>冻精</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>备注</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {eventData.map(row => (\n                                <TableRow key={row.eventname}>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.eventname}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.date}</TableCell>\n                                    <TableCell className={classes.tableCell}>{row.days}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '50px'}}>\n                                            {row.count}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.freeze}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.mark}\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Container>\n        </Box>\n    )\n}\nexport default CowDetail;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport AppBar from '@/components/app-bar';\nimport {\n    Box,\n    Container\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 48\n    }\n});\n\nconst SceneReportDetail: React.FC<RouteComponentProps<{id: string;}>> = props => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-明细\" />\n            <Container>\n                <h5>现场报告-明细, id:{props.match.params.id}</h5>\n            </Container>\n        </Box>\n    )\n};\nexport default SceneReportDetail;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    contantContainer: {\n        marginTop: 50\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport { map } from 'rxjs/operators';\nimport {\n    Box,\n    ButtonGroup,\n    Button,\n    CircularProgress,\n    Container,\n    FormControl,\n    RadioGroup,\n    FormControlLabel,\n    Radio\n} from '@material-ui/core';\nimport {\n    fetchUsersList$\n} from '@/api';\nimport useStyles from './styles';\n\ninterface Type {\n    [index: string]: string;\n}\n\nconst Type: Type = {\n    0: '选择评估人',\n    1: '选择牛只',\n    2: '选择牛舍'\n};\nconst FetchFunc = [fetchUsersList$];\nconst mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\n    const { type } = ownProps.match.params;\n    return {\n        saveReviewDetail(info: object) {\n            return dispatch({ type: 'SAVE_REVIEW_DETAIL', payload: info})\n        }\n    }\n}\nconst CommonSelectList: React.FC = (props: any) => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    const [itemValue, setItemValue] = useState(props.value);\n    const [next, setNext] = React.useState(null);\n    const [list, setList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [searchValue, setSearchValue] = useState('');\n    const { type } = props.match.params;\n    const Label = Type[type];\n\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    const handleSelectItem = (e: any) => {\n        setItemValue(e.target.value);\n    };\n    const handleConfirm = () => {\n        if(!itemValue) return;\n        const item: any = list.find((item: any) => item.id === itemValue);\n        props.saveReviewDetail({\n            assesser: {\n                label: item && item.username,\n                value: itemValue\n            }\n        });\n        props.history.goBack();\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const fetchFunc = FetchFunc[type];\n        const Params: any = {\n            page,\n            page_size: 5\n        };\n        if(searchValue) {\n            Params.search = searchValue;\n        }\n        const ApiInst = fetchFunc(Params).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next]),\n            map(([results, next]) => [results.map((item: any) => ({...item, id: String(item.id)})), next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setList(list.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return  () => ApiInst.unsubscribe();\n    }, [page, searchValue]);\n    return (\n        <Box>\n            <AppBar\n                title={Label}\n                // useSearch\n                // searchPlaceholder=\"请输入要搜索的内容\"\n                // getSearchValue={setSearchValue}\n            />\n            <Container className={classes.contantContainer} >\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        aria-label=\"position\"\n                        name=\"position\"\n                        value={itemValue}\n                        onChange={handleSelectItem}\n                    >\n                        {\n                            list.map((item: any) => (\n                                <FormControlLabel\n                                    key={item.id}\n                                    value={item.id}\n                                    control={<Radio color=\"primary\" />}\n                                    label={item.username}\n                                    labelPlacement=\"end\"\n                                />\n                            ))\n                        }\n                    </RadioGroup>\n                </FormControl>\n            </Container>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n            <Box position=\"fixed\" left={15} right={15} bottom={15}>\n                <ButtonGroup\n                    fullWidth\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"选择一项\"\n                    onClick={() => handleConfirm()}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonSelectList);","import React, { useState } from 'react';\nimport {\n    Container,\n    IconButton,\n    Box,\n    Paper,\n    Grid,\n    FormControl,\n    InputLabel,\n    InputAdornment,\n    Input\n} from '@material-ui/core';\nimport {\n    Settings as SettingsIcon,\n    Done as DoneIcon,\n    PermIdentity,\n    Assignment,\n    NearMe,\n    Smartphone\n} from '@material-ui/icons';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 60\n    },\n    label: {\n        fontSize: 12,\n        color: '#111'\n    },\n    flexbox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    paper: {\n        marginTop: 20\n    },\n    infoContent: {\n        fontSize: 14,\n        padding: '10px 10px 10px 0'\n    },\n    input: {\n        padding: '10px 0'\n    },\n    formControl: {\n        marginTop: '20px!important'\n    }\n});\n\nconst editInfoArr: editInfoArrItem[] = [\n    {\n        label: '个性介绍',\n        icon: <PermIdentity color=\"primary\" />,\n        key: 'userDesc'\n    },\n    {\n        label: '公司名称',\n        icon: <Assignment color=\"primary\" />,\n        key: 'companyName'\n    },\n    {\n        label: '公司地址',\n        icon: <NearMe color=\"primary\" />,\n        key: 'companyAddress'\n    },\n    {\n        label: '联系方式',\n        icon: <Smartphone color=\"primary\" />,\n        key: 'mobileNumber'\n    }\n];\ninterface State {\n    userDesc: string;\n    companyName: string;\n    companyAddress: string;\n    mobileNumber: string;\n}\ninterface editInfoArrItem {\n    label: string;\n    icon: JSX.Element;\n    key: keyof State;\n}\nconst User: React.FC = props => {\n    const [editState, setEditState] = useState(false);\n    const classes = useStyles();\n    const [editInfo, setEditInfo] = useState<State>({\n        userDesc: '清风雨露一相逢便胜却人间无数',\n        companyName: '阿拉钉科技有限公司',\n        companyAddress: '北京市海淀区某某路',\n        mobileNumber: '18888888888'\n    });\n    const handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEditInfo({...editInfo, [name]: event.target.value})\n    }\n    return (\n        <Container className={classes.root}>\n            <AppBar\n                title=\"个人信息\"\n                endAdorment={\n                    (<IconButton onClick={() => setEditState(!editState)} className=\"text-white\">\n                        <Choose>\n                            <When condition={editState}>\n                                <DoneIcon />\n                            </When>\n                            <Otherwise>\n                                <SettingsIcon />\n                            </Otherwise>\n                        </Choose>\n                    </IconButton>)\n                }\n            />\n            <Box>\n                {\n                    editInfoArr.map((item: editInfoArrItem) => (\n                        <Choose>\n                            <When condition={!editState}>\n                                <Paper className={classes.paper} key={item.key}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={2} className={classes.flexbox}>\n                                            <IconButton>\n                                                {item.icon}\n                                            </IconButton>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Box className={classes.label}>\n                                                {item.label}\n                                            </Box>\n                                            <Box className={classes.infoContent}>\n                                                {editInfo[item.key]}\n                                            </Box>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </When>\n                            <Otherwise>\n                                <FormControl fullWidth margin=\"dense\" key={item.key} className={classes.formControl}>\n                                    <InputLabel\n                                        htmlFor={item.key}\n                                    >\n                                        {item.label}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"input-with-icon-adornment\"\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                {item.icon}\n                                            </InputAdornment>\n                                        }\n                                        multiline\n                                        className={classes.formControl}\n                                        value={editInfo[item.key]}\n                                        onChange={handleChange(item.key)}\n                                    />\n                                </FormControl>\n                            </Otherwise>\n                        </Choose>\n                    ))\n                }\n            </Box>\n        </Container>\n    )\n};\nexport default User;","import React, { useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst rootElement: any = document.getElementById('root');\n\nconst ScrollToTop: React.FC<RouteComponentProps> = (props: any) => {\n\n    useEffect(() => {\n      rootElement.scrollTo(0, 0);\n    }, [props.location.pathname]);\n  \n    return props.children;\n};\n  \nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./assets/styles/index.scss\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00c6a0',\n            contrastText: '#fff'\n        },\n        secondary: { main: '#11cb5f' },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport withLayout from \"./components/layout\";\nimport Login from './views/login';\nimport Register from './views/register';\nimport SelectRanch from './views/select-ranch';\nimport Home from './views/home';\nimport Tasks from './views/tasks';\nimport TasksDetail from './views/tasks-detail';\nimport Reports from './views/reports';\nimport ManageList from './views/manage-listing';\nimport ReviewDetail from './views/review-detail';\nimport ViewCowshed from './views/view-cowshed';\nimport SceneReport from './views/scene-report';\nimport SearchCow from './views/search-cow';\nimport CowDetail from './views/cow-detail';\nimport SceneReportDetail from './views/scene-report-detail';\nimport CommonSelectList from '@/views/common-select-list';\nimport User from './views/user';\nimport ScrollToTop from './components/scroll-to-top';\n\nexport default () => {\n    return (\n        <HashRouter>\n            <ScrollToTop>\n                {/* 登录注册 */}\n                <Route path=\"/login\" component={Login} />   \n                <Route path=\"/register\" component={Register} />\n\n                {/* 选择牧场 */}\n                <Route path=\"/selectRanch\" component={SelectRanch} />  \n\n                {/* 首页以及首页的几个入口 */}\n                <Route path={[\"/\", \"/home\", \"/index\"]} exact component={withLayout(Home)} />\n                <Route path=\"/manageList/:type\" component={ManageList} />\n                <Route path=\"/sceneReport\" component={SceneReport} /> \n                <Route path=\"/SceneReportDetail/:id\" component={SceneReportDetail} /> \n\n                {/* 底部导航栏入口 */}\n                <Route path=\"/tasks\" component={withLayout(Tasks)} />   \n                <Route path=\"/reports\" component={withLayout(Reports)} />\n                <Route path=\"/search\" component={withLayout(SearchCow)} />\n                <Route path=\"/cowDetail/:id\" component={withLayout(CowDetail)} />\n\n                <Route path=\"/reviewDetail/:ranchType/:reviewType\" component={ReviewDetail} />\n                <Route path=\"/viewCowshed/:ranchType\" component={ViewCowshed} />\n                <Route path=\"/tasksDetail/:id\" component={TasksDetail} />\n                {/* 用户信息入口 */}\n                <Route path=\"/user\" component={User} /> \n                {/* 选择用户，选择牛只，选择牛舍 */}\n                <Route path=\"/commonSelectList/:type\" component={CommonSelectList} />\n            </ScrollToTop>\n        </HashRouter>\n    );\n};\n"],"sourceRoot":""}