{"version":3,"sources":["views/manage-listing/image/default.jpg","assets/images/default.jpg","views/review-detail/default.png","views/scene-report-detail/a.pdf","views/review-detail/redux/reducers/index.ts","config/index.ts","redux/modules/user/reducers.ts","redux/modules/task-detail2/reducers.ts","redux/reducers.ts","redux/modules/user/actionTypes.ts","redux/modules/message/reducers.ts","redux/modules/message/actionTypes.ts","redux/store.ts","views/review-detail/redux/actionTypes.ts","components/layout/index.tsx","redux/modules/message/actions.ts","api/base.ts","redux/modules/user/actions.ts","api/index.ts","views/login/styles.ts","components/button/index.tsx","hooks/useMessage.tsx","views/login/index.tsx","views/register/styles.ts","views/register/index.tsx","components/search/index.tsx","views/select-ranch/styles.ts","views/select-ranch/index.tsx","views/home/header/_styles.ts","views/home/header/index.tsx","views/home/entrance/_styles.ts","views/home/entrance/index.tsx","views/home/report/_chartbox.tsx","views/home/report/_styles.ts","views/home/report/_mock.ts","views/home/report/index.tsx","views/home/index.tsx","components/app-bar/styles.ts","components/app-bar/index.tsx","views/tasks/components/tabs/styles.ts","views/tasks/components/tabs/index.tsx","views/tasks/components/tab-panel/index.tsx","views/tasks/components/item/styles.ts","views/tasks/components/item/index.tsx","views/tasks/components/not-3-item/styles.ts","views/tasks/components/not-3-item/index.tsx","views/tasks/styles.ts","components/click-load-more/index.tsx","views/tasks/index.tsx","views/tasks-detail/styles.ts","components/done-state/index.tsx","views/tasks-detail/components/detail.tsx","views/tasks-detail/index.tsx","views/reports/_mock.ts","views/reports/index.tsx","views/manage-listing/index.tsx","components/required/index.tsx","views/review-detail/config.ts","components/textarea-upload-img/index.tsx","views/review-detail/styles.ts","views/review-detail/redux/actions.ts","views/review-detail/index.tsx","views/view-cowshed/styles.ts","views/view-cowshed/index.tsx","views/scene-report/styles.ts","views/scene-report/index.tsx","views/search-cow/styles.ts","views/search-cow/index.tsx","components/divider/index.tsx","views/cow-detail/styles.ts","views/cow-detail/index.tsx","views/scene-report-detail/styles.ts","views/scene-report-detail/index.tsx","views/common-select-list/styles.ts","views/common-select-list/index.tsx","views/user/index.tsx","views/task-detail2/styles.ts","hooks/useUpload.tsx","views/task-detail2/index.tsx","components/scroll-to-top/index.tsx","serviceWorker.ts","components/message/index.tsx","index.tsx","App.tsx"],"names":["module","exports","__webpack_require__","p","defaultState","assesser","label","value","assessDate","DateTime","local","assessDate2","plus","day","type","sub_type","note","photo","cow","cowshed","lf","lb","rf","rb","cowType","results","add_event","ROUTE_HOME_PATH","baseUrl","getUserLocal","JSON","parse","localStorage","getItem","setUserLocal","data","arguments","length","undefined","setItem","stringify","Object","objectSpread","token","loginStatus","farmCode","farmName","initState","redux_reducers","User","state","action","payload","Message","variant","open","message","TaskDetail2","result","setTimeout","removeItem","rootReducers","combineReducers","GlobalStore","reviewDetailStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","layout","bottomNav","position","width","bottom","zIndex","boxShadow","Component","props","classes","location","history","includes","pathname","react_default","a","createElement","className","BottomNavigation","onChange","e","push","showLabels","BottomNavigationAction","icon","esm_Home","Description","TrendingUp","esm_Search","showMessage","closeMessage","dispatchMessage","store","dispatch","dispatchToLogin","href","concat","origin","handleError","error","console","log","status","throwError","base","url","params","options","formaturl","initUrl","headers","_getUserLocal","globalState","getState","useToken","EMPTY","AUTHORIZATION","useFarmCode","useId","id","overrideUrl","entries","map","item","join","ajax","get","pipe","catchError","_getUserLocal2","useJSON","overrideHeaders","post","_getUserLocal3","put","uploadImgs$","uploadFiles$","fetchCalfsList$","postAssessTeats$","postAssessLocomotions$","postAssessBcss$","postAssessFaecess$","loginTitle","fontSize","marginTop","loginSubTitle","color","formContainer","margin","codeBtn","minWidth","marginBottom","textField","register","Button","ButtonGroup","onClick","fullWidth","size","aria-label","Button_Button","loading","CircularProgress","style","marginRight","key","loadingTxt","btnText","useMessage","useDispatch","descriptor","username","validator","rule","test","Error","password","required","schema","Login","useSelector","_useState","useState","_useState2","slicedToArray","loginInfo","setLoginInfo","_useState3","_useState4","setLoading","_useState5","_useState6","showPassword","setShowPassword","loginIn","LoginIn","handleUserInfoChange","name","defineProperty","target","getToken","code","Container","react_router","to","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","Visibility","VisibilityOff","components_button","apiInst","from","validate","errors","concatMap","method","body","qs","client_id","redirect_uri","response_type","scope","_ref","response","_ref2","subscribe","unsubscribe","Grid","container","xs","Link","component","RouterLink","registerbtn","registerSuccess","textAlign","padding0","padding","descriptorPhoneNumber","phone_number","verify_code","confirm_password","callback","source","company_name","validatorPhoneNumber","Register","RegisterForm","setRegisterForm","hasRegister","setHasRegister","btnDisabledState","setBtnDisabledState","_useState7","_useState8","codeTime","setCodeTime","_useState9","_useState10","btnTxt","setBtnTxt","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","showConfirmPassword","setConfirmShowPassword","handleRegisterFormChange","useEffect","timerId","setInterval","clearInterval","disabled","Params","crossDomain","withCredentials","tap","pluck","success","error_msg","root","display","alignItems","backgroundColor","input","marginLeft","flex","iconButton","Search","setValue","inputRef","useRef","searchOnValueIsEmpty","searchMethod","handleClickSearch","useCallback","current","inputSub","fromEvent","Paper","InputBase","placeholder","inputProps","height","Search_default","title","ranchList","paddingLeft","SelectRanch","page","page_size","search","setParams","_React$useState","React","_React$useState2","otherRanchState","setOtherRanchState","checkALD","setCheckALD","aldRanch","setAldRanch","other","setOtherRanch","aldRanchList","setAldRanchList","selectFarm","SelectFarm","fetchCanUseFarms$","_ref$response","farm_code","farm_name","justify","Switch","checked","components_search","RadioGroup","pipe_default","find_default","propEq_default","ifElse_default","isNil_default","defaultTo_default","prop_default","FormControlLabel","control","Radio","labelPlacement","TextField","helperText","isALD","sessionStorage","theme","UniDairy","palette","primary","main","paddingTop","top","& h4","textWhite","menuItem","header","anchorEl","setAnchorEl","Boolean","Items","Repeat","cb","PermIdentity","PowerSettingsNew","handleClose","event","currentTarget","MoreVert","Menu","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","homeContainer","overflowY","background","homeContent","paddingBottom","borderTopLeftRadius","borderTopRightRadius","homeContentIcon","searchContainer","Entrance","searchLoading","setSearchLoading","eartag","count","_data$results$","_chartbox","Box","border","borderRadius","borderColor","children","chartTitle","chartContainer","SevenDayOpt","text","textStyle","trigger","axisPointer","legend","grid","left","right","containLabel","xAxis","yAxis","series","stack","report","borderTop","RouteLink","NavigateNext","flexWrap","overflow","echarts_for_react_lib_default","Home","query","String","entrance","assign","contrastText","fontWeight","inputBox","withRouter","getSearchValue","square","beforeRouteLeave","goBack","ArrowBackIos","useSearch","autoFocus","autofocus","searchPlaceholder","endAdorment","MTabs","tabList","Tabs","indicatorColor","textColor","centered","Tab","TabPanel","index","objectWithoutProperties","hidden","img","maxWidth","detailBtn","float","paper","Item","run_date","todotask_name","tasker_name","content","attachment","clsx","paddingX","alt","src","require","direction","paddingRight","Typography","gutterBottom","download","AttachFile","Not3Item","workflow_type_name","drafttype","event_date","activity_done_day","done_count","totalcount","pageContainer","minHeight","boxSizing","minHeight100","circularProgressba","circularProgress","ClickLoadMore","loadMore","hasMore","justifyContent","FirstFetchData","0","1","2","3","CachePageMap","Tasks","useTheme","listMap","setListMap","pageMap","setPageMap","nextMap","setNextMap","tabValue","setTabValue","toTaskDetail","PageNum","keys","forEach","ApiInstSub","finalOpera","_data","listMapItem","nextMapItem","hasData","next","_ref3","list","toNowDate","dayjs","diff","finalize","getTask3List","usage_id","_ref4","Array","isArray","getTaskNot3List","app_bar","tabs","newValue","react_swipeable_views_lib_default","axis","onChangeIndex","dir","i","done_status_label","done_status","toTaskDetail2","tablecell","table","tableHeader","green","dark","info","warning","amber","transition","transform","opacity","DoneState","done_state_label","done_state","BgColor","DetailMap","activity_task","drug_name","pen_name","rem","technician","DetailFields","lineHeight","donestate","Detail","doneStateShow","setDoneStateShow","setOpen","detail","timeId","clearTimeout","Zoom","in","Modal","aria-labelledby","aria-describedby","Divider_Divider","components_done_state","TasksDetail","setNext","List","setList","setPage","activeData","setActiveData","handleClick","actRet","ApiInst","DoneStateLabel","ret","_i","_Object$entries","Table","TableHead","TableRow","TableCell","align","TableBody","row","hover","views_reports","flexGrow","reviewListContainer","media","RouteParamsType","ald","society","manage_listing","reviewList","RanchType","match","Card","CardActionArea","CardMedia","image","CardActions","Required","flexbox","deleteIcon","TextAreaAndUploadImg","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","photoFormat","file","preview","URL","createObjectURL","saveReviewDetail","getRootProps","getInputProps","textAreaRequired","labelText","multiline","uploadImgRequire","AddAPhoto","spacing","photoClone","remove_default","revokeObjectURL","deleteImg","Delete","& p","inputAdornment","btnMargin","btnContainer","defaultImg","& img","CowType","Teats","BCS","Results","ReviewType","CowBreastPosition","validateReviewType","formatReviewType","cow_id","assess_time","cow_type","locomotion_score","bcs","fs","pen","saveContent","addContent","clearState","connect","postLoading","setPostLoading","_React$useState3","_React$useState4","defaultImgShow","setDefaultImgShow","_props$match$params","ranchType","reviewType","isCowNo","isTK","LabelText","ResultsList","handleSubmit","OperaFuncMap","retData","postAssessTeatsInst","formdata","FormData","imgFile","append","upload_imgs","handleUploadImgs","toString","OperaFunc","viewer","Image","Viewer","toolbar","navbar","destroy","show","Fragment","EventNote","onFocus","startAdornment","material_ui_pickers_esm","utils","LuxonUtils","locale","format","date","okLabel","cancelLabel","textarea_upload_img","uploadImgRequired","select","InputProps","Checkbox","CheckBoxOutlineBlank","checkedIcon","CheckBox","inputAdornment2","actions","TypeList","setTypeList","SubTypeList","setSubTypeList","TitleText","tasker","start_time","activeTypeItem","find","sub_tasktypes","fetchTodoTaskTypes$","err","task_name_lang","shouldDisableDate","toMillis","SceneReport","_React$useState5","_React$useState6","_React$useState7","_React$useState8","tableHeaderCls","getOnsiteAssessments$","listItem","encodeURIComponent","pdf","assessr_name","assess_date","assesstype_name","infoItem","spanLeft","SearchCow","fromMore","_React$useState9","_React$useState10","paramsClone","ButtonBase","cbrd","Divider","heading","flexBasis","flexShrink","lastExpan","lastDetail","overflowX","tableCell","createData","CowInfo","createEventData","eventname","days","freeze","mark","eventData","CowDetail","setData","expanded","setExpanded","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","divider","SceneReportDetail","canvasEl","_usePdf","usePdf","_usePdf2","ref","contentContainer","Type","user","FetchFunc","ownProps","itemValue","setItemValue","Label","LabelMap","handleConfirm","infoContent","formControl","editInfoArr","Assignment","NearMe","Smartphone","editState","setEditState","userDesc","companyName","companyAddress","mobileNumber","editInfo","setEditInfo","Done","Settings","doneState","donePhoto","commonUpload","keyWord","files","of","Api$","imgs","formData","gallery","detailInfo","done_date","done_content","done_attachment","done_photos","doneForm","setDoneForm","setPhoto","setFiles","viewImage","setViewImage","handleViewImage","apiSub","uploadImgsObser","uploadFileObser","clone_default","zip","mergeMap","val","formatParam","propName","join_default","_val$filter","filter","_val$filter2","toISODate","todotaskruns$","elements","document","getElementById","prop","split","clearable","clearLabel","dist_es","CloudUpload","InsertDriveFile","rootElement","scrollTo","hostname","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","useStyles1","iconVariant","MySnackbarContentWrapper","Icon","SnackbarContent","Close","useStyles2","_useSelector","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","createMuiTheme","secondary","ReactDOM","render","es","ThemeProvider","react_router_dom","scroll_to_top","path","exact","withLayout","ManageList","Reports","ReviewDetail","ViewCowshed","CommonSelectList","components_message","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fb1feec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.ef8c193e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.aadf2c3d.png\";","module.exports = __webpack_public_path__ + \"static/media/a.684dfab2.pdf\";","\nimport { DateTime } from 'luxon';\nimport {\n    SAVE_REVIEW_DETAIL,\n    // SAVE_CONTENT,\n    // ADD_CONTENT,\n    CLEAR_STATE\n} from '../actionTypes';\n\n// const initState = {\n//     // 责任人、评估人\n//     assesser: {\n//         label: '',\n//         value: ''\n//     },\n//     assessDate: DateTime.local(),\n//     type: '', // 牛舍巡棚-任务类型\n//     sub_type: '', // 牛舍巡棚-任务子类型\n//     content: [\n//         {\n//             // 业务备注\n//             note: '',\n//             // 上传图片\n//             photo: [],\n//             // 牛只\n//             cow: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 牛舍\n//             cowshed: {\n//                 label: '',\n//                 value: ''\n//             },\n//             // 乳头评估\n//             lf: '',\n//             lb: '',\n//             rf: '',\n//             rb: '',\n//             // 牛类型\n//             cowType: '',\n//             // 行走，粪便评估\n//             results: '',\n//             // 体况评估\n//             locomotionScore: '',\n//         }\n//     ],\n//     add_event: true\n// };\nconst defaultState = () => ({\n        // 责任人、评估人\n    assesser: {\n        label: '',\n        value: ''\n    },\n    assessDate: DateTime.local(),\n    assessDate2: DateTime.local().plus({\n        day: 1\n    }),\n    type: '', // 牛舍巡棚-任务类型\n    sub_type: '', // 牛舍巡棚-任务子类型\n    // 业务备注\n    note: '',\n    // 上传图片\n    photo: [],\n    // 牛只\n    cow: {\n        label: '',\n        value: ''\n    },\n    // 牛舍\n    cowshed: {\n        label: '',\n        value: ''\n    },\n    // 乳头评估\n    lf: '',\n    lb: '',\n    rf: '',\n    rb: '',\n    // 牛类型\n    cowType: '',\n    results: '',\n    add_event: true\n});\n\nexport default function (state = defaultState(), action: any) {\n    switch (action.type) {\n        // case SAVE_CONTENT: {\n        //     const { index } = action.payload;\n        //     const contentClone = R.clone(state.content);\n        //     delete action.payload.index;\n        //     const retData = {\n        //         ...contentClone[index],\n        //         ...action.payload\n        //     };\n        //     contentClone.splice(index, 1, retData);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        // case ADD_CONTENT: {\n        //     const contentItem = {\n        //         // 业务备注\n        //         note: '',\n        //         // 上传图片\n        //         photo: [],\n        //         // 牛只\n        //         cow: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 牛舍\n        //         cowshed: {\n        //             label: '',\n        //             value: ''\n        //         },\n        //         // 乳头评估\n        //         lf: '',\n        //         lb: '',\n        //         rf: '',\n        //         rb: '',\n        //         // 牛类型\n        //         cowType: '',\n        //         // 行走，粪便评估\n        //         results: '',\n        //         // 体况评估\n        //         locomotionScore: '',\n        //     };\n        //     const contentClone = R.clone(state.content);\n        //     contentClone.push(contentItem);\n        //     return {\n        //         ...state,\n        //         content: contentClone\n        //     }\n        // }\n        case SAVE_REVIEW_DETAIL: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        case CLEAR_STATE: {\n            // state.content.forEach(contentItem => {\n            //     contentItem.photo.forEach((item: any) => {\n            //         URL.revokeObjectURL(item.preview);\n            //     })\n            // });\n            return defaultState();\n        }\n        default:\n            return state\n    }\n};","/*\n * @Description: \n * @Author: GuoQin\n * @Date: 2019-08-14 10:02:55\n * @LastEditors: GuoQin\n * @LastEditTime: 2019-10-21 18:37:09\n */\n\n\nexport const ROUTE_HOME_PATH = [\"/\", \"/home\", \"/index\"];\n\n// export enum ROUTE_PATH_MAP {\n//     HOME_PATH\n//     // kk = \"\",\n// }\nexport const baseHost = 'http://139.196.28.170:8811';\n\n// export const baseUrl = `${baseHost}/zh-hans/api/v1/`;\nexport const baseUrl = `/zh-hans/api/v1/`;\n\nexport const getUserLocal = () => JSON.parse(localStorage.getItem('User') || '{}');\n\nexport const setUserLocal = (data: object = {}) => {\n    localStorage.setItem('User', JSON.stringify({...getUserLocal(), ...data}))\n};\n// 周立平-接口地址\nexport const baseHost2 = 'http://118.178.178.8:8088';","/*\n * @Description: \n * @Author: GuoQin\n * @Date: 2019-08-09 18:19:44\n * @LastEditors: GuoQin\n * @LastEditTime: 2019-11-04 11:19:17\n */\nimport {\n    LOGIN_IN,\n    LOGIN_OUT,\n    SELECT_FARM\n} from './actionTypes';\nimport { getUserLocal, setUserLocal } from '@/config';\n\ninterface Action {\n    type: string;\n    payload?: object;\n}\ninterface User {\n    token: string,\n    loginStatus: boolean,\n    farmCode: string;\n    farmName: string;\n}\n\nconst { token = '', loginStatus = false, farmCode = '', farmName = '' }: User = getUserLocal();\nconst defaultState = () => ({ token, loginStatus, farmCode, farmName });\nconst emptyState = () => ({ token: '', loginStatus: false, farmCode: '', farmName: '' });\nexport default function(state: User = defaultState(), action: Action) {\n    const { payload } = action;\n\n    switch(action.type) {\n        case LOGIN_IN: {\n            setUserLocal(payload);\n            return {\n                ...state,\n                ...payload\n            }\n        }\n        case LOGIN_OUT: {\n            setUserLocal(emptyState());\n            return emptyState()\n        }\n        case SELECT_FARM: {\n            setUserLocal(payload);\n            return {\n                ...state,\n                ...payload\n            }\n        }\n        default:\n            return state\n    }\n}\n","const initState = JSON.parse(localStorage.getItem('taskDetail2') || '{}')\n\nexport default function(state = initState, action: Action) {\n    const { payload, type} = action;\n\n    switch (type) {\n        case 'SAVE_TASK_DETAIL2': {\n            const result =  {\n                ...state,\n                ...payload\n            };\n            setTimeout(() => {\n                localStorage.setItem('taskDetail2', JSON.stringify(result));\n            });\n            return result;\n        }\n        case 'CLEAR_TASK_DETAIL2': {\n            setTimeout(() => {\n                localStorage.removeItem('taskDetail2');\n            });\n            return initState\n        }\n        default:\n            return initState;\n    }\n}","import User from './modules/user/reducers';\nimport Message from './modules/message/reducers';\nimport TaskDetail2 from './modules/task-detail2/reducers';\n\nexport default {\n    User,\n    Message,\n    TaskDetail2\n}","export const LOGIN_IN = 'LOGIN_IN';\nexport const LOGIN_OUT = 'LOGIN_OUT';\nexport const SELECT_FARM = 'SELECT_FARM';","import {\n    SHOW_MESSAGE,\n    CLOSE_MESSAGE\n} from './actionTypes';\n\ninterface Action {\n    type: string;\n    payload?: object;\n}\ninterface State {\n    variant: string;\n    open: boolean;\n    message: string;\n}\n\nconst defaultState = () => ({\n    variant: 'error',\n    open: false,\n    message: ''\n});\n\nexport default function(state: State = defaultState(), action: Action) {\n    const { payload } = action;\n    switch (action.type) {\n        case SHOW_MESSAGE: {\n            return {\n                ...state,\n                open: true,\n                ...payload\n            }\n        }\n        case CLOSE_MESSAGE: {\n            return {\n                ...state,\n                open: false\n            }\n        }\n        default:\n            return state\n    }\n}\n","export const SHOW_MESSAGE = 'SHOW_MESSAGE';\nexport const CLOSE_MESSAGE = 'CLOSE_MESSAGE';","import { combineReducers, createStore } from 'redux';\nimport reviewDetailStore from '@/views/review-detail/redux/reducers';\nimport GlobalStore from './reducers';\n\nconst rootReducers = combineReducers({...GlobalStore, reviewDetailStore});\n\nexport default createStore(\n    rootReducers,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);","// 评估人信息\nexport const SAVE_ASSESSER = 'SAVE_ASSESSER';\n// 评估日期\nexport const SAVE_DATE = 'SAVE_DATE';\n// 业务备注\nexport const SAVE_NOTE = 'SAVE_NOTE';\n// 图片信息\nexport const SAVE_IMGS = 'SAVE_IMGS';\n// 牛只信息\nexport const SAVE_COW = 'SAVE_COW';\n// 牛舍信息\nexport const SAVE_COWSHED = 'SAVE_COWSHED';\n// 牛类型\nexport const SAVE_COW_TYPE = 'SAVE_COW_TYPE';\n// 乳头信息\nexport const SAVE_TEATS = 'SAVE_TEATS';\n// 结果信息\nexport const SAVE_RESULTS = 'SAVE_RESULTS';\n// 体况评分结果\nexport const SAVE_LOCOMOTION_SCORE = 'SAVE_LOCOMOTION_SCORE';\n// 评估详情信息\nexport const SAVE_REVIEW_DETAIL = 'SAVE_REVIEW_DETAIL';\n// 修改数组里面某一项值\nexport const SAVE_CONTENT = 'SAVE_CONTENT';\n\n// 修改数组里面某一项值\nexport const ADD_CONTENT = 'ADD_CONTENT';\n\n// 清空数据\nexport const CLEAR_STATE = 'CLEAR_STATE';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    BottomNavigation,\n    BottomNavigationAction\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Home as HomeIcon,\n    Description as DescriptionIcon,\n    TrendingUp as TrendingUpIcon\n} from '@material-ui/icons';\nimport { ROUTE_HOME_PATH } from \"../../config\";\n\nconst useStyles = makeStyles({\n    layout: {\n        // height: '100vh'\n    },\n    bottomNav: {\n        position:'fixed',\n        width: '100%',\n        bottom: 0,\n        zIndex: 10,\n        boxShadow: \"0 -1px 5px 0 rgba(58, 59, 59, 0.5)\"\n    },\n});\n\ninterface IProps {\n    location: {\n        pathname: string;\n    },\n    history: {\n        push: (pathname: string) => void;\n    }\n}\n\nexport default (Component: any) => (props: IProps) => {\n    const classes = useStyles();\n    const { location, history } = props;\n    const value = ROUTE_HOME_PATH.includes(location.pathname) ? ROUTE_HOME_PATH[1] : location.pathname;\n\n    return (\n        <div className={classes.layout}>\n            <Component {...props} />\n\n            <BottomNavigation\n                value={value}\n                onChange={(e, pathname) => history.push(pathname)}\n                className={classes.bottomNav}\n                showLabels\n            >\n                <BottomNavigationAction label=\"主页\" value={ROUTE_HOME_PATH[1]} icon={<HomeIcon />} />\n                <BottomNavigationAction label=\"任务\" value=\"/tasks\" icon={<DescriptionIcon />} />\n                <BottomNavigationAction label=\"报表\" value=\"/reports\" icon={<TrendingUpIcon />} />\n                <BottomNavigationAction label=\"查牛\" value=\"/search\" icon={<SearchIcon />} />\n            </BottomNavigation>\n        </div>\n    )\n};\n","import {\n    SHOW_MESSAGE,\n    CLOSE_MESSAGE\n} from './actionTypes';\n\ninterface ShowMessage {\n    variant: string;\n    message: string;\n}\n\nexport const showMessage = (data: ShowMessage) => ({\n    type: SHOW_MESSAGE,\n    payload: {\n        ...data\n    }\n});\nexport const closeMessage = () => ({\n    type: CLOSE_MESSAGE\n});\n","import { ajax, AjaxResponse } from 'rxjs/ajax';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY, throwError } from 'rxjs';\nimport { baseUrl, getUserLocal } from '@/config';\nimport { showMessage, loginOut } from '@/redux/actions';\nimport store from '@/redux/store';\n\nconst dispatchMessage = (message: string) => store.dispatch(showMessage({ variant: 'error', message}));\nconst dispatchToLogin = () => {\n    store.dispatch(loginOut());\n    window.location.href=`${window.location.origin}/#/login`;\n};\nconst handleError = (error: AjaxResponse) => {\n    console.log('handleError', error);\n    if (error && error.status) {\n        switch (error.status) {\n          case 400:\n            dispatchMessage('参数错误');\n            break\n          case 401:\n            dispatchMessage('未授权，请登录');\n            dispatchToLogin();\n            break\n          case 402:\n            dispatchMessage('登录过期，请重新登录');\n            dispatchToLogin();\n            break\n          case 403: dispatchMessage('拒绝访问'); break\n          case 404: dispatchMessage('请求地址出错'); break\n          case 408: dispatchMessage('请求超时'); break\n          case 500: dispatchMessage('服务器内部错误'); break\n          case 501: dispatchMessage('服务未实现'); break\n          case 502: dispatchMessage('网关错误'); break\n          case 503: dispatchMessage('服务不可用'); break\n          case 504: dispatchMessage('网关超时'); break\n          case 505: dispatchMessage('HTTP版本不受支持'); break\n          default: break\n        }\n    }\n    return throwError(error);\n};\nexport default {\n    get(url: string, params: any, options?: ApiOptions) {\n        let initUrl = `${baseUrl}${url}/`;\n        let headers: ApiHeaders = {};\n        let formaturl: string = '';\n        let { token, farmCode } = getUserLocal();\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.User.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmCode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmCode}/${url}/`;\n        }\n        if(options && options.useId && options.useFarmCode) {\n            const { id } = params;\n            initUrl = `${baseUrl}${farmCode}/${url}/${id}/`;\n            delete params.id;\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmCode });\n        }\n        \n        formaturl = `${initUrl}?${Object.entries(params).map(item => item.join('=')).join('&')}`;\n\n        return ajax.get(formaturl, headers).pipe(\n            catchError(handleError)\n        );\n    },\n    post(url: string, params: any, options?: ApiOptions) {\n        let headers: ApiHeaders = {};\n        let initUrl = `${baseUrl}${url}/`;\n        let { token, farmCode } = getUserLocal();\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.User.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmCode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmCode}/${url}/`\n        }\n        if(options && options.useId) {\n            const { id } = params;\n            initUrl = `${baseUrl}${farmCode}/${url}/${id}/`;\n            delete params.id;\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmCode });\n        }\n        if(options && options.useJSON) {\n            headers['content-type'] = 'application/json';\n        }\n        if(options && options.overrideHeaders) {\n            headers = options.overrideHeaders(headers);\n        }\n        return ajax.post(initUrl, params, headers).pipe(\n            catchError(handleError)\n        );\n    },\n    put(url: string, params: any, options?: ApiOptions) {\n        let headers: ApiHeaders = {};\n        let initUrl = `${baseUrl}${url}/`;\n        let { token, farmCode } = getUserLocal();\n        const globalState = store.getState();\n        \n        if (options && options.useToken) {\n            if (token && globalState.User.token) {\n                headers.AUTHORIZATION = `JWT ${token}`;\n            } else{\n                dispatchToLogin();\n                return EMPTY;\n            }\n        }\n        if(options && options.useFarmCode) {\n            if (!farmCode) {\n                dispatchToLogin();\n                return EMPTY;\n            }\n            initUrl = `${baseUrl}${farmCode}/${url}/`\n        }\n        if(options && options.useId) {\n            const { id } = params;\n            initUrl = `${baseUrl}${farmCode}/${url}/${id}/`;\n            delete params.id;\n        }\n        if(options && options.overrideUrl) {\n            initUrl = options.overrideUrl(baseUrl, url, { farmCode });\n        }\n        if(options && options.useJSON) {\n            headers['content-type'] = 'application/json';\n        }\n        if(options && options.overrideHeaders) {\n            headers = options.overrideHeaders(headers);\n        }\n        return ajax.put(initUrl, params, headers).pipe(\n            catchError(handleError)\n        );\n    },\n}","/*\n * @Description: \n * @Author: GuoQin\n * @Date: 2019-08-09 16:41:50\n * @LastEditors: GuoQin\n * @LastEditTime: 2019-11-03 16:18:03\n */\nimport {\n    LOGIN_IN,\n    LOGIN_OUT,\n    SELECT_FARM\n} from './actionTypes';\n\ninterface LoginIn {\n    token: string;\n    loginStatus: boolean;\n}\n\nexport const loginIn = (data: LoginIn): Action => ({\n    type: LOGIN_IN,\n    payload: {\n        ...data\n    }\n});\nexport const loginOut = (): Action => ({\n    type: LOGIN_OUT\n});\nexport const selectFarm = (data: FarmInfo): Action => ({\n    type: SELECT_FARM,\n    payload: {\n        ...data\n    }\n});\n","import base from './base';\n\n// 使用code发送给接口端\nexport const loginIn$ = (params: object) => base.post('aladinauth', params, { useToken: false });\n\nexport const fetchCanUseFarms$ = (params: object) => base.get('farms', params, { useToken: true });\n// 上传图片\nexport const uploadImgs$ = (params: object) => base.post('imagesupload', params, { useFarmCode: true, useToken: true });\n// 上传附件\nexport const uploadFiles$ = (params: object) => base.post('filesupload', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表\nexport const fetchTodoTaskRuns$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true });\n\n// 任务运行列表单项明细(完工单明细)\nexport const fetchTodoTaskRunsDetail$ = (params: object) => base.get('todotaskruns', params, { useFarmCode: true, useToken: true, useId: true });\n\n// 用户列表\nexport const fetchUsersList$ = (params: object) => base.get('users', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛号列表\nexport const fetchCowlitesList$ = (params: object) => base.get('cowlites', params, { useFarmCode: true, useToken: true });\n\n// 评估模块-牛舎列表\nexport const fetchPensList$ = (params: object) => base.get('pens', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息列表\nexport const fetchCalfsList$ = (params: object) => base.get('cows', params, { useFarmCode: true, useToken: true });\n\n// 犊牛信息详情\nexport const fetchCalfsDetail$ = (params: any) => {\n    const options = {\n        useFarmCode: true,\n        useToken: true,\n        useId: true\n    }\n\n    return base.get('cows', params, options);\n};\n\n// 牛舍巡棚页面\n// 任务类型\nexport const fetchTodoTaskTypes$ = (params: object = {}) => base.get('todotasktypes', params, { useFarmCode: false, useToken: true });\n\n// 乳头评分\nexport const postAssessTeats$ = (params: object | string) => base.post('assessteats', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 行走评分\nexport const postAssessLocomotions$ = (params: object | string) => base.post('assesslocomotions', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 体况评分\nexport const postAssessBcss$ = (params: object | string) => base.post('assessbcss', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 粪便评分\nexport const postAssessFaecess$ = (params: object | string) => base.post('assessfaecess', params, { useToken: true, useFarmCode: true, useJSON: true });\n// 牛舍巡棚\nexport const postMTodoTasks$ = (params: object | string) => base.post('mtodotasks', params, { useToken: true, useFarmCode: true, useJSON: true });\n\n// 现场报告-清单\nexport const getOnsiteAssessments$ = (params: object | string) => base.get('onsiteassessments', params, { useToken: true, useFarmCode: true });\n\n// 流程接口\nexport const getDraftsHz$ = (params: object | string) => base.get('drafts-hz', params, { useToken: true, useFarmCode: true });\n\n// 流程明细\nexport const getDrafts$ = (params: object | string) => base.get('drafts', params, { useToken: true, useFarmCode: true });\n\n// 任务单，修改完工状态\nexport const todotaskruns$ = (params: object | string) => base.put('todotaskruns', params, { useToken: true, useFarmCode: true, useJSON: true, useId: true });\n","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '15vh'\n    },\n    loginSubTitle: {\n        fontSize: '16px',\n        color: '#ccc'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px',\n        marginBottom: 2\n    },\n    textField: {\n        marginTop: '30px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    }\n});\nexport default useStyles;","import React from 'react';\nimport { Button as MButton, CircularProgress, ButtonGroup } from '@material-ui/core';\n\ninterface IProps {\n    loading: boolean;\n    loadingTxt?: string;\n    btnText: string;\n    onClick?: () => void;\n    className?: string | undefined;\n}\n\nconst Button: React.FC<IProps> = props => {\n\n    return (\n        <ButtonGroup\n            onClick={() => props.onClick && props.onClick()}\n            className={props.className}\n            fullWidth\n            size=\"medium\"\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"Full width outlined button group\"\n        >\n            <MButton>\n                <Choose>\n                    <When condition={props.loading}>\n                        <CircularProgress size={18} color=\"secondary\" style={{\n                            marginRight: '10px'\n                        }} />\n                        {\n                            props.loadingTxt || '正在操作中...'\n                        }\n                    </When>\n                    <Otherwise>\n                        {props.btnText}\n                    </Otherwise>\n                </Choose>\n            </MButton>\n        </ButtonGroup>\n    )\n}\nexport default Button;","import { useDispatch } from 'react-redux';\nimport { showMessage } from '@/redux/actions';\n\ninterface Params {\n    variant: string;\n    message: string;\n}\nexport default function useMessage() {\n    const dispatch = useDispatch();\n\n    return function(params: Params): void {\n        dispatch(showMessage(params));\n    }\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\nimport {\n    Container,\n    InputAdornment,\n    Grid,\n    Link,\n    IconButton,\n    FormControl,\n    InputLabel,\n    Input\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { from, throwError } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { loginIn as LoginIn } from '@/redux/actions';\nimport { loginIn$ } from '@/api';\nimport useStyles from './styles';\nimport MButton from '@/components/button';\nimport qs from 'qs';\nimport schema from 'async-validator';\nimport useMessage from '@/hooks/useMessage';\n\ninterface State {\n    password: string;\n    username: string;\n}\ninterface LoginIn {\n    token: string;\n    loginStatus: boolean;\n}\n\nconst descriptor = {\n    username: {\n        validator: (rule: any, value: string) => {\n            if (!value) {\n                return new Error('请输入手机号');\n            }\n            if (!/^1[34578]\\d{9}$/.test(value)) {\n                return new Error('手机号格式有误');\n            }\n            return true;\n        }\n    },\n    password: {\n        required: true,\n        type: 'string',\n        message: '请输入密码'\n    }\n};\nconst validator = new schema(descriptor);\n\nconst Login: React.FC = (props: any) => {\n    const loginStatus = useSelector((state: any) => state.User.loginStatus);\n    const dispatch = useDispatch();\n    const showMessage = useMessage();\n    const [loginInfo, setLoginInfo] = useState<State>({\n        username: '13482545420',\n        password: '123456'\n    });\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n   \n    const loginIn = (data: LoginIn) => dispatch(LoginIn(data));\n    const handleUserInfoChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setLoginInfo({...loginInfo, [name]: e.target.value})\n    };\n    const getCode = () => {\n        return ajax({\n            url: `/mobile/login/`,\n            // url: `${baseHost2}/mobile/login/`,\n            // url: 'http://118.178.178.8:8088/mobile/login/',\n            method: 'post',\n            body: qs.stringify({\n                username: loginInfo.username,\n                password: loginInfo.password,\n                client_id: '611753',\n                redirect_uri: 'http://aladdin.cas.cx',\n                response_type: 'code',\n                scope: 'openid profile email phone address ',\n                state: ''\n            })\n        })\n    }\n    const getToken = (code: string | number) => {\n        return loginIn$({ code })\n    };\n    const loginAuth = () => {\n        setLoading(true);\n        const validatorObser = from(validator.validate(loginInfo, () => {}));\n        const apiInst = validatorObser.pipe(\n            catchError((error: any) => {\n                const message = error.errors.map((item: any) => item.message)[0];\n                showMessage({ variant: 'warning', message });\n                return throwError(error);\n            }),\n            concatMap(() => {\n                return getCode().pipe(\n                    map(({ response }) => response)\n                );\n            }),\n            concatMap(response => {\n                return getToken(response.code).pipe(\n                    map(({ response }) => response)\n                )\n            }),\n            catchError((error: any) => {\n                setLoading(false);\n                return throwError(error);\n            })\n        ).subscribe(\n            data => {\n                loginIn({\n                    token: data.token,\n                    loginStatus: true\n                });\n                apiInst.unsubscribe();\n                dispatch({ type: 'CLOSE_MESSAGE' });\n                props.history.push('/selectRanch');\n            },\n            error => {\n                console.log('error', error);\n                apiInst.unsubscribe();\n            }\n        );\n    };\n\n    return (\n        <Container >\n            <If condition={loginStatus}>\n                <Redirect to=\"/home\" />\n            </If>\n            <h1 className={`${classes.loginTitle} text-center`}>\n                登录UniDairy牧场\n            </h1>\n            <h4 className={`${classes.loginSubTitle}  text-center`}>\n                {/* 请用您的手机号登陆 */}\n                欢迎您使用牧联牧通牧场平台\n            </h4>\n            <div className={classes.formContainer}>\n                <FormControl\n                    fullWidth\n                    className={classes.textField}\n                >\n                    <InputLabel htmlFor=\"adornment-mobile\">手机号</InputLabel>\n                    <Input\n                        id=\"adornment-mobile\"\n                        value={loginInfo.username}\n                        onChange={handleUserInfoChange('username')}\n                    />\n                </FormControl>\n                <FormControl\n                    fullWidth\n                    className={classes.textField}\n                >\n                    <InputLabel htmlFor=\"adornment-password\">密码</InputLabel>\n                    <Input\n                        id=\"adornment-password\"\n                        type={showPassword ? 'text' : 'password'}\n                        value={loginInfo.password}\n                        onChange={handleUserInfoChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => setShowPassword(!showPassword)}\n                                    onMouseDown={e => e.preventDefault()}\n                                >\n                                    <If condition={showPassword}>\n                                        <Visibility color=\"primary\" />\n                                    </If>\n                                    <If condition={!showPassword}>\n                                        <VisibilityOff  />\n                                    </If>\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n \n                <MButton\n                    className={classes.textField}\n                    loading={loading}\n                    loadingTxt=\"登录中\"\n                    onClick={loginAuth}\n                    btnText=\"登录\"\n                />\n            </div>\n            <Grid container className={classes.register}>\n                <Grid item xs={2} >\n                    \n                </Grid>\n                <Grid item xs={6} >\n                    <span>我还没有账号</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <Link component={RouterLink} to=\"/register\"> 我要注册 </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\nexport default Login;","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    loginTitle: {\n        fontSize: '24px',\n        marginTop: '10vh'\n    },\n    formContainer: {\n        width: '85%',\n        margin: '0 auto'\n    },\n    codeBtn: {\n        minWidth: '84px'\n    },\n    textField: {\n        marginTop: '12px'\n    },\n    register: {\n        marginTop: '20px',\n        fontSize: '12px'\n    },\n    registerbtn: {\n        marginTop: 25\n    },\n    registerSuccess: {\n        width: '85%',\n        margin: '15vh auto 0',\n        color: '#999',\n        textAlign: 'center',\n        fontSize: '14px'\n    },\n    padding0: {\n        padding: 0\n    }\n});\n\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n    Container,\n    ButtonGroup,\n    Grid,\n    Link,\n    InputAdornment,\n    Button,\n    InputLabel,\n    Input,\n    FormControl,\n    IconButton\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport qs from 'qs';\nimport useStyles from './styles';\nimport MButton from '@/components/button';\nimport { from, EMPTY, Subscription } from 'rxjs';\nimport { concatMap, catchError, pluck, tap } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax';\nimport useMessage from '@/hooks/useMessage';\nimport schema from 'async-validator';\n\ninterface State {\n    phone_number: string;\n    password: string;\n    confirm_password: string;\n    company_name: string;\n    verify_code: string;\n}\nconst descriptorPhoneNumber = {\n    phone_number: {\n        validator: (rule: any, value: string) => {\n            if (!value) {\n                return new Error('请输入手机号');\n            }\n            if (!/^1[34578]\\d{9}$/.test(value)) {\n                return new Error('手机号格式有误');\n            }\n            return true;\n        }\n    }\n};\nconst descriptor = {\n    ...descriptorPhoneNumber,\n    verify_code: {\n        required: true,\n        type: 'string',\n        message: '请输入验证码'\n    },\n    password: {\n        required: true,\n        type: 'string',\n        message: '请输入密码'\n    },\n    confirm_password(rule: any, value: string, callback: any, source: State) {\n        if (!value) {\n            return new Error('请输入确认密码');\n        }\n        if (value !== source.password) {\n            return new Error('两次密码不一致')\n        }\n        return true;\n    },\n    company_name: {\n        required: true,\n        type: 'string',\n        message: '请输入公司名称'\n    }\n};\nconst validator = new schema(descriptor);\nconst validatorPhoneNumber = new schema(descriptorPhoneNumber);\n\nconst Register: React.FC = (props: any) => {\n    const classes = useStyles();\n    const [RegisterForm, setRegisterForm] = useState<State>({\n        phone_number: '',\n        password: '',\n        confirm_password: '',\n        company_name: '',\n        verify_code: ''\n    });\n    const [hasRegister, setHasRegister] = useState(false);\n    const [btnDisabledState, setBtnDisabledState] = useState(false);\n    const [codeTime, setCodeTime] = useState(30);\n    const [btnTxt, setBtnTxt] = useState('获取验证码');\n    const [loading, setLoading] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n    const showMessage = useMessage();\n\n    const handleGetMobileCode = () => {\n        setBtnDisabledState(true);\n        let apiInst: Subscription;\n        const Params = {\n            method: 'get',\n            url: `/accounts/check_phone_code/${RegisterForm.phone_number}/`,\n            crossDomain: true,\n            withCredentials: true\n        };\n        apiInst = from(\n            validatorPhoneNumber.validate(\n                { phone_number: RegisterForm.phone_number },\n                () => {}\n            )\n        ).pipe(\n            catchError(error => {\n                const message = error.errors[0].message;\n                showMessage({ variant: 'warning', message });\n                setBtnDisabledState(false);\n                return EMPTY;\n            }),\n            concatMap(() => ajax(Params).pipe(tap(data => console.log('data', data))))\n        ).subscribe(\n            () => {\n                apiInst.unsubscribe();\n                showMessage({ variant: 'success', message: '发送成功，请注意查收！'});\n            },\n            error => {\n                console.log('error', error);\n                apiInst.unsubscribe();\n                setBtnDisabledState(false);\n                showMessage({ variant: 'error', message: error});\n            }\n        )\n    };\n    const handleRegisterFormChange = (name: keyof State) => (e: React.ChangeEvent<HTMLInputElement>) => {\n        setRegisterForm({ ...RegisterForm, [name]: e.target.value });\n    }\n    const handleRegister = () => {\n        setLoading(true);\n        const Params = {\n            method: 'post', \n            url: `/mobile/reg/`,\n            crossDomain: true,\n            withCredentials: true,\n            body: qs.stringify(RegisterForm)\n        };\n        const apiInst = from(validator.validate(RegisterForm, () => {})).pipe(\n            catchError(error => {\n                const message = error.errors[0].message;\n                showMessage({ variant: 'warning', message });\n                setLoading(false);\n                return EMPTY;\n            }),\n            concatMap(() => ajax(Params).pipe(pluck('response')))\n        ).subscribe(\n            data => {\n                setLoading(false);\n                apiInst.unsubscribe();\n                if (data.success) {\n                    showMessage({ variant: 'success', message: '注册成功!' });\n                    setHasRegister(true)\n                } else {\n                    showMessage({ variant: 'error', message: data.error_msg });\n                }\n            },\n            error => {\n                apiInst.unsubscribe();\n                setLoading(false);\n                showMessage({ variant: 'error', message: error});\n            }\n        );\n    }\n\n    useEffect(() => {\n        let timerId: any;\n        if (btnDisabledState) {\n            setBtnTxt(`${codeTime}s`);\n            timerId = setInterval(() => {\n                clearInterval(timerId);\n                if (codeTime !== 0) {\n                    setCodeTime(codeTime => codeTime - 1);\n                } else {\n                    setBtnDisabledState(false);\n                    setCodeTime(30);\n                }\n            }, 1000);\n        } else {\n            setBtnTxt('获取验证码');\n        }\n        return () => clearInterval(timerId);\n    }, [btnDisabledState, codeTime]);\n\n    return (\n        <Container >\n            <h1 className={`${classes.loginTitle} text-center`}>\n                牧联牧通牧业通用平台\n            </h1>\n            <Choose>\n                <When condition={!hasRegister}>\n                    <div className={classes.formContainer}>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-phone_number\">手机号</InputLabel>\n                            <Input\n                                id=\"adornment-phone_number\"\n                                value={RegisterForm.phone_number}\n                                onChange={handleRegisterFormChange('phone_number')}\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-verify_code\">验证码</InputLabel>\n                            <Input\n                                id=\"adornment-verify_code\"\n                                value={RegisterForm.verify_code}\n                                onChange={handleRegisterFormChange('verify_code')}\n                                endAdornment={\n                                    <Button\n                                        variant=\"text\"\n                                        className={classes.codeBtn}\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        disabled={btnDisabledState}\n                                        onClick={handleGetMobileCode}\n                                    >\n                                        {btnTxt}\n                                    </Button>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-password\">密码</InputLabel>\n                            <Input\n                                id=\"adornment-password\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={RegisterForm.password}\n                                onChange={handleRegisterFormChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => setShowPassword(!showPassword)}\n                                            onMouseDown={e => e.preventDefault()}\n                                        >\n                                            <If condition={showPassword}>\n                                                <Visibility color=\"primary\" />\n                                            </If>\n                                            <If condition={!showPassword}>\n                                                <VisibilityOff  />\n                                            </If>\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-confirm_password\">确认密码</InputLabel>\n                            <Input\n                                id=\"adornment-confirm_password\"\n                                type={showConfirmPassword ? 'text' : 'password'}\n                                value={RegisterForm.confirm_password}\n                                onChange={handleRegisterFormChange('confirm_password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm_password visibility\"\n                                            onClick={() => setConfirmShowPassword(!showConfirmPassword)}\n                                            onMouseDown={e => e.preventDefault()}\n                                        >\n                                            <If condition={showConfirmPassword}>\n                                                <Visibility color=\"primary\" />\n                                            </If>\n                                            <If condition={!showConfirmPassword}>\n                                                <VisibilityOff  />\n                                            </If>\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            className={classes.textField}\n                        >\n                            <InputLabel htmlFor=\"adornment-company_name\">请输入企业名称</InputLabel>\n                            <Input\n                                id=\"adornment-company_name\"\n                                value={RegisterForm.company_name}\n                                onChange={handleRegisterFormChange('company_name')}\n                            />\n                        </FormControl>\n                        <MButton\n                            className={classes.registerbtn}\n                            loading={loading}\n                            loadingTxt=\"注册中\"\n                            onClick={handleRegister}\n                            btnText=\"注册\"\n                        />\n                        <Grid container className={classes.register}>\n                            <Grid item xs={1} >\n                                \n                            </Grid>\n                            <Grid item xs={7} >\n                                <span>已经有账户</span>\n                            </Grid>\n                            <Grid item xs={4} className=\"text-center\">\n                                <Link component={RouterLink} to=\"/login\">登录</Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </When>\n                <Otherwise>\n                    <div className={classes.registerSuccess}>\n                        <h3>欢迎使用，有任何问题请致电：</h3>\n                        <h3>18621812625</h3>\n                        <ButtonGroup\n                            className={classes.textField}\n                            fullWidth\n                            size=\"medium\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            aria-label=\"Full width outlined button group\"\n                            onClick={() => props.history.push('/login')}\n                        >\n                            <Button>\n                                继续\n                            </Button>\n                        </ButtonGroup>\n                    </div>\n                </Otherwise>\n            </Choose>\n        </Container>\n    );\n}\nexport default Register;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n        // marginBottom: 20\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n    },\n    iconButton: {\n      padding: 5,\n    }\n});\n\ninterface SearchProps {\n    loading?: boolean;\n    searchMethod?: any;\n    placeholder?: string;\n    searchOnValueIsEmpty: boolean;\n    onSearchChange?:() => void;\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n    const { searchOnValueIsEmpty, searchMethod } = props;\n\n    const handleClickSearch = useCallback(() => {\n        if (!searchOnValueIsEmpty && !value) {\n            return;\n        }\n        searchMethod && searchMethod(value);\n    }, [searchOnValueIsEmpty, value, searchMethod]);\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        const inputSub = fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                if(!searchOnValueIsEmpty && !value) return;\n                searchMethod && searchMethod(value);\n            }\n        );\n        return () => inputSub.unsubscribe()\n    },[inputRef, searchOnValueIsEmpty, searchMethod]);\n\n    return (\n        <Paper className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder={props.placeholder}\n                inputProps={{ 'aria-label': '搜索UniDairy牧场' }}\n                inputRef={inputRef}\n                value={value}\n                onChange={e => setValue(e.target.value)}\n                type=\"search\"\n            />\n            <Choose>\n                <When condition={props.loading}>\n                    <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                    >\n                        <CircularProgress size={21} color=\"primary\" />\n                    </IconButton>\n                </When>\n                <Otherwise>\n                <IconButton\n                        className={classes.iconButton}\n                        aria-label=\"Search\"\n                        style={{\n                            height: '34px'\n                        }}\n                        onClick={handleClickSearch}\n                    >\n                        <SearchIcon\n                            color={ value ? 'primary' : 'disabled'}\n                        />\n                    </IconButton>\n                </Otherwise>\n            </Choose>\n        </Paper>\n    )\n}\nexport default Search;","import { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    container: {\n        width: '85%',\n        margin: '15vh auto 0'\n    },\n    title: {\n        fontSize: '20px'\n    },\n    textField: {\n        marginTop: '40px'\n    },\n    ranchList: {\n        paddingLeft: 10,\n        marginTop: 10\n    }\n});\nexport default useStyles;","import React,{ useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { map } from 'rxjs/operators';\nimport {\n    Grid,\n    Switch,\n    TextField,\n    Button,\n    ButtonGroup,\n    Radio,\n    RadioGroup,\n    FormControl,\n    FormControlLabel\n} from '@material-ui/core';\nimport { selectFarm as SelectFarm } from '@/redux/actions';\nimport { pipe, prop, propEq, find, ifElse, defaultTo, isNil } from 'ramda';\nimport Search from '@/components/search/index';\nimport { fetchCanUseFarms$ } from '@/api';\nimport useStyles from './styles';\nimport \"./index.scss\";\n\ninterface aldRanchItem {\n    farm_code: string;\n    farm_name: string;\n}\n\nconst SelectRanch = (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [params, setParams] = useState({\n        page: 1,\n        page_size: 1000,\n        search: ''\n    });\n    const [otherRanchState, setOtherRanchState] = React.useState(false);\n    const [checkALD, setCheckALD] = useState(true);\n    const [aldRanch, setAldRanch] = useState<FarmInfo>({ farmCode: '', farmName: '' });\n    const [other, setOtherRanch] = useState('');\n    const [aldRanchList, setAldRanchList] = useState<aldRanchItem[]>([]);\n\n    const selectFarm = (data: FarmInfo) => dispatch(SelectFarm(data));\n    const handleChange = (e: any) => {\n        setCheckALD(e.target.checked)\n    };\n    const handleALDRanchChange = (e: any) => {\n        const farmName = pipe(\n            find(\n                propEq('farm_code', e.target.value)\n            ),\n            ifElse(\n                isNil,\n                defaultTo(''),\n                prop('farm_name')\n            )\n        )(aldRanchList)\n        setAldRanch({\n            farmCode: e.target.value,\n            farmName:  farmName\n        });\n    }\n    const handleInputOtherRanch = (e: any) => {\n        setOtherRanch(e.target.value);\n    }\n    const jumpToHome = () => {\n        if (checkALD && !aldRanch.farmCode) return;\n        if (!checkALD && !other) return;\n        let isALD = \"0\";\n        if (checkALD) {\n            isALD = \"1\";\n            selectFarm(aldRanch);\n        } else {\n            setOtherRanchState(!other);\n            if (!other) return;\n        }\n        props.history.push(`/home?isALD=${isALD}`);\n        sessionStorage.setItem(\"isALD\", isALD);\n    };\n\n    useEffect(() =>  {\n        const apiInst =  fetchCanUseFarms$(params).pipe(\n            map(({ response = {} }) => (response.results || []))\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                if (data.length) {\n                    setAldRanchList(data);\n                    setAldRanch({\n                        farmCode: data[0].farm_code,\n                        farmName: data[0].farm_name\n                    });\n                }\n            },\n            error => {\n                console.log('error', error);\n            }\n        )\n        return () => {\n            apiInst.unsubscribe();\n        }\n    }, [params]);\n\n    return (\n        <div className=\"select-ranch-wrapper\">\n            <div className=\"select-ranch-container\">\n                <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Grid item xs={8}>\n                        <h1 className={classes.title}>登陆牧联牧通牧场</h1>\n                    </Grid>\n                    <Grid item xs={4} className=\"text-right\">\n                        <Switch\n                            checked={checkALD}\n                            color=\"primary\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <Choose>\n                    <When condition={checkALD}>\n                        <Search\n                            searchMethod={(search: string) => setParams({\n                                ...params,\n                                search\n                            })}\n                            searchOnValueIsEmpty={true}\n                        />\n                        <FormControl component=\"fieldset\" className={classes.ranchList}>\n                            <RadioGroup aria-label=\"position\" name=\"position\" value={aldRanch.farmCode} onChange={handleALDRanchChange}>\n                                {\n                                    aldRanchList.map(item => (\n                                        <FormControlLabel\n                                            key={item.farm_code}\n                                            value={item.farm_code}\n                                            control={<Radio color=\"primary\" />}\n                                            label={item.farm_name}\n                                            labelPlacement=\"end\"\n                                        />\n                                    ))\n                                }\n                            </RadioGroup>\n                            <If condition={!aldRanchList.length}>\n                                <h6 className=\"text-center\">无可用牧场</h6>\n                            </If>\n                        </FormControl>\n                    </When>\n                    <Otherwise>\n                        <TextField\n                            error={otherRanchState}\n                            className={classes.textField}\n                            placeholder=\"录入您的牧场名称,如XXX牧场\"\n                            fullWidth\n                            value={other}\n                            onChange={handleInputOtherRanch}\n                            helperText={otherRanchState ? \"请录入您的牧场名称\" : \"\"}\n                        />\n                    </Otherwise>\n                </Choose>\n                <ButtonGroup\n                    className={classes.textField}\n                    fullWidth\n                    size=\"medium\"\n                    onClick={jumpToHome}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"Full width outlined button group\"\n                    disabled={!aldRanchList.length}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </div>\n        </div>\n    )\n}\n\nexport default SelectRanch;","\n/**\n * Home Page Header Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme: any) => ({\n    UniDairy: {\n        height: '20vh',\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        paddingTop: 20,\n        width: '100%',\n        top: 0,\n        \"& h4\": {\n            marginTop: 0,\n            marginBottom: 0\n        },\n        position: 'fixed'\n    },\n    textWhite: {\n        color: 'white'\n    },\n    menuItem: {\n        width: 80\n    }\n}));\n","/**\n * Home Page Header Area \n */\nimport React from \"react\";\nimport { Container, Grid, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport {\n    PermIdentity,\n    MoreVert as MoreVertIcon,\n    PowerSettingsNew,\n    Repeat\n} from '@material-ui/icons';\nimport useStyles from \"./_styles\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginOut } from '@/redux/actions';\n\nconst ITEM_HEIGHT = 48;\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { farmName } = useSelector((state: any) => state.User)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const LoginOut = () => dispatch(loginOut());\n\n    const Items = [\n        {\n            label: '切换牧场',\n            component: <Repeat color=\"primary\" />,\n            cb() {\n                props.history.push('/selectRanch')\n            }\n        },\n        {\n            label: '我的',\n            component: <PermIdentity color=\"primary\" />,\n            cb() {\n                props.history.push('/user')\n            }\n        },\n        {\n            label: '退出',\n            component: <PowerSettingsNew color=\"primary\" />,\n            cb() {\n                LoginOut();\n                props.history.push('/login')\n            }\n        }\n    ];\n\n    function handleMenuItemClick(cb: () => void) {\n        handleClose();\n        cb();\n    }\n    function handleClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    return (\n        <Container className={classes.UniDairy}>\n            <Grid container>\n                <Grid item xs={8}>\n                    <h4>UniDairy</h4>\n                    <h4>连接牧场一切信息</h4>\n                    <h4>{farmName}</h4>\n                </Grid>\n                <Grid item xs={4} className=\"text-right\">\n                    <IconButton\n                        aria-label=\"user\"\n                        className={classes.textWhite}\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                </Grid>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={open}\n                    onClose={handleClose}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                        },\n                    }}\n                >\n                    {Items.map(option => (\n                        <MenuItem\n                            key={option.label}\n                            onClick={() => handleMenuItemClick(option.cb)}\n                        >\n                            {option.component} {option.label}\n                        </MenuItem>\n                    ))}\n                </Menu>\n            </Grid>\n        </Container>\n    );\n};\n","/*\n * @Description: \n * @Author: GuoQin\n * @Date: 2019-07-21 17:12:39\n * @LastEditors: GuoQin\n * @LastEditTime: 2019-11-04 11:30:44\n */\n\n/**\n * Home Page entrance Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    homeContainer: {\n        height: '100vh',\n        overflowY: 'auto',\n        background: '#fff'\n    },\n    homeContent: {\n        marginTop: 96,\n        paddingTop: 30,\n        paddingBottom: 20,\n        zIndex: 5,\n        position: 'relative',\n        background: '#fff',\n        textAlign: 'center',\n        borderTopLeftRadius: '45px 45px',\n        borderTopRightRadius: '45px 45px',\n    },\n    homeContentIcon: {\n    },\n    searchContainer: {\n        width: '85%',\n        margin: '0 auto'\n    }\n});\n","/**\n * Home Page other page entrance area\n */\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Container, Grid, Link } from '@material-ui/core';\nimport { Description } from '@material-ui/icons';\nimport Search from '@/components/search/index';\nimport useStyles from \"./_styles\";\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\n\ninterface IProps {\n    isALD: string;\n}\n\nconst Entrance: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [searchLoading, setSearchLoading] = useState(false);\n\n    const searchMethod = (eartag: string) => {\n        console.log('eartag', eartag)\n        if (!eartag) {\n            dispatch({\n                type: 'SHOW_MESSAGE',\n                payload: {\n                    open: true,\n                    message: '请输入牛号',\n                    variant: 'warning'\n                }\n            });\n            return;\n        }\n        const params = {\n            page: 1,\n            page_size: 10,\n            eartag\n        };\n        setSearchLoading(true);\n        const apiInst = fetchCalfsList$(params).pipe(\n            map(({ response }) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                apiInst.unsubscribe();\n                setSearchLoading(false);\n                if (data.count === 1) {\n                    const { id, eartag } = data.results[0];\n                    props.history.push(`/cowDetail/${id}?eartag=${eartag}`)\n                } else {\n                    dispatch({\n                        type: 'SHOW_MESSAGE',\n                        payload: {\n                            open: true,\n                            message: '未搜到该牛号的牛只!',\n                            variant: 'warning'\n                        }\n                    });\n                }\n            },\n            error => {\n                setSearchLoading(true);\n            }\n        );\n    };\n\n    return (\n        <Container className={classes.homeContent}>\n            <div\n                className={classes.searchContainer}\n            >\n                <Search\n                    placeholder=\"搜索牛只\"\n                    searchMethod={searchMethod}\n                    loading={searchLoading}\n                    searchOnValueIsEmpty={false}\n                />\n            </div>\n            <Grid justify=\"center\" container >\n                <Choose>\n                    <When condition={props.isALD === \"1\"}>\n                        <Grid item xs={6} >\n                                <Link component={RouterLink} to=\"/manageList/ald\">\n                                    <div className=\"home-entrance-wrapper\">\n                                        <Description className=\"fs-36-it\" />\n                                        <div >\n                                            牧联牧通评估\n                                        </div>\n                                    </div>\n                                </Link>\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs={6}>\n                            <Link component={RouterLink} to=\"/manageList/society\">\n                                <div className=\"home-entrance-wrapper\">\n                                    <Description className=\"fs-36-it\" />\n                                    <div>\n                                        社会牧场评估\n                                    </div>\n                                </div>\n                            </Link>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/tasks\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                任务清单\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                现场报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link component={RouterLink} to=\"/sceneReport\">\n                        <div className=\"home-entrance-wrapper\">\n                            <Description className=\"fs-36-it\" />\n                            <div>\n                                分析报告\n                            </div>\n                        </div>\n                    </Link>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\nexport default Entrance;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nexport default function(props: any) {\n    return (\n        <Box\n            border={1}\n            borderRadius=\"borderRadius\"\n            borderColor=\"#ccc\"\n            flex=\"0 0 85%\"\n            margin=\"0 10px\"\n        >\n            {props.children}\n        </Box>\n    )\n};\n","/**\n * Home Page Reports Area Styles\n */\nimport { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles({\n    chartTitle: {\n        fontSize: '1rem',\n        color: '#111',\n        paddingLeft: '15px'\n    },\n    chartContainer: {\n        color: '#999',\n        padding: '0 0 70px',\n    }\n});\n","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","/**\n * Home Page Reports Area\n */\nimport React from \"react\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport { Grid, IconButton, Box, Link } from '@material-ui/core';\nimport ReactEcharts from 'echarts-for-react';\nimport { NavigateNext } from '@material-ui/icons';\nimport ChartBox from './_chartbox';\nimport useStyles from \"./_styles\";\nimport { SevenDayOpt } from './_mock';\n\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            className={classes.chartContainer}\n            borderTop={1}\n            borderColor=\"#ccc\"\n        >\n            <Grid container alignItems=\"center\" className={classes.chartTitle}>\n                <Grid item xs>预警报表</Grid>\n                <Grid item xs={2} className=\"text-right\">\n                    <Link component={RouteLink} to=\"/reports\">\n                        <IconButton>\n                            <NavigateNext />\n                        </IconButton>\n                    </Link>\n                </Grid>\n            </Grid>\n            <Box\n                display=\"flex\"\n                flexWrap=\"nowrap\"\n                overflow=\"scroll\"\n            > \n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n                <ChartBox>\n                    <ReactEcharts\n                        option={SevenDayOpt}\n                        style={{\n                            height: '40vh'\n                        }}\n                    />\n                </ChartBox>\n            </Box>\n        </Box>\n    );\n};\n","import React from 'react';\n// import qs from \"querystring\";\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport url from \"url\";\nimport { makeStyles } from '@material-ui/styles';\nimport HomeHeader from \"./header\";\nimport Entrance from \"./entrance\";\nimport Reports from \"./report\";\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    homeContainer: {\n        background: '#fff'\n    }\n});\n\ninterface IProps{ \n    isLogin: boolean;\n}\n\nconst Home: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const loginStatus = useSelector((state: any) => state.User.loginStatus);\n    const { query } = url.parse(props.location.search, true);\n    const isALD= String(query.isALD || sessionStorage.getItem(\"isALD\") || \"0\");\n\n    return (\n        <div className={classes.homeContainer}>\n            <If condition={!loginStatus}>\n                <Redirect to=\"/login\" />\n            </If>\n            <HomeHeader {...props} />\n            <Entrance isALD={isALD} {...props} />\n            <Reports />\n        </div>\n    )\n};\nexport default Home;","import { \n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        height: 48,\n        fontSize: '1rem',\n        textAlign: 'center',\n        color: theme.palette.primary.contrastText,\n        position: 'fixed',\n        fontWeight: 'bolder',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10\n    },\n    icon: {\n        color: '#fff'\n    },\n    input: {\n        marginLeft: 8,\n        flex: 1,\n        color: '#fff'\n    },\n    iconButton: {\n        padding: 10,\n        color: '#fff'\n    },\n    inputBox: {\n        color: '#fff'\n    }\n}));\nexport default useStyles;","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport {\n    Grid,\n    CircularProgress,\n    IconButton,\n    Paper,\n    InputBase\n} from '@material-ui/core';\nimport {\n    ArrowBackIos,\n    Search as SearchIcon\n} from '@material-ui/icons';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport useStyles from './styles';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface IProps extends RouteComponentProps {\n    title: string;\n    endAdorment?: JSX.Element;\n    useSearch?: boolean;\n    autofocus?: boolean;\n    searchPlaceholder?: string;\n    searchLoading?: boolean;\n    getSearchValue?: (val: string) => void;\n    beforeRouteLeave?: () => void;\n}\n\nconst  AppBar: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const handleClickBack = () => {\n        props.beforeRouteLeave && props.beforeRouteLeave();\n        props.history.goBack();\n    };\n    const handleClickSearch = useCallback(() => {\n        return props.getSearchValue && props.getSearchValue(value);\n    }, [props, value]);\n\n    useEffect(() => {\n        const current: any = inputRef.current;\n        let inputSub: any = null;\n        inputSub = current && fromEvent(current, 'search').pipe(\n            map((e: any) => e.target.value)\n        ).subscribe(\n            value => {\n                console.log('value', value)\n                props.getSearchValue && props.getSearchValue(value);\n            }\n        );\n        return () => inputSub && inputSub.unsubscribe();\n    },[inputRef, handleClickSearch, props]);\n\n    return (\n        <Paper className={classes.root} square={true}>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <IconButton onClick={() => handleClickBack()}>\n                        <ArrowBackIos className={classes.icon} />\n                    </IconButton>\n                </Grid>\n                <Choose>\n                    <When condition={!props.useSearch}>\n                        <Grid item xs>\n                            {props.title}\n                        </Grid>\n                        <Grid item xs={2}>\n                            {props.endAdorment}\n                        </Grid>\n                    </When>\n                    <Otherwise>\n                        <Grid item xs=\"auto\" className={classes.inputBox}>\n                            <InputBase\n                                autoFocus={props.autofocus}\n                                type=\"search\"\n                                inputRef={inputRef}\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                className={classes.input}\n                                placeholder={props.searchPlaceholder}\n                                inputProps={{ 'aria-label': props.searchPlaceholder }}\n                            />\n                            <Choose>\n                                <When condition={props.searchLoading}>\n                                    <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                    >\n                                        <CircularProgress size={20} color=\"secondary\" />\n                                    </IconButton>\n                                </When>\n                                <Otherwise>\n                                <IconButton\n                                        className={classes.iconButton}\n                                        aria-label=\"Search\"\n                                        onClick={handleClickSearch}\n                                    >\n                                        <SearchIcon\n                                             color=\"secondary\"\n                                        />\n                                    </IconButton>\n                                </Otherwise>\n                            </Choose>\n                        </Grid>\n                    </Otherwise>\n                </Choose>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default withRouter(AppBar);","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        position: 'fixed',\n        top: 48,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        background: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.12)'\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Tabs, Tab, Box } from '@material-ui/core';\nimport useStyles from './styles';\n\ninterface IProps {\n    value: number;\n    onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\n    tabList: string[];\n}\n\nconst MTabs: React.FC<IProps> = (props: IProps) => {\n    const classes = useStyles();\n    const { value, onChange, tabList } = props;\n    return (\n        <Box className={classes.root}>\n            <Tabs\n                value={value}\n                onChange={onChange}\n                indicatorColor=\"secondary\"\n                textColor=\"secondary\"\n                centered\n                variant=\"fullWidth\"\n            >\n                {\n                    tabList.map(item => <Tab key={item} label={item} />)\n                }\n            </Tabs>\n        </Box>\n    )\n}\n\nexport default MTabs;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n    className?: string;\n}\n  \nexport default function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Box\n        hidden={value !== index}\n        {...other}\n      >\n        {children}\n      </Box>\n    );\n}\n  \n  ","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0,\n        float: 'right',\n        margin: '5px 14px 0 0'\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n}));\n\nexport default useStyles;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { Paper, Box, Grid, Typography, Divider, IconButton } from '@material-ui/core';\nimport { ExpandMore, AttachFile, ArrowForward } from '@material-ui/icons';\nimport clsx from 'clsx';\n\ninterface IProps {\n    photo?: string;\n    run_date: string;\n    todotask_name: string;\n    tasker_name: string;\n    content: string;\n    location: string;\n    attachment?: string;\n    onClick: () => void;\n}\n\nexport default function Item(props:IProps) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const {\n        photo,\n        run_date,\n        todotask_name,\n        tasker_name,\n        content,\n        attachment,\n        location,\n        onClick\n    } = props;\n\n    return (\n        <Paper className={clsx(classes.paper, 'minHeight100')} onClick={onClick}>\n            <Box position=\"relative\">\n                <Grid container>\n                    <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                        <Box paddingX=\"5px\">\n                            <img\n                                className={classes.img}\n                                alt=\"complex\"\n                                src={photo ? photo : require('@/assets/images/default.jpg')}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={10} container>\n                        <Grid item xs=\"auto\" container direction=\"column\">\n                            <Grid item xs style={{paddingRight: 5}}>\n                                <Typography gutterBottom variant=\"subtitle1\">\n                                    {run_date}\n                                </Typography>\n                                <Typography variant=\"subtitle2\" gutterBottom >\n                                    <Box fontSize=\"12px\">\n                                        任务名称：{todotask_name}\n                                    </Box>\n                                    <Box fontSize=\"12px\">\n                                        责任人：{tasker_name}\n                                    </Box>\n                                    <Box fontSize=\"12px\">\n                                        地点描述：{location}\n                                    </Box>\n                                    <Box fontSize=\"12px\" className=\"line-clamp-2\">\n                                        任务描述：{content}\n                                    </Box>\n                                </Typography>\n                            </Grid>\n                            {/* <Grid item>\n                                <Divider />\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <IconButton\n                                        onClick={() => props.history.push(`/tasksDetail`)}\n                                        className={classes.detailBtn}>\n                                        <Box\n                                            fontSize=\"12px\"\n                                        >\n                                            明细\n                                        </Box>\n                                        <ArrowForward color=\"primary\" />\n                                    </IconButton>\n                                </Typography>\n                            </Grid> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Box\n                    position=\"absolute\"\n                    right=\"0%\"\n                    top=\"10%\"\n                >\n                    <Choose>\n                        <When condition={attachment}>\n                            <a href={attachment} download>\n                                <IconButton>\n                                    <AttachFile color=\"primary\" />\n                                </IconButton>\n                            </a>\n                        </When>\n                        <Otherwise>\n                            <IconButton onClick={() => dispatch({\n                                type: 'SHOW_MESSAGE',\n                                payload: {\n                                    open: true,\n                                    variant: 'warning',\n                                    message: '无可用附件下载'\n                                }\n                            })}>\n                                <AttachFile color=\"primary\" />\n                            </IconButton>\n                        </Otherwise>\n                    </Choose>\n                </Box>\n            </Box>\n        </Paper>\n    );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Paper, Box, Grid, Typography, Divider, IconButton } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport useStyles from './styles';\n\ninterface IProps {\n    photo?: string;\n    workflow_type_name: string;\n    drafttype: string;\n    event_date: string;\n    activity_done_day: number;\n    done_count: number;\n    totalcount: number;\n    onClick: () => void;\n}\nexport default function Not3Item(props: IProps) {\n    const classes = useStyles();\n    const {\n        photo,\n        workflow_type_name,\n        drafttype,\n        event_date,\n        activity_done_day,\n        done_count,\n        totalcount,\n        onClick\n    } = props;\n    return (\n        <Paper className={classes.paper} onClick={onClick} >\n            <Box position=\"relative\">\n                <Grid container>\n                    <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n                        <Box paddingX=\"5px\">\n                            <img\n                                className={classes.img}\n                                alt=\"complex\"\n                                src={photo ? photo : require('@/assets/images/default.jpg')}\n                            />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={10} container>\n                        <Grid item xs=\"auto\" container direction=\"column\">\n                            <Grid item xs>\n                                <Typography gutterBottom variant=\"subtitle1\">\n                                    {workflow_type_name}\n                                </Typography>\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <Box fontSize=\"12px\">\n                                        派工单类型：{drafttype}\n                                    </Box>\n                                    <Box fontSize=\"12px\">\n                                        任务日期：{event_date}\n                                    </Box>\n                                    <Box fontSize=\"12px\">\n                                        完成期限：{activity_done_day}\n                                    </Box>\n                                    <Box fontSize=\"12px\">\n                                        已完成：{done_count} / 总数：{totalcount}\n                                    </Box>\n                                </Typography>\n                            </Grid>\n                            {/* <Grid item>\n                                <Divider />\n                                <Typography variant=\"subtitle2\" gutterBottom>\n                                    <IconButton\n                                        onClick={onClick}\n                                        className={classes.detailBtn}>\n                                        <Box\n                                            fontSize=\"12px\"\n                                        >\n                                            明细\n                                        </Box>\n                                        <ExpandMore color=\"primary\" />\n                                    </IconButton>\n                                </Typography>\n                            </Grid> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Paper>\n    );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    pageContainer: {\n        padding: '100px 0 70px',\n        minHeight: '100vh',\n        boxSizing: 'border-box'\n    },\n    minHeight100: {\n        minHeight: '100vh',\n        boxSizing: 'border-box'\n    },\n    content: {\n        height: '100vh',\n        boxSizing: 'border-box',\n        padding: '100px 0 70px',\n        overflowY: 'auto'\n    },\n    img: {\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    detailBtn: {\n        padding: 0\n    },\n    paper: {\n        padding: '5px 0',\n        marginTop: 10\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\n\ninterface IProps {\n    loading: boolean;\n    hasMore: boolean;\n    loadMore: () => void;\n}\nexport default function ClickLoadMore(props: IProps) {\n    const { loading, loadMore, hasMore } = props;\n    return (\n        <Choose>\n            <When condition={loading}>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                    <CircularProgress size={15} style={{ marginRight: 10 }} />正在加载中...\n                </Box>\n            </When>\n            <Otherwise>\n                <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                    {hasMore ? '点击加载更多' : '没有更多了'}\n                </Box>\n            </Otherwise>\n        </Choose>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Box, Container } from '@material-ui/core';\nimport { Subscription } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\nimport dayjs from 'dayjs';\nimport SwipeableViews from 'react-swipeable-views';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { fetchTodoTaskRuns$, getDraftsHz$ } from '@/api';\nimport AppBar from '@/components/app-bar';\nimport { TabPanel, Tabs, Item, Not3Item } from './components';\nimport useStyles from './styles';\nimport ClickLoadMore from '@/components/click-load-more';\n// 缓存每一个tab是否是第一次切换，\n// 只在第一次切换时请求数据，值修改后只能修改 pageMap 造成请求数据\nconst FirstFetchData: IndexMap<boolean> = {\n    0: true,\n    1: true,\n    2: true,\n    3: true\n};\n// 缓存页码值，用于区分是\n// 修改tabValue还是pageMap造成的重新请求数据\n// CachePageMap值与pageMap值相同，是tabValue造成的\n// 不相同是 pageMap 造成的\nconst CachePageMap: IndexMap<number> = {\n    0: 1,\n    1: 1,\n    2: 1,\n    3: 1,\n};\nconst page_size = 5;\nconst tabList = ['繁殖', '保健', '营养', '任务'];\nconst Tasks: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [listMap, setListMap] = useState<IndexMap<any[]>>({\n        0: [],\n        1: [],\n        2: [],\n        3: []\n    });\n    const [pageMap, setPageMap] = useState<IndexMap<number>>({\n        0: 1,\n        1: 1,\n        2: 1,\n        3: 1,\n    });\n    const [nextMap, setNextMap] = useState<IndexMap<string>>({\n        0: 'init',\n        1: 'init',\n        2: 'init',\n        3: 'init',\n    });\n    const [loading, setLoading] = useState(false);\n    const [tabValue, setTabValue] = useState(3);\n    const dispatch = useDispatch();\n\n    const  handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setTabValue(newValue);\n    }\n    const toTaskDetail2 = (item: any) => {\n        item.done_status_label = item.done_status ? '已完成' : '未完成';\n        dispatch({ type: 'SAVE_TASK_DETAIL2', payload: item });\n        props.history.push(`/tasksDetail2/${item.id}`);\n    }\n    const toTaskDetail = () => props.history.push('/tasksDetail');\n\n    const loadMore = (index: number) => ()=> {\n        if (nextMap[index]) {\n            const PageNum = pageMap[index] + 1;\n            setPageMap({\n                ...pageMap,\n                [index]: PageNum\n            });\n        }\n    };\n    // 重置数据，防止离开又回来造成的问题。\n    useEffect(() => {\n        return () => {\n            Object.keys(FirstFetchData).forEach(key => FirstFetchData[key] = true)\n            Object.keys(CachePageMap).forEach(key => CachePageMap[key] = 1)\n        }\n    }, []);\n\n    useEffect(() => {\n        let ApiInstSub:  Subscription;\n        const  finalOpera = (data: any) => {\n            const [listMapItem, nextMapItem] = data;\n            const hasData = Boolean(listMapItem && listMapItem.length);\n            // 在获取到数据的情况下，修改值\n            if (hasData) FirstFetchData[tabValue] = false;\n            CachePageMap[tabValue] = pageMap[tabValue];\n    \n            hasData && setListMap(listMap => ({ ...listMap, [tabValue]: listMap[tabValue].concat(data[0]) }));\n            setNextMap(nextMap => ({ ...nextMap, [tabValue]: nextMapItem }));\n        }\n    \n        const getTask3List = () => {\n            const ApiInst = fetchTodoTaskRuns$({ page: pageMap[3], page_size }).pipe(\n                map(({response}) => response),\n                map(response => [response.results, response.next]),\n                map(([list, next]) => {\n                    const tasksList =  list.map((item: any) => {\n                        return {\n                            ...item,\n                            toNowDate: dayjs(item.run_date).diff(dayjs(), 'day')\n                        }\n                    });\n                    return [tasksList, next];\n                }),\n                finalize(() => setLoading(false))\n            ).subscribe(\n                (data: any) => {\n                    console.log('data', data);\n                    finalOpera(data);\n                }\n            );\n            return ApiInst;\n        }\n        const getTaskNot3List = () => {\n            const UsageId: IndexMap<string> = {\n                0: '270',\n                1: '269',\n                2: '268'\n            };\n            const Params = {\n                page: pageMap[tabValue],\n                page_size,\n                usage_id: UsageId[tabValue]\n            };\n            const ApiInst = getDraftsHz$(Params).pipe(\n                map(({response}) => response),\n                map(response => Array.isArray(response) ? [response, null] : [response.results, response.next]),\n                finalize(() => setLoading(false))\n            ).subscribe(\n                (data: any) => {\n                    console.log('data', data);\n                    finalOpera(data);\n                }\n            );\n            return ApiInst;\n        }\n\n        if(FirstFetchData[tabValue] || CachePageMap[tabValue] !== pageMap[tabValue]){\n            setLoading(true);\n            ApiInstSub = tabValue === 3 ? getTask3List() : getTaskNot3List();\n        }\n        \n        return () =>  {\n            ApiInstSub && ApiInstSub.unsubscribe();\n        };\n    }, [tabValue, pageMap]);\n\n    return (\n        <Box className={clsx('bg-gray')}>\n            <AppBar title=\"任务清单\" />\n            <Tabs value={tabValue} onChange={handleChange} tabList={tabList} />\n            <Container>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={tabValue}\n                    onChangeIndex={(index) => setTabValue(index)}\n                >\n                    {\n                        tabList.map((item, index) => {\n                            return (\n                                <TabPanel\n                                    key={item}\n                                    value={tabValue}\n                                    index={index}\n                                    dir={theme.direction}\n                                >\n                                    <Box className={classes.content}>\n                                        <Choose>\n                                            <When condition={index !== 3}>\n                                                {\n                                                    listMap[index].map((item: any, i) => (\n                                                        <Not3Item \n                                                            key={`tasks-${index}item-${i}`}\n                                                            {...item}\n                                                            onClick={toTaskDetail}\n                                                        />\n                                                    ))\n                                                }\n                                            </When>\n                                            <Otherwise>\n                                                {\n                                                    listMap[3].map((item: any, i) => (\n                                                        <Item\n                                                            key={`tasks-3-item-${i}`}\n                                                            onClick={() => toTaskDetail2(item)}\n                                                            {...item}\n                                                        />\n                                                    ))\n                                                }\n                                            </Otherwise>\n                                        </Choose>\n                                        <ClickLoadMore\n                                            loading={loading}\n                                            loadMore={loadMore(index)}\n                                            hasMore={Boolean(nextMap[index])}\n                                        />\n                                    </Box>\n                                </TabPanel>\n                            )\n                        })\n                    }\n                </SwipeableViews>\n            </Container>\n        </Box>\n    );\n}\nexport default Tasks;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    circularProgressba: {\n        width: 50\n    },\n    root: {\n        // height: '23vh',\n        // padding: 10,\n        paddingTop: 50\n    },\n    tablecell: {\n        padding: '10px 5px'\n    },\n    table: {\n        background: '#fff'\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\n\nexport default useStyles;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { amber, green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\ninterface IProps {\n    done_state_label: string;\n    done_state: string | number;\n    className?: string;\n}\nconst useStyles = makeStyles((theme: any) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    root: {\n        transition: 'all .5s ease-out',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 80,\n        width: 80,\n        borderRadius: '50%',\n        transform: 'rotate(-20deg)',\n        opacity: 0.7,\n        color: '#fff',\n        fontSize: 12,\n        fontWeight: 'bolder',\n        boxShadow: '0 2px 5px #ccc'\n    },\n}));\n\nconst DoneState: React.FC<IProps> = (props: IProps) => {\n    const { done_state_label, done_state, className } = props;\n    const classes = useStyles();\n    const BgColor: IndexMap<string> = {\n        0: classes.warning,\n        1: classes.success,\n        2: classes.error\n    }\n    return (\n        <Box\n            className={clsx(classes.root, BgColor[done_state], className)}\n        >\n            {done_state_label}\n        </Box>\n    )\n};\nexport default DoneState;","import React, { useState, useEffect } from 'react';\nimport { Modal, Box, Paper, Divider, Grid, Zoom } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport DoneState from '@/components/done-state'\n\ninterface IDetail extends IndexMap<string | number> {\n    id:  number | string;\n    activity_done_day: string | number;\n    activity_task: string;\n    done_state: string | number;\n    done_state_label: string;\n    drafttype: string;\n    drug_name: string;\n    eartag: string;\n    event_date: string;\n    pen_name: string;\n    rem: string;\n    technician: string;\n    workflow_type_name: string;\n}\ninterface IProps {\n    open: boolean;\n    setOpen: (open: boolean) => void;\n    detail: IDetail;\n}\nconst DetailMap: IndexMap<string> = {\n    activity_done_day: '完成期限',\n    activity_task: '任务名称',\n    done_state_label: '状态',\n    drafttype: '流程类型',\n    drug_name: '药品',\n    eartag: '耳号',\n    event_date: '任务日期',\n    pen_name: '牛舍',\n    rem: '备注',\n    technician: '技术员',\n    workflow_type_name: '工作流程'\n};\nconst DetailFields = [\n    'activity_task',\n    'drafttype',\n    'workflow_type_name',\n    'eartag',\n    'pen_name',\n    'drug_name',\n    'technician',\n    'event_date',\n    'activity_done_day',\n    'rem'\n];\n\nconst useStyles = makeStyles((theme: any) => ({\n    content: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        width: '80%',\n        transform: 'translate3d(-50%,-50%, 0)',\n        backgroundColor: '#fff',\n        borderRadius: 5,\n        padding: '0 10px 10px',\n        lineHeight: 2\n    },\n    label: {\n        color: '#333',\n        marginRight: 5\n    },\n    value: {\n        color: theme.palette.primary.main\n    },\n    donestate: {\n        top: '50%',\n        left: '50%',\n        position: 'absolute',\n        transform: 'translate3d(-50%, -50%, 0)',\n    }\n}))\nexport default function Detail(props: IProps) {\n    const classes = useStyles();\n    const [doneStateShow, setDoneStateShow] = useState(false);\n    const { open, setOpen, detail } = props;\n\n    useEffect(() =>{\n        let timeId: any;\n        timeId = setTimeout(() =>{\n            setDoneStateShow(open);\n        }, 200);\n        return () => timeId && clearTimeout(timeId);\n    }, [open]);\n\n    return (\n        <Zoom in={doneStateShow}>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                keepMounted\n                onClose={() => setOpen(false)}\n            >\n                <Paper className={classes.content}>\n                    <Box className=\"text-center\" fontSize=\"1.2rem\">明细</Box>\n                    {\n                        DetailFields.map(item => (\n                            <Box key={item}>\n                                <Divider color=\"primary\" />\n                                <Grid container>\n                                    <Grid item xs=\"auto\">\n                                        <div className={clsx(classes.label, 'text-left')}>\n                                            {DetailMap[item]}:\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <div className={clsx(classes.value, 'text-right')}>\n                                            {detail[item]}\n                                        </div>\n                                    </Grid>\n                                </Grid> \n                            </Box>\n                        ))\n                    }\n                    <Box className={classes.donestate}>\n                        {/* <If condition={doneStateShow}>\n                            <Zoom in={doneStateShow}>\n                                <DoneState\n                                    down_state={detail.done_state}\n                                    down_state_label={detail.done_state_label}\n                                />\n                            </Zoom>\n                        </If> */}\n                        <DoneState\n                            done_state={detail.done_state}\n                            done_state_label={detail.done_state_label}\n                        />\n                    </Box>\n                </Paper>\n            </Modal>\n        </Zoom>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    // Grid,\n    Divider,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow\n} from '@material-ui/core';\n// import Rating from '@material-ui/lab/Rating';\nimport clsx from 'clsx';\n// import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport AppBar from '@/components/app-bar';\nimport { getDrafts$ } from '@/api';\nimport { map, pluck, finalize } from 'rxjs/operators';\nimport useStyles from './styles';\nimport Detail from './components/detail';\nimport ClickLoadMore from '@/components/click-load-more';\n\ninterface Detail extends IndexMap<string | number> {\n    id: number | string;\n    activity_done_day: string | number;\n    activity_task: string;\n    done_state: string | number;\n    done_state_label: string;\n    drafttype: string;\n    drug_name: string;\n    eartag: string;\n    event_date: string;\n    pen_name: string;\n    rem: string;\n    technician: string;\n    workflow_type_name: string;\n}\n\nconst TasksDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [next, setNext] = React.useState(null);\n    const [List, setList] = useState<Detail[]>([]);\n    const [page, setPage] = useState(1);\n    const [activeData, setActiveData] = useState<Detail>({\n        id: '',\n        activity_done_day: '',\n        activity_task: '',\n        done_state: '',\n        done_state_label: '',\n        drafttype: '',\n        drug_name: '',\n        eartag: '',\n        event_date: '',\n        pen_name: '',\n        rem: '',\n        technician: '',\n        workflow_type_name: '',\n    });\n\n    const handleClick = (target: string, index: number) => {\n        const actRet = List[index];\n        if (target === 'cow') {\n            props.history.push(`/cowDetail/${actRet.id}?eartag=${actRet.eartag}`);\n        } else {\n            setActiveData(actRet);\n            setOpen(true);\n        }\n    };\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    useEffect(() => {\n        // const id = props.match.params.id;\n        setLoading(true);\n        const ApiInst = getDrafts$({ page, page_size: 5}).pipe(\n            pluck('response'),\n            map(response => {\n                const DoneStateLabel: IndexMap<string> = {\n                    0: '待完工',\n                    1: '已完成',\n                    2: '已过期'\n                };\n                const formatDetail = (item: Detail) => {\n                    const ret: IndexMap<string | number> = {};\n                    for(const [key, value] of Object.entries(item)){\n                        ret[key] = value || '暂无';\n                    }\n                    ret.done_state_label = DoneStateLabel[item.done_state];\n                    ret.done_state = item.done_state;\n                    return ret;\n                }\n                const List = response.results.map(formatDetail);\n                return [List, response.next];\n            }),\n            finalize(() => setLoading(false))\n        ).subscribe(\n            (data: any) => {\n                // console.log('data', data);\n                setList(List => List.concat(data[0]));\n                setNext(data[1])\n            },\n            error => {\n                console.log('error', error);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [page]);\n\n    return (\n        <Box paddingBottom=\"30px\" className={classes.root}>\n            <AppBar title=\"完工单明细\" />\n            {/* <Grid container alignItems=\"center\">\n                <Grid item xs>\n                    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                        <Box fontSize={12}>任务 100， 完成 75</Box>\n                        <Rating name=\"half-rating\" value={75 * 5 / 100} readOnly />\n                    </Box>\n                </Grid>\n                <Grid item  xs=\"auto\">\n                    <CircularProgressbar\n                        className={classes.circularProgressba}\n                        value={75}\n                        text='75%'\n                        styles={buildStyles({\n                            pathColor: `rgba(207, 0, 15, ${75 / 100})`,\n                            textColor: `rgba(207, 0, 15, ${75 / 100})`\n                        })}\n                    />\n                </Grid>\n            </Grid> */}\n            <Divider />\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>牛号</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>类型</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务日期</TableCell>\n                        <TableCell align=\"center\" className={clsx(classes.tablecell, classes.tableHeader)}>任务状态</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {List.map((row: any, index: number) => (\n                        <TableRow hover key={`${row.eartag}-${index}`}>\n                            <TableCell onClick={() => handleClick('cow', index)} align=\"center\" className={classes.tablecell} >{row.eartag}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.drafttype}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.event_date}</TableCell>\n                            <TableCell onClick={() => handleClick('detail', index)} align=\"center\" className={classes.tablecell}>{row.done_state_label}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <ClickLoadMore loadMore={loadMore} loading={loading} hasMore={Boolean(next)} />\n            <Detail open={open} detail={activeData} setOpen={setOpen} />\n        </Box>\n    )\n}\nexport default TasksDetail;","export const SevenDayOpt = {\n    title: {\n        text: \"7天产量变化\",\n        textStyle: {\n            fontSize: 14\n        },\n        top: 5\n    },\n    trigger: \"axis\",\n    axisPointer: {\n        // 坐标轴指示器，坐标轴触发有效\n        type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n    },\n    legend: {\n        data: [\n            {\n                name: \"早潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"中潮\",\n                icon: 'circle'\n            },\n            {\n                name: \"晚潮\",\n                icon: 'circle'\n            }\n        ],\n        top: '10%'\n    },\n    grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true\n    },\n    xAxis: [\n        {\n            type: \"category\",\n            data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"]\n        }\n    ],\n    yAxis: [\n        {\n            type: \"value\"\n        }\n    ],\n    series: [\n        {\n            name: \"早潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [120, 132, 101, 134, 90, 230, 210]\n        },\n        {\n            name: \"中潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [220, 182, 191, 234, 290, 330, 310]\n        },\n        {\n            name: \"晚潮\",\n            type: \"bar\",\n            stack: \"广告\",\n            data: [150, 232, 201, 154, 190, 330, 410]\n        }\n    ]\n};\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    Container,\n    Paper\n} from '@material-ui/core';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\nimport { SevenDayOpt } from './_mock';\nimport \"./index.scss\";\n\nconst useStyles = makeStyles({\n    root: {\n        margin: '65px 0'\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root}>\n            <AppBar title=\"预警报表\" />\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n            <Paper className=\"mt-15\">\n                <ReactEcharts\n                    option={SevenDayOpt}\n                    style={{\n                        height: '40vh'\n                    }}\n                />\n            </Paper>\n        </Container>\n    )\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Paper,\n    Tabs,\n    Tab,\n    Grid,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardMedia,\n    Button\n} from '@material-ui/core';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        position: 'fixed',\n        top: 48,\n        width: '100vw'\n    },\n    reviewListContainer: {\n        paddingTop: 96\n    },\n    media: {\n        height: 120,\n    },\n});\n\nconst RouteParamsType: any = {\n    'ald': 'UniDairy牧场',\n    'society': '社会牧场'\n};\n\nexport default (props: any) => {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const reviewList = [\n        {\n            title: '乳头评分',\n            img: require(\"./image/default.jpg\"),\n            value: 0\n        },\n        {\n            title: '行走评分',\n            img: require(\"./image/default.jpg\"),\n            value: 1\n        },\n        {\n            title: '体况评分',\n            img: require(\"./image/default.jpg\"),\n            value: 2\n        },\n        {\n            title: '粪便评分',\n            img: require(\"./image/default.jpg\"),\n            value: 3\n        }\n    ];\n    const RanchType = props.match.params.type;\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setTabValue(newValue);\n        if (newValue) {\n            props.history.push(`/viewCowshed/${RanchType}`)\n        }\n    }\n\n    return (\n        <div >\n            <AppBar title={`${RouteParamsType[RanchType]}-现场管理清单`} />\n            <Paper className={classes.root} square={true}>\n                <Tabs\n                    value={tabValue}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"现场评分\" />\n                    <Tab label=\"牛舍巡棚\" />\n                </Tabs>\n            </Paper>\n            <Grid container justify=\"space-around\" className={classes.reviewListContainer}>\n                {\n                    reviewList.map(item => (\n                        <Grid item xs={5} key={item.title} className=\"mt-15-it\">\n                            <Card onClick={() => props.history.push(`/reviewDetail/${RanchType}/${item.value}`) }>\n                                <CardActionArea>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={item.img}\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                </CardActionArea>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\">\n                                        {item.title}\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Required() {\n    return (\n        <span style={{color: 'red'}}>\n            *\n        </span>\n    )\n}","// 牛类型\nexport const CowType: ReviewDetail.LabelValueType[] = [\n    {\n      value: '0',\n      label: '干奶牛',\n    },\n    {\n      value: '1',\n      label: '新产牛',\n    },\n    {\n      value: '2',\n      label: '早期牛',\n    },\n    {\n      value: '3',\n      label: '中期牛',\n    },\n    {\n      value: '4',\n      label: '后期牛',\n    },\n];\n// 乳头信息\nexport const Teats: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    },\n    {\n        label: '瞎奶头',\n        value: '0'\n    }\n];\n// 体况评分\nexport const BCS: ReviewDetail.LabelValueType[] = [];\nfor(let i = 1; i <= 5; i = i + 0.25) {\n    BCS.push({\n        label: String(i), value: String(i)\n    });\n}\n// 结果\nexport const Results: ReviewDetail.LabelValueType[] = [\n    {\n        label: '1',\n        value: '1'\n    },\n    {\n        label: '2',\n        value: '2'\n    },\n    {\n        label: '3',\n        value: '3'\n    },\n    {\n        label: '4',\n        value: '4'\n    },\n    {\n        label: '5',\n        value: '5'\n    }\n];\nexport const RanchType: ReviewDetail.IndexStringMap = {\n    ald: 'UniDairy牧场',\n    society: '社会牧场'\n};\nexport const ReviewType: ReviewDetail.IndexStringMap = {\n    0: '乳头评分',\n    1: '行走评分',\n    2: '体况评分',\n    3: '粪便评分'\n};\nexport const CowBreastPosition: ReviewDetail.CowBreastPositionItem[] = [\n    {\n        label: '左前',\n        key: 'lf'\n    },\n    {\n        label: '左后',\n        key: 'lb'\n    },\n    {\n        label: '右前',\n        key: 'rf'\n    },\n    {\n        label: '右后',\n        key: 'rb'\n    }\n];\ninterface IndexFuncMap<T> {\n    [index: string]: (state: any) => T;\n}\n// 验证数据的必填\nexport const validateReviewType: IndexFuncMap<boolean> = {\n    // 乳头评分\n    0: (state: any) => {\n        // const { assesser, content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cow.value &&\n        //         contentItem.lf &&\n        //         contentItem.lb &&\n        //         contentItem.rf &&\n        //         contentItem.rb\n        //     )) ||\n        //     false\n        // )\n        const { cow, lf, lb, rf, rb, photo } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !lf ||\n            !lb ||\n            !rf ||\n            !rb ||\n            false\n        )\n    },\n    // 行走评分\n    1: (state: any) => {\n        const { photo, cow, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cow.value ||\n            !photo.length ||\n            !cowType ||\n            !results ||\n            false\n        )\n    },\n    // 体况评分\n    2: (state: any) => {\n        const { results, cowType, cow, photo } = state;\n        return (\n            // !assesser.value ||\n            !results ||\n            !cowType ||\n            !cow.value ||\n            !photo.length ||\n            false\n        )\n    },\n    // 粪便评分\n    3: (state: any) => {\n        // const { content } = state;\n        // return (\n        //     !assesser.value ||\n        //     !content.every((contentItem: any) => (\n        //         contentItem.cowshed.value &&\n        //         contentItem.cowType &&\n        //         contentItem.results\n        //     )) ||\n        //     false\n        // )\n        const { cowshed, cowType, results } = state;\n        return (\n            // !assesser.value ||\n            !cowshed.value ||\n            !cowType ||\n            !results ||\n            false\n        );\n    }\n};\n// 格式化数据\nexport const formatReviewType: IndexFuncMap<object> = {\n    // 乳头评分\n    0: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            lf: state.lf,\n            rf: state.rf,\n            rb: state.rb,\n            lb: state.lb,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    },\n    // 行走评分\n    1: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            cow_type: state.cowType,\n            locomotion_score: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n        }\n    },\n    // 体况评分\n    2: (state: any) => {\n        return {\n            cow_id: state.cow.value,\n            note: state.note,\n            bcs: state.results,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event,\n            cow_type: state.cowType\n        }\n    },\n    // 粪便评分\n    3: (state: any) => {\n        return {\n            cow_type: state.cowType,\n            fs:  state.results,\n            pen: state.cowshed.value,\n            note: state.note,\n            assess_time: state.assessDate,\n            assesser: state.assesser.value,\n            add_event: state.add_event\n        }\n    }\n};","import React from 'react';\nimport {\n    Box,\n    Grid,\n    IconButton,\n    TextField\n} from '@material-ui/core';\nimport {\n    AddAPhoto as AddAPhotoIcon,\n    Delete as DeleteIcon\n} from '@material-ui/icons'\nimport {useDropzone} from 'react-dropzone';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport R from 'ramda';\nimport Required from '@/components/required';\n\nconst useStyles = makeStyles({\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    img: {\n        display: 'block',\n        width: '100%',\n        height: '90px'\n    },\n    deleteIcon: {\n        color: 'red'\n    }\n});\ninterface IProps {\n    labelText: string;\n    index?: number;\n    photo: any[];\n    note:string;\n    textAreaRequired: boolean;\n    uploadImgRequired: boolean;\n    saveContent?: (params: object) => void;\n    saveReviewDetail?: (params: object) => void;\n}\nconst TextAreaAndUploadImg: React.FC<IProps> = (props: any) => {\n    const classes = useStyles();\n    const {getRootProps, getInputProps} = useDropzone({\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n            const photoFormat: any = props.photo.concat(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n            // props.saveContent({\n            //     photo: photoFormat,\n            //     index: props.index\n            // });\n            props.saveReviewDetail({\n                photo: photoFormat\n            });\n        }\n    });\n    const deleteImg = (i: number) => {\n        const photoClone = R.remove(i, 1, props.photo);\n        props.photo.forEach((file: any) => URL.revokeObjectURL(file.preview));\n        // props.saveContent({\n        //     photo: photoClone,\n        //     index: props.index\n        // });\n        props.saveReviewDetail({\n            photo: photoClone\n        });\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs>\n                <Grid container alignItems=\"center\">\n                    <If condition={props.textAreaRequired}>\n                        <Grid item xs={1}>\n                            <Required />\n                        </Grid>\n                    </If>\n                    <Grid item xs>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label={props.labelText}\n                            multiline\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={props.note}\n                            // onChange={e => props.saveContent({\n                            //     note: e.target.value,\n                            //     index: props.index\n                            // })}\n                            onChange={e => props.saveReviewDetail({\n                                note: e.target.value\n                            })}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={2} className={classes.flexbox}>\n                     <Box {...getRootProps({className: 'dropzone'})}>\n                        <input {...getInputProps()} />\n                        <IconButton>\n                            {props.uploadImgRequire && <Required />}\n                            <AddAPhotoIcon color=\"primary\" />\n                        </IconButton>\n                    </Box>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"center\">\n                {\n                    props.photo.map((item: any, i: any) => (\n                        <Grid item xs={4} key={`img-file-${i}`}>\n                            <Box position=\"relative\">\n                                <img\n                                    className={classes.img}\n                                    src={item.preview}\n                                    alt={`img-file-${i}`}\n                                />\n                                <Box position=\"absolute\" top=\"-20px\" right=\"-20px\">\n                                    <IconButton\n                                        className={classes.deleteIcon}\n                                        onClick={() => deleteImg(i)}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </Grid>\n    )\n}\nexport default TextAreaAndUploadImg;","\nimport { makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    InputAdornment: {\n        '& p': {\n            width: 65\n        }\n    },\n    inputAdornment: {\n        '& p': {\n            width: 45\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111'\n    },\n    defaultImg: {\n        backgroundColor: '#000',\n        overflow: 'auto',\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        zIndex: 1000,\n        '& img': {\n            width: '100%',\n            height: 'auto'\n        }\n    }\n});\nexport default useStyles;","import {\n    SAVE_ASSESSER,\n    SAVE_COW,\n    SAVE_COWSHED,\n    SAVE_REVIEW_DETAIL,\n    SAVE_CONTENT,\n    ADD_CONTENT,\n    CLEAR_STATE\n} from './actionTypes';\n\ninterface Info {\n    value: string;\n    label: string;\n}\n\nexport const saveEstimator = (info: Info) => ({\n    type: SAVE_ASSESSER,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCow = (info: Info) => ({\n    type: SAVE_COW,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveCowshed = (info: Info) => ({\n    type: SAVE_COWSHED,\n    payload: {\n        ...info\n    }\n});\n\nexport const saveReviewDetail = (info: Info) => ({\n    type: SAVE_REVIEW_DETAIL,\n    payload: info\n});\n\nexport const saveContent = (info: Info) => ({\n    type: SAVE_CONTENT,\n    payload: info\n});\n\nexport const addContent = (info: Info) => ({\n    type: ADD_CONTENT,\n    payload: info\n});\n\nexport const clearState = (info: Info) => ({\n    type: CLEAR_STATE,\n    payload: info\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport {\n    Grid,\n    Box,\n    Container,\n    FormControl,\n    Input,\n    InputAdornment,\n    TextField,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n    Checkbox\n} from '@material-ui/core';\nimport {\n    // AddCircleOutline as AddCircleOutlineIcon,\n    CheckBox as CheckBoxIcon,\n    CheckBoxOutlineBlank as CheckBoxOutlineBlankIcon,\n    EventNote as EventNoteIcon\n} from '@material-ui/icons';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport { uploadImgs$, postAssessTeats$, postAssessFaecess$, postAssessBcss$, postAssessLocomotions$ } from '@/api';\nimport useStyles from './styles';\nimport {\n    CowType,\n    Teats,\n    BCS,\n    Results,\n    RanchType,\n    ReviewType,\n    CowBreastPosition,\n    validateReviewType,\n    formatReviewType\n} from './config';\n\nimport { saveReviewDetail, saveContent, addContent, clearState } from './redux/actions';\nimport { showMessage } from '@/redux/actions';\nimport Viewer from 'viewerjs';\nimport 'viewerjs/dist/viewer.css';\n// import { from } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\ninterface ReviewType {\n    0: string;\n    1: string;\n    2: string;\n    3: string;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ReviewDetail: React.FC = (props: any) => {\n\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [defaultImgShow, setDefaultImgShow] = React.useState(false);\n    \n    const { ranchType, reviewType }: { ranchType: string, reviewType: keyof ReviewType  } = props.match.params;\n    const isCowNo = +reviewType !== 3; // 是否是牛号\n    const isTK = +reviewType === 2; // 是否是体况评分\n    const LabelText: string = `${ReviewType[reviewType]}-业务备注`;\n    const ResultsList = isTK ? BCS : Results;\n    \n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n    function handleUploadImgs() {\n        // const photoArr = props.content.map((contentItem: any) => contentItem.photo);\n        // const rxOb: FormData[] = photoArr.map((item: any) => {\n        //     const formdata: FormData = new FormData();\n        //     item.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        //     return formdata;\n        // });\n        // const uploadImgObser =  from(rxOb).pipe(\n        //     concatMap(formdata => {\n        //         return formdata.has('imgs') ? uploadImgs$(formdata) : Promise.resolve({ response: { upload_imgs: []} });\n        //     }),\n        //     map(({ response }) => response)\n        // );\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const OperaFuncMap: ReviewDetail.FetchFunc = {\n            0: postAssessTeats$,\n            1: postAssessLocomotions$,\n            2: postAssessBcss$,\n            3: postAssessFaecess$\n        };\n        const hasError = validateReviewType[reviewType](props);\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        setPostLoading(true);\n        const retData: any = formatReviewType[reviewType](props);\n        const uploadImgOb$ = handleUploadImgs();\n        const postAssessTeatsInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                const OperaFunc = OperaFuncMap[reviewType];\n                return OperaFunc(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                postAssessTeatsInst.unsubscribe();\n            }\n        );\n    };\n\n    useEffect(() => {\n        let viewer: any = null;\n        if(defaultImgShow) {\n            const image = new Image();\n            image.src = require('@/views/review-detail/default.png');\n            viewer = new Viewer(image, {\n                toolbar: false,\n                navbar: false,\n                hidden: function () {\n                    viewer.destroy();\n                    setDefaultImgShow(defaultImgShow => !defaultImgShow)\n                },\n            });\n            viewer.show();\n        }\n        return () => viewer && viewer.destroy()\n    }, [defaultImgShow]);\n\n    return (\n        <React.Fragment>\n            <AppBar\n                title={`${RanchType[ranchType]}-${ReviewType[reviewType]}`}\n                beforeRouteLeave={beforeRouteLeave}\n                endAdorment={\n                    <If condition={+reviewType === 0}>\n                        <IconButton\n                            onClick={() => setDefaultImgShow(!defaultImgShow)}\n                        >\n                            <EventNoteIcon color=\"secondary\" />\n                        </IconButton>\n                    </If>\n                }\n            />\n            <Container className={classes.root}>\n                <FormControl fullWidth>\n                    <Input\n                        value={props.assesser.label}\n                        placeholder=\"点击选择评估人姓名\"\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        startAdornment={<InputAdornment className={classes.InputAdornment} position=\"start\">评估人:</InputAdornment>}\n                    />\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"评估日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate}\n                            onChange={date => props.saveReviewDetail({assessDate: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            // disabled\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <TextAreaAndUploadImg\n                    labelText={LabelText}\n                    photo={props.photo}\n                    note={props.note}\n                    saveReviewDetail={props.saveReviewDetail}\n                    textAreaRequired={false}\n                    uploadImgRequired={true}\n                />\n                <Box>\n                    <Box>\n                        <FormControl margin=\"dense\" fullWidth>\n                            <Input\n                                value={isCowNo ? props.cow.label : props.cowshed.label}\n                                onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}`)}\n                                placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                startAdornment={\n                                    (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                        <Required />牛{ isCowNo ? '号' : '舍'}:\n                                    </InputAdornment>)\n                                }\n                                endAdornment={\n                                    (<If condition={+reviewType === 3}>\n                                        <InputAdornment position=\"end\">#</InputAdornment>\n                                    </If>)\n                                }\n                            />\n                        </FormControl>\n                        <Choose>\n                            <When condition={+reviewType !== 0}>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />类型:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            cowType: e.target.value\n                                        })}\n                                        value={props.cowType}\n                                    >\n                                        {CowType.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                                <FormControl margin=\"dense\" fullWidth>\n                                    <TextField\n                                        select\n                                        InputProps={{\n                                            startAdornment: (\n                                                <InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    <p>\n                                                        <Required />结果:\n                                                    </p>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onChange={e => props.saveReviewDetail({\n                                            results: e.target.value\n                                        })}\n                                        value={props.results}\n                                    >\n                                        {ResultsList.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </FormControl>\n                            </When>\n                            {/* 乳头评分 */}\n                            <Otherwise>\n                                <Grid container spacing={1}>\n                                    {\n                                        CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                            <Grid item xs={6} key={position.key}>\n                                                <FormControl margin=\"dense\" fullWidth>\n                                                    <TextField\n                                                        select\n                                                        InputProps={{\n                                                            startAdornment: (\n                                                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                                                    <p>\n                                                                        <Required />{position.label + ':'}\n                                                                    </p>\n                                                                </InputAdornment>\n                                                            ),\n                                                        }}\n                                                        onChange={e => props.saveReviewDetail({\n                                                            [position.key]: e.target.value\n                                                        })}\n                                                        value={props[position.key]}\n                                                    >\n                                                        {Teats.map(option => (\n                                                            <MenuItem key={option.value} value={option.value}>\n                                                                {option.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                </FormControl>\n                                            </Grid>\n                                        ))\n                                    }\n                                </Grid>\n                            </Otherwise>\n                        </Choose>\n                    </Box>\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <React.Fragment key={`content-item-${index}`}>\n                            <TextAreaAndUploadImg\n                                labelText={LabelText}\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                            <Box>\n                                <Box>\n                                    <FormControl margin=\"dense\" fullWidth>\n                                        <Input\n                                            value={isCowNo ? contentItem.cow.label : contentItem.cowshed.label}\n                                            onFocus={() => props.history.push(`/commonSelectList/${isCowNo ? 'cow' : 'cowshed'}?index=${index}`)}\n                                            placeholder={`请选择牛${ isCowNo ? '' : '舍'}号`}\n                                            startAdornment={\n                                                (<InputAdornment className={classes.InputAdornment} position=\"start\">\n                                                    牛{ isCowNo ? '号' : '舍'}:\n                                                </InputAdornment>)\n                                            }\n                                            endAdornment={\n                                                (<If condition={+reviewType === 3}>\n                                                    <InputAdornment position=\"end\">#</InputAdornment>\n                                                </If>)\n                                            }\n                                        />\n                                    </FormControl>\n                                    <Choose>\n                                        <When condition={+reviewType !== 0}>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">类型:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        cowType: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem.cowType}\n                                                >\n                                                    {CowType.map(option => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                            <FormControl margin=\"dense\" fullWidth>\n                                                <TextField\n                                                    select\n                                                    InputProps={{\n                                                        startAdornment: <InputAdornment className={classes.InputAdornment} position=\"start\">结果:</InputAdornment>,\n                                                    }}\n                                                    onChange={e => props.saveContent({\n                                                        [isTK ? 'locomotionScore' : 'results']: e.target.value,\n                                                        index\n                                                    })}\n                                                    value={contentItem[isTK ? 'locomotionScore' : 'results']}\n                                                >\n                                                    {ResultsList.map((option: any) => (\n                                                        <MenuItem key={option.value} value={option.value}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </FormControl>\n                                        </When>\n                                        <Otherwise>\n                                            <Grid container spacing={1}>\n                                                {\n                                                    CowBreastPosition.map((position: ReviewDetail.CowBreastPositionItem) => (\n                                                        <Grid item xs={6} key={position.key}>\n                                                            <FormControl margin=\"dense\" fullWidth>\n                                                                <TextField\n                                                                    select\n                                                                    InputProps={{\n                                                                        startAdornment: <InputAdornment className={classes.inputAdornment} position=\"start\">{position.label + ':'}</InputAdornment>,\n                                                                    }}\n                                                                    onChange={e => props.saveContent({\n                                                                        [position.key]: e.target.value,\n                                                                        index\n                                                                    })}\n                                                                    value={contentItem[position.key]}\n                                                                >\n                                                                    {Teats.map(option => (\n                                                                        <MenuItem key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </MenuItem>\n                                                                    ))}\n                                                                </TextField>\n                                                            </FormControl>\n                                                        </Grid>\n                                                    ))\n                                                }\n                                            </Grid>\n                                        </Otherwise>\n                                    </Choose>\n                                </Box>\n                            </Box>\n                        </React.Fragment>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    {/* <Box>已经生成n条事件/您没有事件录入权限</Box> */}\n                    <FormControlLabel\n                        className={classes.btnContainer}\n                        control={\n                            <Checkbox\n                                // className={classes.btnContainer}\n                                checked={props.add_event}\n                                onChange={e => props.saveReviewDetail({\n                                    add_event: e.target.checked\n                                })}\n                                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                                value=\"add_event\"\n                                color=\"primary\"\n                            />\n                        }\n                        classes={{label: classes.btnContainer}}\n                        label=\"是否生成UniDairy事件\"\n                    />\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        loading={postLoading}\n                        className={classes.btnMargin}\n                    />\n                </Box>\n            </Container>\n        </React.Fragment>\n    )\n}\nexport default connect(mapStateToProps, { saveReviewDetail, saveContent, addContent, clearState, showMessage })(ReviewDetail);","import {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 60,\n        height: '100vh',\n        overflowY: 'auto'\n    },\n    inputAdornment: {\n        '& p': {\n            width: 75\n        }\n    },\n    inputAdornment2: {\n        '& p': {\n            width: 92\n        }\n    },\n    flexbox: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btnMargin: {\n        marginTop: 0\n    },\n    btnContainer: {\n        fontSize: 12,\n        lineHeight: 1,\n        color: '#111',\n        marginTop: 20\n    }\n});\nexport default useStyles;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Container,\n    FormControl,\n    TextField,\n    InputAdornment,\n    MenuItem,\n    Input,\n    Box\n} from '@material-ui/core';\n// import {\n//     AddCircleOutline as AddCircleOutlineIcon\n// } from '@material-ui/icons';\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n} from '@material-ui/pickers';\nimport { map, concatMap } from 'rxjs/operators';\nimport LuxonUtils from \"@date-io/luxon\";\nimport AppBar from '@/components/app-bar';\nimport useStyles from './styles';\nimport { fetchTodoTaskTypes$, uploadImgs$, postMTodoTasks$ } from '@/api';\nimport { \n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\nimport { showMessage } from '@/redux/actions';\nimport Button from '@/components/button';\nimport Required from '@/components/required';\n\nconst RanchType: any = {\n    ald: 'UniDairy牧场',\n    society: '社会牧场'\n};\n\nconst mapStateToProps = (state: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst ViewCowshed: React.FC = (props: any) => {\n    const { ranchType } = props.match.params;\n    const classes = useStyles();\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [TypeList, setTypeList] = useState([]);\n    const [SubTypeList, setSubTypeList] = useState([]);\n    const TitleText: string = `${RanchType[ranchType]}-牛舍巡棚`;\n\n    const beforeRouteLeave = () => {\n        props.clearState();\n    };\n\n    function handleUploadImgs() {\n        const formdata: FormData = new FormData();\n        props.photo.forEach((imgFile: any) => formdata.append('imgs', imgFile));\n        const uploadImgObser =  uploadImgs$(formdata).pipe(\n            map(({ response }) => response.upload_imgs)\n        );\n        return uploadImgObser;\n    };\n    const handleSubmit = () => {\n        if(postLoading) return;\n        const hasError = !props.type || !props.sub_type || !props.note || !props.photo.length || !props.cowshed.value;\n        if (hasError) {\n            console.log('hasError', '存在必填项为填写');\n            props.showMessage({\n                variant: 'warning',\n                open: true,\n                message: '存在未填充的必填项!'\n            });\n            return;\n        }\n        const retData = {\n            type: props.type,\n            sub_type: props.sub_type,\n            location: props.cowshed.value,\n            content: props.note,\n            photo: props.photo.toString(),\n            tasker: props.assesser.value,\n            start_time: props.assessDate2,\n            note: props.note\n        };\n        setPostLoading(true);\n        const uploadImgOb$ = handleUploadImgs();\n        const apiInst = uploadImgOb$.pipe(\n            concatMap(upload_imgs => {\n                retData.photo = upload_imgs.toString();\n                return postMTodoTasks$(JSON.stringify(retData));\n            })\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                props.showMessage({\n                    variant: 'success',\n                    open: true,\n                    message: '操作成功'\n                });\n                beforeRouteLeave();\n            },\n            error => {\n                console.error('error', error);\n                setPostLoading(false);\n            },\n            () => {\n                setPostLoading(false);\n                apiInst.unsubscribe();\n            }\n        );\n    };\n    React.useEffect(() => {\n        const activeTypeItem: any = TypeList.find((item: any) => +item.id === props.type);\n        const SubTypeList = activeTypeItem && activeTypeItem.sub_tasktypes;\n        setSubTypeList(SubTypeList || []);\n    }, [TypeList, props.type]);\n\n    React.useEffect(() => {\n        const ApiInst = fetchTodoTaskTypes$({page: 1, page_size:100}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            data => {\n                console.log('data', data);\n                setTypeList(data);\n            },\n            err => {\n                console.log('err', err)\n            },\n        );\n        return () => ApiInst.unsubscribe();\n    }, []);\n\n    return (\n        <div>\n            <AppBar title={TitleText} beforeRouteLeave={beforeRouteLeave} />\n            <Container className={classes.root}>\n                <FormControl margin=\"dense\" fullWidth>\n                    <Input\n                        onFocus={() => props.history.push('/commonSelectList/user')}\n                        value={props.assesser.label}\n                        placeholder=\"点击选择责任人\"\n                        startAdornment={\n                            <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                责任人:\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            type: e.target.value\n                        })}\n                        value={props.type}\n                    >\n                        {TypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl margin=\"dense\" fullWidth>\n                    <TextField\n                        select\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.inputAdornment2} position=\"start\">\n                                    <p>\n                                        <Required />子任务类型:\n                                    </p>\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => props.saveReviewDetail({\n                            sub_type: e.target.value\n                        })}\n                        value={props.sub_type}\n                    >\n                        {SubTypeList.map((option: any) => (\n                            <MenuItem key={option.id} value={option.id}>\n                                {option.task_name_lang}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </FormControl>\n                <FormControl fullWidth margin=\"normal\">\n                    <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                        <DatePicker\n                            id=\"mui-pickers-date\"\n                            label=\"巡棚日期\"\n                            format=\"yyyy-MM-dd\"\n                            value={props.assessDate2}\n                            onChange={date => props.saveReviewDetail({assessDate2: date})}\n                            okLabel=\"确定\"\n                            cancelLabel=\"取消\"\n                            shouldDisableDate={ day => {\n                                if (day === null) {\n                                    return true;\n                                }\n                                return day.toMillis() < props.assessDate.toMillis();\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </FormControl>\n                <Box>\n                    <FormControl margin=\"dense\" fullWidth>\n                        <Input\n                            value={props.cowshed.label}\n                            onFocus={() => props.history.push(`/commonSelectList/cowshed`)}\n                            placeholder=\"点击选择牛舍号\"\n                            startAdornment={\n                                <InputAdornment className={classes.inputAdornment} position=\"start\">\n                                    <p>\n                                        <Required />巡视点:\n                                    </p>\n                                </InputAdornment>\n                            }\n                            endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                        />\n                    </FormControl>\n                    <TextAreaAndUploadImg\n                        labelText='巡视点，问题描述'\n                        photo={props.photo}\n                        note={props.note}\n                        saveReviewDetail={props.saveReviewDetail}\n                        textAreaRequired={true}\n                        uploadImgRequired={true}\n                    />\n                </Box>\n                {/* {\n                    props.content.map((contentItem: any, index: number) => (\n                        <Box key={`content-item-${index}`}>\n                            <FormControl margin=\"dense\" fullWidth>\n                                <Input\n                                    value={contentItem.cowshed.label}\n                                    onFocus={() => props.history.push(`/commonSelectList/cowshed?index=${index}`)}\n                                    placeholder=\"点击选择牛舍号\"\n                                    startAdornment={<InputAdornment className={classes.inputAdornment} position=\"start\">巡视点:</InputAdornment>}\n                                    endAdornment={<InputAdornment position=\"end\" className={`${classes.inputAdornment} text-right`}>#犊牛舎</InputAdornment>}\n                                />\n                            </FormControl>\n                            <TextAreaAndUploadImg\n                                labelText='巡视点，问题描述'\n                                index={index}\n                                photo={contentItem.photo}\n                                note={contentItem.note}\n                                saveContent={props.saveContent}\n                            />\n                        </Box>\n                    ))\n                } */}\n                {/* <Box className={classes.flexbox}>\n                    <IconButton onClick={() => props.addContent()}>\n                        <AddCircleOutlineIcon color=\"primary\" />\n                    </IconButton>   \n                </Box> */}\n                <Box className={classes.btnContainer}>\n                    <Button\n                        btnText=\"提交\"\n                        onClick={() => handleSubmit()}\n                        className={classes.btnMargin}\n                        loading={postLoading}\n                    />\n                </Box>\n            </Container>\n        </div>\n    )\n};\nconst actions = {\n    saveContent,\n    clearState,\n    addContent,\n    saveReviewDetail,\n    showMessage\n};\nexport default connect(mapStateToProps,actions)(ViewCowshed);","\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 48\n    },\n    tableHeader: {\n        color: theme.palette.primary.main,\n    },\n    circularProgress: {\n        marginRight: 10\n    },\n    // tableItemWidth: {\n    //     width: '22vw'\n    // },\n    // tablePadding: {\n    //     padding: '14px 0px'\n    // }\n}));\nexport default useStyles;","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Box,\n    Paper,\n    CircularProgress\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { map } from 'rxjs/operators';\nimport AppBar from '@/components/app-bar';\nimport { getOnsiteAssessments$ } from '@/api';\nimport useStyles from './styles';\n\nconst SceneReport: React.FC<RouteComponentProps> = props => {\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const tableHeaderCls = clsx(classes.tableHeader);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                page: params.page + 1\n            });\n        }\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const ApiInst = getOnsiteAssessments$(params).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(List => List.concat(list));\n                setNext(data[1]);\n                setLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-清单\" />\n            <Paper square>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={tableHeaderCls} align=\"center\">人员</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">日期</TableCell>\n                            <TableCell className={tableHeaderCls} align=\"center\">类型</TableCell>\n                            {/* <TableCell className={tableHeaderCls} align=\"center\">详情</TableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {List.map((listItem: any) => (\n                            <TableRow\n                                key={listItem.id}\n                                onClick={() => props.history.push(`/sceneReportDetail?pdf=${encodeURIComponent(listItem.pdf)}`)}\n                            >\n                                <TableCell align=\"center\">{listItem.assessr_name}</TableCell>\n                                <TableCell align=\"center\">{listItem.assess_date}</TableCell>\n                                <TableCell align=\"center\">{listItem.assesstype_name}</TableCell>\n                                {/* <TableCell align=\"center\">\n                                    <a href={listItem.pdf} download className={classes.tableHeader}>\n                                        下载\n                                    </a>\n                                </TableCell> */}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n};\nexport default SceneReport;","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        paddingTop: 50,\n        paddingBottom: 70,\n        boxSizing: 'border-box',\n        minHeight: '100vh'\n    },\n    paper: {\n        margin: \"0 4vw\",\n        borderRadius: 5,\n        marginTop: 15,\n        padding: '10px 0',\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    infoItem: {\n        fontSize: 14,\n        lineHeight: 1.5,\n        color: '#111'\n    },\n    spanLeft: {\n        width: 70\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { Box, Paper, Grid, ButtonBase, Container, Link, CircularProgress } from '@material-ui/core';\nimport { Link as RouteLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport AppBar from '@/components/app-bar';\nimport { fetchCalfsList$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport useStyles from './styles';\n\nconst SearchCow: React.FC = props => {\n    const classes = useStyles();\n    const [params, setParams] = React.useState({\n        page: 1,\n        page_size: 10,\n        search: '',\n        fromMore: false\n    });\n    const [List, setList] = React.useState([]);\n    const [next, setNext] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [searchLoading, setSearchLoading] = React.useState(false);\n\n    const loadMore = () => {\n        if (next) {\n            setParams({\n                ...params,\n                fromMore: true,\n                page: params.page + 1\n            });\n        }\n    };\n    const handleSearch = (search: string) => {\n        setSearchLoading(true);\n        setParams({\n            ...params,\n            fromMore: false,\n            page: 1,\n            search\n        });\n    }\n    React.useEffect(() => {\n        setLoading(true);\n        const paramsClone = JSON.parse(JSON.stringify(params));\n        delete paramsClone.fromMore;\n        const ApiInst = fetchCalfsList$(paramsClone).pipe(\n            map(({response}) => response),\n            map(response => [response.results, response.next])\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                const list = data[0];\n                setList(List => params.fromMore ? List.concat(list) : list);\n                setNext(data[1]);\n                setLoading(false);\n                setSearchLoading(false);\n            },\n            error => {\n                setLoading(false);\n                setSearchLoading(false);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [params]);\n\n    return (\n        <Box className={clsx(classes.root, 'bg-gray')}>\n            <AppBar\n                title=\"查找牛只\"\n                useSearch\n                searchLoading={searchLoading}\n                searchPlaceholder=\"请输入牛号\"\n                getSearchValue={handleSearch}\n            />\n            {\n                List.map((item: any, i) => (\n                    <Link component={RouteLink} to={`/cowDetail/${item.id}?eartag=${item.eartag}`}  key={`cow-item-${i}`}>\n                        <Paper className={classes.paper} square>\n                            <Grid container>\n                                <Grid item xs={3} container justify=\"center\" alignItems=\"center\">\n                                    <Container>\n                                        <ButtonBase>\n                                            <img className={classes.img} alt=\"complex\" src={require('../../assets/images/default.jpg')} />\n                                        </ButtonBase>\n                                    </Container>\n                                </Grid>\n                                <Grid item xs>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>牛号:</span>\n                                        <span>{item.eartag}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>所属牛舎:</span>\n                                        <span>{item.pen_name}</span>\n                                    </div>\n                                    <div className={classes.infoItem}>\n                                        <span className={classes.spanLeft}>类型:</span>\n                                        <span>{item.cbrd || '暂无'}</span>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Link>\n                ))\n            }\n            <Choose>\n                <When condition={loading}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                        <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                    </Box>\n                </When>\n                <Otherwise>\n                    <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                        {next ? '点击加载更多' : '没有更多了'}\n                    </Box>\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n}\nexport default SearchCow;","import React from 'react';\nimport { Divider as MDivider } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Divider: React.FC = (props: any) => {\n    const theme = useTheme();\n    return (\n        <MDivider style={{ backgroundColor: theme.palette.primary.main }} />\n    )\n}\nexport default Divider","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        marginTop: 58\n    },\n    heading: {\n        fontSize: 14,\n        flexBasis: '45%',\n        flexShrink: 0,\n    },\n    infoItem: {\n        padding: '5px 0'\n    },\n    lastExpan: {\n        margin: '16px -16px!important',\n    },\n    lastDetail: {\n        overflowX: 'scroll',\n        paddingLeft: 0\n    },\n    tableCell: {\n        paddingRight: 10\n    },\n    tableHeader: {\n        color: theme.palette.primary.main\n    }\n}));\nexport default useStyles;","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Box,\n    Container,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Typography,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AppBar from '@/components/app-bar';\nimport Divider from '@/components/divider';\nimport useStyles from './styles';\nimport { fetchCalfsDetail$ as fetchData$ } from '@/api';\nimport { map } from 'rxjs/operators';\nimport url from \"url\";\n\nconst createData = (label: string, value: string | number) => ({ label, value });\nconst CowInfo = [\n    createData('牛号', 3080),\n    createData('牛区', 11),\n    createData('离场日期', ''),\n    createData('生日', '2013-06-07'),\n    createData('胎次', 5),\n    createData('胎次组', 3),\n    createData('母牛号', 30),\n    createData('父牛号', 380)\n];\nfunction createEventData(eventname: string, date: string, days: number, count: number, freeze: string, mark: string) {\n    return { eventname, date, days, count, freeze, mark };\n  }\n  \nconst eventData = [\n    createEventData('转群1转群1转群1转群1', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群2', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群3', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群4', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群5', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群6', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群7', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群8', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群9', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n    createEventData('转群10', '2019-06-17', 1000, 24, 'DNJSKWKWN', ''),\n];\nconst CowDetail: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const classes = useStyles();\n    const [Data, setData] = React.useState([]);\n    const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n    const { query } = url.parse(props.location.search, true);\n    const id = props.match.params.id;\n    \n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    React.useEffect(() => {\n        const ApiInst = fetchData$({id}).pipe(\n            map(({response}) => response)\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setData(data);\n            }\n        );\n        return () =>  ApiInst.unsubscribe();\n    }, [id]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title={`牛只详情-${query.eartag}`} />\n            <Container>\n                <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>牛只基本属性</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>胎次基本信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>DHI基本信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>奶厅基本信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel5'} onChange={handleChange('panel5')}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>发情监控信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Box width=\"100%\">\n                            {\n                                CowInfo.map((item, i) => (\n                                    <React.Fragment key={item.label}>\n                                        <Grid container className={classes.infoItem}>\n                                            <Grid item xs className=\"text-left\">\n                                                {item.label}\n                                            </Grid>\n                                            <Grid item xs className=\"text-right\">\n                                                {item.value}\n                                            </Grid>\n                                        </Grid>\n                                        {(i !== CowInfo.length-1) && <Divider />}\n                                    </React.Fragment>\n                                ))\n                            }\n                        </Box>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel expanded={expanded === 'panel6'} onChange={handleChange('panel6')}  className={expanded === 'panel6' ? classes.lastExpan : ''}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id=\"panel1bh-header\"    \n                    >\n                        <Typography className={classes.heading}>事件基本信息</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={expanded === 'panel6' ? classes.lastDetail : ''}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>事件</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>日期</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>天数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>本胎发生的次数</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>冻精</TableCell>\n                                    <TableCell className={clsx(classes.tableCell, classes.tableHeader)}>备注</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {eventData.map(row => (\n                                <TableRow key={row.eventname}>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.eventname}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.date}</TableCell>\n                                    <TableCell className={classes.tableCell}>{row.days}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '50px'}}>\n                                            {row.count}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell}>{row.freeze}</TableCell>\n                                    <TableCell className={classes.tableCell}>\n                                        <div style={{width: '80px'}}>\n                                            {row.mark}\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Container>\n        </Box>\n    )\n}\nexport default CowDetail;","import {\n    makeStyles\n} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 48\n    }\n});\nexport default useStyles;","import React, { useState, useEffect, useRef } from 'react';\nimport { usePdf } from 'react-pdf-js';\nimport { Box, Container } from '@material-ui/core';\nimport url from 'url';\nimport AppBar from '@/components/app-bar';\nimport useStyles from './styles';\n\nconst SceneReportDetail: React.FC<any> = props => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    // const [pages, setPages] = useState(null);\n   \n    // const renderPagination = (page: number, pages: any) => {\n    //   if (!pages) {\n    //     return null;\n    //   }\n    //   let previousButton = <li className=\"previous\" onClick={() => setPage(page - 1)}><a href=\"#\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    //   if (page === 1) {\n    //     previousButton = <li className=\"previous disabled\"><a href=\"#\"><i className=\"fa fa-arrow-left\"></i> Previous</a></li>;\n    //   }\n    //   let nextButton = <li className=\"next\" onClick={() => setPage(page + 1)}><a href=\"#\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    //   if (page === pages) {\n    //     nextButton = <li className=\"next disabled\"><a href=\"#\">Next <i className=\"fa fa-arrow-right\"></i></a></li>;\n    //   }\n    //   return (\n    //     <nav>\n    //       <ul className=\"pager\">\n    //         {previousButton}\n    //         {nextButton}\n    //       </ul>\n    //     </nav>\n    //   );\n    // };\n    const canvasEl = useRef(null);\n    const { query } = url.parse(props.location.search, true);\n    // const pdfUrl = decodeURIComponent(String(query.pdf || ''));\n\n    const [loading, numPages] = usePdf({\n        file: require('@/views/scene-report-detail/a.pdf'),\n        // onDocumentComplete,\n        page,\n        canvasEl\n    });\n\n    // useEffect(() => {\n    //     setPages(numPages);\n    // },[numPages]);\n\n    return (\n        <Box className={classes.root}>\n            <AppBar title=\"现场报告-明细\" />\n            <Container>\n                {loading && <span>Loading...</span>}\n                <canvas ref={canvasEl} style={{width: '100vw', height: 'auto'}} />\n                {/* {renderPagination(page, pages)} */}\n            </Container>\n        </Box>\n    )\n};\nexport default SceneReportDetail;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    contentContainer: {\n        marginTop: 50,\n        height: '80vh',\n        overflow: 'auto'\n    },\n    circularProgressba: {\n        width: 50\n    },\n    circularProgress: {\n        marginRight: 10\n    }\n}));\nexport default useStyles;","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from '@/components/app-bar';\nimport { Observable } from 'rxjs';\nimport { AjaxResponse } from 'rxjs/ajax';\nimport { map, pluck } from 'rxjs/operators';\nimport {\n    Box,\n    ButtonGroup,\n    Button,\n    CircularProgress,\n    Container,\n    FormControl,\n    RadioGroup,\n    FormControlLabel,\n    Radio\n} from '@material-ui/core';\nimport {\n    fetchUsersList$,\n    fetchCowlitesList$,\n    fetchPensList$\n} from '@/api';\nimport useStyles from './styles';\nimport { \n    saveContent,\n    saveReviewDetail\n} from '@/views/review-detail/redux/actions';\n// import url from \"url\";\n\ninterface FetchFunc {\n    [index:string]: (params: object) => Observable<AjaxResponse>;\n}\ninterface IndexMap {\n    [index: string]: string;\n}\ninterface IProps extends RouteComponentProps<{type: string}> {\n    saveContent: (params: object) => void;\n    saveReviewDetail: (params: object) => void;\n    value: string;\n}\n\nconst Type: any = {\n    'user': '选择评估人',\n    'cow': '选择牛只',\n    'cowshed': '选择牛舍'\n};\nconst FetchFunc: FetchFunc = {\n    'user': fetchUsersList$,\n    'cow': fetchCowlitesList$,\n    'cowshed': fetchPensList$,\n};\nconst mapStateToProps = (state: any, ownProps: any) => {\n    return {\n        ...state.reviewDetailStore\n    }\n};\n\nconst CommonSelectList: React.FC<IProps> = props => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    const [itemValue, setItemValue] = useState('');\n    const [next, setNext] = React.useState(null);\n    const [list, setList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    // const [searchValue, setSearchValue] = useState('');\n    const type: string = props.match.params.type;\n    const Label = Type[type];\n\n    const loadMore = () => {\n        if (next) {\n            setPage(page + 1);\n        }\n    };\n    const handleSelectItem = (e: any) => {\n        setItemValue(e.target.value);\n    };\n    const handleConfirm = () => {\n        if(!itemValue) return;\n        // const { query } = url.parse(props.location.search, true);\n        const item: any = list.find((item: any) => item.id === itemValue);\n        const StoreMap: IndexMap = {\n            'user': 'assesser',\n            'cow': 'cow',\n            'cowshed': 'cowshed'\n        };\n        const Params = {\n            [StoreMap[type]]: {\n                label: item.label,\n                value: itemValue\n            },\n            // index: query.index\n        };\n        // const operaFunc = type === 'user' ? props.saveReviewDetail : props.saveContent;\n        // operaFunc(Params);\n        props.saveReviewDetail(Params);\n        props.history.goBack();\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        const Params: any = {\n            page,\n            page_size: 5\n        };\n        // if(searchValue) {\n        //     Params.search = searchValue;\n        // }\n        const ApiInst = FetchFunc[type](Params).pipe(\n            pluck('response'),\n            map(response => [response.results, response.next]),\n            map(([results, next]) => [results.map((item: any) => ({...item, id: String(item.id)})), next]),\n            map(([results, next]) =>{\n                const LabelMap: IndexMap = {\n                    'user': 'username',\n                    'cow': 'eartag',\n                    'cowshed': 'pen_name'\n                };\n                return [\n                    results.map((item: any) => ({...item, label: item[LabelMap[type]]})),\n                    next\n                ]\n            })\n        ).subscribe(\n            (data: any) => {\n                console.log('data', data);\n                setList(list => list.concat(data[0]));\n                setNext(data[1]);\n                setLoading(false);\n            },\n            error => {\n                console.log('error', error);\n            }\n        );\n        return  () => ApiInst.unsubscribe();\n    }, [page, type]);\n    return (\n        <Box>\n            <AppBar\n                title={Label}\n                // useSearch\n                // searchPlaceholder=\"请输入要搜索的内容\"\n                // getSearchValue={setSearchValue}\n            />\n            <Container className={classes.contentContainer} >\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        aria-label=\"position\"\n                        name=\"position\"\n                        value={itemValue}\n                        onChange={handleSelectItem}\n                    >\n                        {\n                            list.map((item: any) => (\n                                <FormControlLabel\n                                    key={item.id}\n                                    value={item.id}\n                                    control={<Radio color=\"primary\" />}\n                                    label={item.label}\n                                    labelPlacement=\"end\"\n                                />\n                            ))\n                        }\n                    </RadioGroup>\n                </FormControl>\n                <Choose>\n                    <When condition={loading}>\n                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className=\"text-center\" marginTop=\"20px\" fontSize=\"12px\">\n                            <CircularProgress size={15} className={classes.circularProgress} />正在加载中...\n                        </Box>\n                    </When>\n                    <Otherwise>\n                        <Box className=\"text-center\" marginTop=\"20px\" onClick={() => loadMore()} fontSize=\"12px\">\n                            {next ? '点击加载更多' : '没有更多了'}\n                        </Box>\n                    </Otherwise>\n                </Choose>\n            </Container>\n            <Box position=\"fixed\" left={15} right={15} bottom={15}>\n                <ButtonGroup\n                    fullWidth\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    aria-label=\"选择一项\"\n                    onClick={() => handleConfirm()}\n                >\n                    <Button>\n                        确定\n                    </Button>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\nexport default connect(mapStateToProps, { saveContent, saveReviewDetail })(CommonSelectList);","import React, { useState } from 'react';\nimport {\n    Container,\n    IconButton,\n    Box,\n    Paper,\n    Grid,\n    FormControl,\n    InputLabel,\n    InputAdornment,\n    Input\n} from '@material-ui/core';\nimport {\n    Settings as SettingsIcon,\n    Done as DoneIcon,\n    PermIdentity,\n    Assignment,\n    NearMe,\n    Smartphone\n} from '@material-ui/icons';\nimport {\n    makeStyles\n} from '@material-ui/styles';\nimport AppBar from '@/components/app-bar';\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 60\n    },\n    label: {\n        fontSize: 12,\n        color: '#111'\n    },\n    flexbox: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    paper: {\n        marginTop: 20\n    },\n    infoContent: {\n        fontSize: 14,\n        padding: '10px 10px 10px 0'\n    },\n    input: {\n        padding: '10px 0'\n    },\n    formControl: {\n        marginTop: '20px!important'\n    }\n});\n\nconst editInfoArr: editInfoArrItem[] = [\n    {\n        label: '个性介绍',\n        icon: <PermIdentity color=\"primary\" />,\n        key: 'userDesc'\n    },\n    {\n        label: '公司名称',\n        icon: <Assignment color=\"primary\" />,\n        key: 'companyName'\n    },\n    {\n        label: '公司地址',\n        icon: <NearMe color=\"primary\" />,\n        key: 'companyAddress'\n    },\n    {\n        label: '联系方式',\n        icon: <Smartphone color=\"primary\" />,\n        key: 'mobileNumber'\n    }\n];\ninterface State {\n    userDesc: string;\n    companyName: string;\n    companyAddress: string;\n    mobileNumber: string;\n}\ninterface editInfoArrItem {\n    label: string;\n    icon: JSX.Element;\n    key: keyof State;\n}\nconst User: React.FC = props => {\n    const [editState, setEditState] = useState(false);\n    const classes = useStyles();\n    const [editInfo, setEditInfo] = useState<State>({\n        userDesc: '清风雨露一相逢便胜却人间无数',\n        companyName: 'UniDairy科技有限公司',\n        companyAddress: '北京市海淀区某某路',\n        mobileNumber: '18888888888'\n    });\n    const handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEditInfo({...editInfo, [name]: event.target.value})\n    }\n    return (\n        <Container className={classes.root}>\n            <AppBar\n                title=\"个人信息\"\n                endAdorment={\n                    (<IconButton onClick={() => setEditState(!editState)} className=\"text-white\">\n                        <Choose>\n                            <When condition={editState}>\n                                <DoneIcon />\n                            </When>\n                            <Otherwise>\n                                <SettingsIcon />\n                            </Otherwise>\n                        </Choose>\n                    </IconButton>)\n                }\n            />\n            <Box>\n                {\n                    editInfoArr.map((item: editInfoArrItem) => (\n                        <Choose>\n                            <When condition={!editState}>\n                                <Paper className={classes.paper} key={item.key}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={2} className={classes.flexbox}>\n                                            <IconButton>\n                                                {item.icon}\n                                            </IconButton>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Box className={classes.label}>\n                                                {item.label}\n                                            </Box>\n                                            <Box className={classes.infoContent}>\n                                                {editInfo[item.key]}\n                                            </Box>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </When>\n                            <Otherwise>\n                                <FormControl fullWidth margin=\"dense\" key={item.key} className={classes.formControl}>\n                                    <InputLabel\n                                        htmlFor={item.key}\n                                    >\n                                        {item.label}\n                                    </InputLabel>\n                                    <Input\n                                        id=\"input-with-icon-adornment\"\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                {item.icon}\n                                            </InputAdornment>\n                                        }\n                                        multiline\n                                        className={classes.formControl}\n                                        value={editInfo[item.key]}\n                                        onChange={handleChange(item.key)}\n                                    />\n                                </FormControl>\n                            </Otherwise>\n                        </Choose>\n                    ))\n                }\n            </Box>\n        </Container>\n    )\n};\nexport default User;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: any) => ({\n    container: {\n        marginTop: 60,\n        padding: '0 10px',\n        overflowY: 'auto',\n        position: 'relative',\n        paddingBottom: 30\n    },\n    listItem: {\n        padding: '5px 0'\n    },\n    btnMargin: {\n        marginTop: 20\n    },\n    doneState: {\n        position: 'absolute',\n        top: 20,\n        right: '10%'\n    },\n    donePhoto: {\n        display: 'block',\n        width: '100%',\n        height: 'auto'\n    }\n}));\nexport default useStyles;","import { uploadImgs$, uploadFiles$ } from '@/api';\nimport { of } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\ntype KeyWord = 'imgs' | 'files'\ninterface Params {\n    files: File[];\n    keyWord: KeyWord;\n}\nexport default function commonUpload(params:  Params) {\n    const {keyWord, files} = params;\n    if (!files.length) return of(keyWord);\n    \n    const Api$ = {\n        'imgs': uploadImgs$,\n        'files': uploadFiles$\n    };\n    const formData: FormData = new FormData();\n\n    files.forEach((file: File) => formData.append(keyWord, file));\n\n    return Api$[keyWord](formData).pipe(\n        pluck('response')\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Box, Grid, Divider, FormControl, IconButton } from '@material-ui/core';\nimport { AttachFile } from '@material-ui/icons';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n    MaterialUiPickersDate\n} from '@material-ui/pickers';\nimport LuxonUtils from \"@date-io/luxon\";\nimport { DateTime } from 'luxon';\nimport Dropzone from 'react-dropzone';\nimport { CloudUpload, InsertDriveFile } from '@material-ui/icons';\nimport useStyles from './styles';\nimport AppBar from '@/components/app-bar';\nimport TextAreaAndUploadImg from '@/components/textarea-upload-img';\nimport Button from '@/components/button';\nimport commonUpload from '@/hooks/useUpload';\nimport { todotaskruns$ } from '@/api';\nimport { zip, Subscription } from 'rxjs';\nimport { finalize, mergeMap } from 'rxjs/operators';\nimport { clone, ifElse, isNil, defaultTo, pipe, prop, join } from 'ramda';\nimport DoneState from '@/components/done-state';\nimport Viewer from 'viewerjs';\nimport 'viewerjs/dist/viewer.css';\n\ninterface DoneForm {\n    done_date: null | MaterialUiPickersDate | DateTime;\n    done_status: boolean;\n    done_content: string;\n    done_attachment: string;\n    done_photos: string;\n}\nlet gallery: any = null;\n\nconst TaskDetail2: React.FC<RouteComponentProps<{id: string}>> = props => {\n    const ShareList = [\n        {\n            label: '任务名称',\n            prop: 'todotask_name'\n        },\n        {\n            label: '责任人',\n            prop: 'tasker_name'\n        },\n        {\n            label: '地点描述',\n            prop: 'location'\n        },\n        {\n            label: '任务描述',\n            prop: 'content'\n        },\n        {\n            label: '目标',\n            prop: 'target'\n        }\n    ];\n    const DoneList = [\n        {\n            label: '完工日期',\n            prop: 'done_date'\n        },\n        {\n            label: '完工描述',\n            prop: 'done_content'\n        }\n    ];\n    const classes = useStyles();\n    const detailInfo = useSelector((state: any) => state.TaskDetail2)\n    const [doneForm, setDoneForm] = useState<DoneForm>({\n        done_date: null,\n        done_status: true,\n        done_content: '',\n        done_attachment: '',\n        done_photos: ''\n    });\n    const [postLoading, setPostLoading] = React.useState(false);\n    const [photo, setPhoto] = useState([]);\n    const [files, setFiles] = useState<File[]>([]);\n    const [viewImage, setViewImage] = useState(false);\n    const dispatch = useDispatch();\n\n    const handleDateChange = (date: null | MaterialUiPickersDate) => {\n        setDoneForm({\n            ...doneForm,\n            done_date: date\n        });\n    };\n    const getNoteAndImg = (data: any) => {\n        if ('note' in data) {\n            setDoneForm({\n                ...doneForm,\n                done_content: data.note\n            });\n        }\n        if ('photo' in data) {\n            setPhoto(data.photo);\n        }\n    };\n    const handleSubmit = () => setPostLoading(true);\n    const handleViewImage = () => setViewImage(true);\n\n    useEffect(() => {\n        let apiSub: Subscription;\n\n        if (postLoading) {\n            const uploadImgsObser = commonUpload({files: photo, keyWord: 'imgs'});\n            const uploadFileObser = commonUpload({files: files, keyWord: 'files'});\n            const params = clone(doneForm);\n\n            apiSub = zip(\n                uploadImgsObser,\n                uploadFileObser\n            ).pipe(\n                mergeMap(val => {\n                    const formatParam = (propName: string) => ifElse(\n                        isNil,\n                        defaultTo(''),\n                        pipe(\n                            prop(propName),\n                            join(',')\n                        )\n                    );\n                    const [imgs, files] = val.filter(item => typeof item === 'object');\n                    \n\n                    params.done_photos = formatParam('upload_imgs')(imgs);\n                    params.done_attachment = formatParam('upload_files')(files);\n                    params.done_date = ifElse(\n                        isNil,\n                        defaultTo(null),\n                        (date: DateTime) => date.toISODate()\n                    )(doneForm.done_date);\n                    \n                    return todotaskruns$({...params, id: props.match.params.id});\n                }),\n                finalize(() => setPostLoading(false))\n            ).subscribe(\n                () => {\n                    dispatch({\n                        type: 'SAVE_TASK_DETAIL2',\n                        payload: {\n                            done_status: true,\n                            done_status_label: '已完成',\n                            ...params\n                        }\n                    });\n                },\n                error => console.error(error)\n            );\n        }\n        return () => {\n            apiSub && apiSub.unsubscribe();\n        }\n    }, [postLoading, doneForm, photo, files, dispatch, props.match.params.id]);\n    \n    useEffect(()=> {\n        if (viewImage) {\n            gallery.show();\n        }\n    }, [viewImage]);\n\n    useEffect(() => {\n        const elements = document.getElementById('images');\n        gallery = elements && new Viewer(elements, {\n            hidden: function () {\n                setViewImage(() => false);\n            }\n        });\n        return () => {\n            gallery && gallery.destroy();\n            gallery = null;\n        };\n    }, []);\n\n    return (\n        <Box className={classes.container}>\n            <AppBar title=\"任务单详情\" />\n            <DoneState\n                done_state_label={detailInfo.done_status_label}\n                done_state={detailInfo.done_status ? 1 : 2}\n                className={classes.doneState}\n            />\n            {\n                ShareList.map(item => (\n                    <Box key={item.prop}>\n                        <Grid container className={classes.listItem}>\n                            <Grid item xs={3} >\n                                {item.label}:\n                            </Grid>\n                            <Grid item xs={9}>\n                                {detailInfo[item.prop] || '无'}\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                    </Box>\n                ))\n            }\n            <Grid container className={classes.listItem}>\n                <Grid item xs={3} >\n                    附件:\n                </Grid>\n                <Grid item xs={9} >\n                    <Choose>\n                        <When condition={detailInfo.attachment}>\n                            <Grid container spacing={1} >\n                                {\n                                    detailInfo.attachment.split(',').map((item: string, i: number) => (\n                                        <Grid item xs={4} key={`attachment-${i}`} >\n                                            <a href={item} download>\n                                                <IconButton style={{padding: 0}}>\n                                                    <AttachFile color=\"primary\" />\n                                                </IconButton>\n                                            </a>\n                                        </Grid>\n                                    ))\n                                }\n                            </Grid>\n                        </When>\n                        <Otherwise>\n                            无\n                        </Otherwise>\n                    </Choose>\n                </Grid>\n            </Grid>\n            <Divider />\n            <Choose>\n                <When condition={detailInfo.done_status}>\n                    {\n                        DoneList.map(item => (\n                            <Box key={item.prop}>\n                                <Grid container className={classes.listItem}>\n                                    <Grid item xs={3}>\n                                        {item.label}:\n                                    </Grid>\n                                    <Grid item xs={9}>\n                                        {detailInfo[item.prop] || '无'}\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                            </Box>\n                        ))\n                    }\n                    \n                    <Grid container className={classes.listItem}>\n                        <Grid item xs={3} >\n                            完工附件:\n                        </Grid>\n                        <Grid item xs={9} >\n                            <Choose>\n                                <When condition={detailInfo.done_attachment}>\n                                    <Grid container spacing={1} >\n                                        {\n                                            detailInfo.done_attachment.split(',').map((item: string, i: number) => (\n                                                <Grid item xs={6} key={`done-attachment-${i}`} >\n                                                    <a href={item} download>\n                                                        <IconButton style={{padding: 0}}>\n                                                            <AttachFile color=\"primary\" />\n                                                        </IconButton>\n                                                        <span>\n                                                            附件{ i + 1 }\n                                                        </span>\n                                                    </a>\n                                                </Grid>\n                                            ))\n                                        }\n                                    </Grid>\n                                </When>\n                                <Otherwise>\n                                    无\n                                </Otherwise>\n                            </Choose>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid container className={classes.listItem}>\n                        <Grid item xs={3} >\n                            完工照片:\n                        </Grid>\n                        <Grid item xs={9} >\n                            <Choose>\n                                <When condition={detailInfo.done_photos}>\n                                    <Grid container spacing={1} id=\"images\" >\n                                        \n                                        {\n                                            detailInfo.done_photos.split(',').map((item: string, i: number) => (\n                                                <Grid item xs={4} key={`done-photo-${i}`} onClick={handleViewImage} >\n                                                    <img src={item} className={classes.donePhoto} alt=\"完工照片\" />\n                                                </Grid>\n                                            ))\n                                        }\n                                    </Grid>\n                                </When>\n                                <Otherwise>\n                                    无\n                                </Otherwise>\n                            </Choose>\n                        </Grid>\n                    </Grid>\n                </When>\n                <Otherwise>\n                    <FormControl fullWidth margin=\"normal\">\n                        <MuiPickersUtilsProvider utils={LuxonUtils} locale=\"zh-cn\">\n                            <DatePicker\n                                id=\"mui-pickers-date\"\n                                label=\"完工日期\"\n                                format=\"yyyy-MM-dd\"\n                                value={doneForm.done_date}\n                                onChange={handleDateChange}\n                                okLabel=\"确定\"\n                                cancelLabel=\"取消\"\n                                clearable\n                                clearLabel=\"清除\"\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormControl>\n                    <Box style={{paddingBottom: '10px'}}>\n                        <TextAreaAndUploadImg\n                            labelText=\"完工描述\"\n                            photo={photo}\n                            note={doneForm.done_content}\n                            saveReviewDetail={getNoteAndImg}\n                            textAreaRequired={false}\n                            uploadImgRequired={false}\n                        />\n                    </Box>\n                    <Divider />\n                    <Box style={{marginTop: '20px'}}>\n                        <Dropzone onDrop={acceptedFiles => setFiles(acceptedFiles)}>\n                            {({getRootProps, getInputProps}) => (\n                                <section>\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <Grid container  spacing={1}>\n                                        <Grid item>\n                                            <span>上传附件:</span>\n                                        </Grid>\n                                        <Grid item>\n                                            <CloudUpload color=\"primary\" />\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                </section>\n                            )}\n                        </Dropzone>\n                    </Box>\n                    <Box className=\"mt-5\">\n                        {\n                            files.map((item: any) => (\n                                <Grid container key={item.name} spacing={1}>\n                                    <Grid item>\n                                        <InsertDriveFile color=\"primary\" />\n                                    </Grid>\n                                    <Grid item>\n                                        {item.name}\n                                    </Grid>\n                                </Grid>\n                            ))\n                        }\n                    </Box>\n                    <If condition={files.length}>\n                        <Divider />\n                    </If>\n                    <Button\n                        btnText=\"完工\"\n                        onClick={handleSubmit}\n                        loading={postLoading}\n                        className={classes.btnMargin}\n                    />\n                </Otherwise>\n            </Choose>\n        </Box>\n    )\n}\nexport default TaskDetail2","import React, { useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst rootElement: any = document.getElementById('root');\n\nconst ScrollToTop: React.FC<RouteComponentProps> = (props: any) => {\n\n    useEffect(() => {\n      rootElement.scrollTo(0, 0);\n    }, [props.location.pathname]);\n  \n    return props.children;\n};\n  \nexport default withRouter(ScrollToTop);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { SyntheticEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n    CheckCircle as CheckCircleIcon,\n    Error as ErrorIcon,\n    Info as InfoIcon,\n    Close as CloseIcon,\n    Warning as WarningIcon\n} from '@material-ui/icons';\nimport { amber, green } from '@material-ui/core/colors';\nimport {\n    SnackbarContent,\n    Snackbar,\n    IconButton\n} from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { closeMessage } from '@/redux/actions';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n\nexport interface Props {\n    className?: string;\n    message?: string;\n    onClose?: () => void;\n    variant: keyof typeof variantIcon;\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n}\nconst useStyles2 = makeStyles((theme: Theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n}));\n\nfunction Message(props: any) {\n    const classes = useStyles2();\n    const { open, variant, message } = useSelector((state: any) => state.Message);\n    const dispatch = useDispatch();\n\n    function handleClose(event?: SyntheticEvent, reason?: string) {\n      if (reason === 'clickaway') {\n        return;\n      }\n      dispatch(closeMessage());\n    }\n  \n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={open}\n          autoHideDuration={variant === 'error' ? null : 3000}\n          onClose={handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={handleClose}\n            className={classes.margin}\n            variant={variant}\n            message={message}\n          />\n        </Snackbar>\n      </div>\n    );\n};\nexport default Message;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./assets/styles/index.scss\";\nimport Message from '@/components/message';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00c6a0',\n            contrastText: '#fff'\n        },\n        secondary: {\n            // main: '#11cb5f'\n            main: '#fff'\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n            <Message />\n        </ThemeProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport withLayout from \"./components/layout\";\nimport Login from './views/login';\nimport Register from './views/register';\nimport SelectRanch from './views/select-ranch';\nimport Home from './views/home';\nimport Tasks from './views/tasks';\nimport TasksDetail from './views/tasks-detail';\nimport Reports from './views/reports';\nimport ManageList from './views/manage-listing';\nimport ReviewDetail from './views/review-detail';\nimport ViewCowshed from './views/view-cowshed';\nimport SceneReport from './views/scene-report';\nimport SearchCow from './views/search-cow';\nimport CowDetail from './views/cow-detail';\nimport SceneReportDetail from './views/scene-report-detail';\nimport CommonSelectList from '@/views/common-select-list';\nimport User from './views/user';\nimport TaskDetail2 from './views/task-detail2';\nimport ScrollToTop from './components/scroll-to-top';\n\nexport default () => {\n    return (\n        <HashRouter>\n            <ScrollToTop>\n                {/* 登录注册 */}\n                <Route path=\"/login\" component={Login} />   \n                <Route path=\"/register\" component={Register} />\n\n                {/* 选择牧场 */}\n                <Route path=\"/selectRanch\" component={SelectRanch} />  \n\n                {/* 首页以及首页的几个入口 */}\n                <Route path={[\"/\", \"/home\", \"/index\"]} exact component={withLayout(Home)} />\n                <Route path=\"/manageList/:type\" component={ManageList} />\n                <Route path=\"/sceneReport\" component={SceneReport} /> \n                <Route path=\"/SceneReportDetail\" component={SceneReportDetail} /> \n\n                {/* 底部导航栏入口 */}\n                <Route path=\"/tasks\" component={withLayout(Tasks)} />   \n                <Route path=\"/reports\" component={withLayout(Reports)} />\n                <Route path=\"/search\" component={withLayout(SearchCow)} />\n                <Route path=\"/cowDetail/:id\" component={withLayout(CowDetail)} />\n\n                <Route path=\"/reviewDetail/:ranchType/:reviewType\" component={ReviewDetail} />\n                <Route path=\"/viewCowshed/:ranchType\" component={ViewCowshed} />\n                <Route path=\"/tasksDetail\" component={TasksDetail} />\n                <Route path=\"/tasksDetail2/:id\" component={TaskDetail2} />\n                \n                {/* 用户信息入口 */}\n                <Route path=\"/user\" component={User} /> \n                {/* 选择用户，选择牛只，选择牛舍 */}\n                <Route path=\"/commonSelectList/:type\" component={CommonSelectList} />\n            </ScrollToTop>\n        </HashRouter>\n    );\n};\n"],"sourceRoot":""}